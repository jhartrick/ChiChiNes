{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 3067458d416bda73aae5","webpack:///./emulator.worker.ts","webpack:///F:/Projects/2017/chichines/chichilib/chichi.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oCAAoC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,wGAAwG;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,0GAA0G;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,4BAA4B,qBAAqB,EAAE,mB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC3TA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0BAA0B,EAAE;AAC/D,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA,8DAA8D,+DAA+D;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,mDAAmD;AACxE;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wBAAwB,QAAQ;AAChC;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,cAAc;AACjuDAAuD,OAAO;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,GAAG;AACH;AACA,eAAe,SAAS;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B;;AAE5B,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qFAAqF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA,2DAA2D;AAC3D;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,QAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0BAA0B,QAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA,6DAA6D;AAC7D;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;AACP;AACA;;AAEA;;;AAGA;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO;AACP;AACA;;AAEA;;;AAGA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4EAA4E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6GAA6G;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,YAAY;AACrC;AACA;AACA;AACA,yBAAyB,UAAU;AACnC;AACA,W;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,uBAAucAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,0JAA0J;AAC1M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,wJAAwJ;AACxM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE,uBAAuB,iCAAiC;AACxD;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,SAAS;AAClC;AACA;AACA;AACA;AACA,gCAAgC,0CAA0C;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE,gEAAgE;AAChE,mEAAmE,aAAa;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,uBAAuB;AACriCAAiC;AACjC,gDAAgD,8BAA8B;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qCAAqC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,uDAAuD,6BAA6B,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI,EAAE,IAAI,EAAE,IAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,UAAU;AACjyuDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvquBAAuB,YAAY;AACnuBAAuB,6BAA6B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;AACP;AACA;;AAEA;AACA;AACA,8CAA8C,cAAcwCAAwC;AACxC,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2GAA2G;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wHAAwH;AACxH;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA,4BAA4B;;AAE5B,OAAO;AACP;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;AAGA,OAAO;AACP;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,SAAS;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,UAAU;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,QAAQ,WAAW;;AAEnB;AACA;AACA,QAAQ,UAAU;;AAElB;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA,iBAAiB;;AAEjB;AACA;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,OAAO;AAChqBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAcgBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E,6DAA6D;AAC7D;AACA;AACA;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChgBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mHAAmH;AACnH;AACA;AACA;AACA,mHAAmH;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;AACP;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;;AAEA;AACA;;AAEA,qBAAqB,oBAAoB;AACzC;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED,OAAO;AACP;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,qBAAqB,oBAAoB;AACzC;AACA;AACA;;AAEA;AACA,CAAC;;AAED,OAAO;AACP;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,qBAAqB,oBAAoB;AACzC;AACA;AACA;;AAEA;AACA,CAAC;;AAED,OAAO;AACP;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,qBAAqB,oBAAoB;AACzC;AACA;AACA;;AAEA;AACA,CAAC;;AAED,OAAO;AACP;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,qBAAqB,oBAAoB;AACzC;AACA;AACA;;AAEA;AACA,CAAC;;AAED,OAAO;AACP;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,qBAAqB,oBAAoB;AACzC;AACA;AACA;;AAEA;AACA,CAAC;;AAED,OAAO;AACP;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;;AAEA;;AAEA,qBAAqB,oBAAoB;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED,OAAO;AACP;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,qBAAqB,oBAAoB;AACzC;AACA;AACA;;AAEA;AACA,CAAC;;AAED,OAAO;AACP;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,qBAAqB,oBAAoB;AACzC;AACA;AACA;;AAEA;AACA,CAAC;;AAED,OAAO;AACP;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,qBAAqB,oBAAoB;AACzC;AACA;AACA;;AAEA;AACA,CAAC;;AAED,OAAO;AACP;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,qBAAqB,oBAAoB;AACzC;AACA;AACA;;AAEA;AACA,CAAC;;AAED,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,uBAAuB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,+BAA+B,EAAE;AACzG,uEAAuE,+BAA+B,EAAE;AACxG,yEAAyE,+BAA+B,EAAE;AAC1G;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;AACP;AACA;;AAEA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxfile":"emulator.worker.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"emulator.worker\"] = factory();\n\telse\n\t\troot[\"emulator.worker\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3067458d416bda73aae5","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar chichi_1 = require(\"chichi\");\r\nvar NesInfo = (function () {\r\n    function NesInfo() {\r\n        this.bufferupdate = false;\r\n        this.stateupdate = true;\r\n        this.runStatus = {};\r\n        this.cartInfo = {};\r\n        this.sound = {};\r\n        this.Cpu = {};\r\n        this.Cart = {};\r\n        this.debug = {\r\n            currentCpuStatus: {\r\n                PC: 0,\r\n                A: 0,\r\n                X: 0,\r\n                Y: 0,\r\n                SP: 0,\r\n                SR: 0\r\n            },\r\n            currentPPUStatus: {}\r\n        };\r\n    }\r\n    return NesInfo;\r\n}());\r\nvar tendoWrapper = (function () {\r\n    function tendoWrapper() {\r\n        this.framesRendered = 0;\r\n        this.startTime = 0;\r\n        this.runTimeout = 0;\r\n        this.Debugging = false;\r\n        this.frameFinished = false;\r\n        this.ready = false;\r\n        this.framesPerSecond = 0;\r\n        this.iops = new Int32Array(16);\r\n        this.cartName = 'unk';\r\n        this.sharedAudioBufferPos = 0;\r\n        this.audioBytesWritten = 0;\r\n        this.buffers = {};\r\n        this.machine = new chichi_1.ChiChiMachine();\r\n    }\r\n    tendoWrapper.prototype.createMachine = function () {\r\n        var _this = this;\r\n        this.machine = new chichi_1.ChiChiMachine();\r\n        this.machine.Cpu.ppu.byteOutBuffer = this.buffers.vbuffer;\r\n        this.machine.SoundBopper.writer.SharedBuffer = this.buffers.abuffer;\r\n        this.machine.SoundBopper.audioSettings = this.buffers.audioSettings;\r\n        this.machine.Drawscreen = function () {\r\n            // flush audio\r\n            // globals.postMessage({ frame: true, fps: framesPerSecond });\r\n        };\r\n        this.ready = true;\r\n        this.machine.Cpu.addDebugEvent(function () {\r\n            var info = new NesInfo();\r\n            info.debug = {\r\n                currentCpuStatus: _this.machine.Cpu.GetStatus ? _this.machine.Cpu.GetStatus() : {\r\n                    PC: 0,\r\n                    A: 0,\r\n                    X: 0,\r\n                    Y: 0,\r\n                    SP: 0,\r\n                    SR: 0\r\n                },\r\n                currentPPUStatus: _this.machine.ppu.GetPPUStatus ? _this.machine.ppu.GetPPUStatus() : {},\r\n                InstructionHistory: {\r\n                    Buffer: _this.machine.Cpu.InstructionHistory.slice(0),\r\n                    Index: _this.machine.Cpu.InstructionHistoryPointer,\r\n                    Finish: false\r\n                }\r\n            };\r\n            postMessage(info);\r\n            //this.updateState();\r\n        });\r\n        this.machine.Cpu.Debugging = false;\r\n    };\r\n    tendoWrapper.prototype.updateBuffers = function () {\r\n        var machine = this.machine;\r\n        var info = new NesInfo();\r\n        info.bufferupdate = true;\r\n        info.stateupdate = false;\r\n        if (this.machine && this.machine.Cart) {\r\n            info.Cpu = {\r\n                Rams: this.machine.Cpu.Rams,\r\n                spriteRAM: this.machine.Cpu.ppu.spriteRAM\r\n            };\r\n            info.Cart = {\r\n                //buffers\r\n                chrRom: this.machine.Cart.chrRom,\r\n                prgRomBank6: this.machine.Cart.prgRomBank6,\r\n                ppuBankStarts: this.machine.Cart.ppuBankStarts,\r\n                bankStartCache: this.machine.Cart.bankStartCache,\r\n            };\r\n            info.sound = {\r\n                waveForms_controlBuffer: this.machine.WaveForms.controlBuffer\r\n            };\r\n        }\r\n        postMessage(info);\r\n    };\r\n    tendoWrapper.prototype.updateState = function () {\r\n        var machine = this.machine;\r\n        var info = new NesInfo();\r\n        if (this.machine && this.machine.Cart) {\r\n            info.Cpu = {\r\n                //Rams: this.machine.Cpu.Rams,\r\n                status: this.machine.Cpu.GetStatus(),\r\n                ppuStatus: this.machine.Cpu.ppu.GetPPUStatus(),\r\n                backgroundPatternTableIndex: this.machine.Cpu.ppu.backgroundPatternTableIndex,\r\n                _PPUControlByte0: this.machine.Cpu.ppu._PPUControlByte0,\r\n                _PPUControlByte1: this.machine.Cpu.ppu._PPUControlByte1\r\n            };\r\n            info.cartInfo = {\r\n                mapperId: this.machine.Cart.MapperID,\r\n                name: this.cartName,\r\n                prgRomCount: this.machine.Cart.NumberOfPrgRoms,\r\n                chrRomCount: this.machine.Cart.NumberOfChrRoms\r\n            };\r\n            info.Cart = {\r\n                //buffers\r\n                //chrRom: (<any>this.machine.Cart).chrRom,\r\n                //prgRomBank6: (<any>this.machine.Cart).prgRomBank6,\r\n                //ppuBankStarts: (<any>this.machine.Cart).ppuBankStarts,\r\n                //bankStartCache: (<any>this.machine.Cart).bankStartCache,\r\n                CurrentBank: this.machine.Cart.CurrentBank,\r\n                // integers\r\n                current8: this.machine.Cart.current8,\r\n                currentA: this.machine.Cart.currentA,\r\n                currentC: this.machine.Cart.currentC,\r\n                currentE: this.machine.Cart.currentE,\r\n                bank8start: this.machine.Cart.bank8start,\r\n                bankAstart: this.machine.Cart.bankAstart,\r\n                bankCstart: this.machine.Cart.bankCstart,\r\n                bankEstart: this.machine.Cart.bankEstart\r\n            };\r\n        }\r\n        if (machine) {\r\n            if (machine.SoundBopper && machine.SoundBopper.audioSettings) {\r\n                info.sound = {\r\n                    soundEnabled: machine.EnableSound,\r\n                    settings: machine.SoundBopper.audioSettings\r\n                };\r\n            }\r\n            if (this.machine.Cpu.Debugging) {\r\n                info.debug = {\r\n                    currentCpuStatus: this.machine.Cpu.GetStatus ? this.machine.Cpu.GetStatus() : {\r\n                        PC: 0,\r\n                        A: 0,\r\n                        X: 0,\r\n                        Y: 0,\r\n                        SP: 0,\r\n                        SR: 0\r\n                    },\r\n                    currentPPUStatus: this.machine.ppu.GetPPUStatus ? this.machine.ppu.GetPPUStatus() : {},\r\n                    InstructionHistory: {\r\n                        Buffer: this.machine.Cpu.InstructionHistory.slice(0),\r\n                        Index: this.machine.Cpu.InstructionHistoryPointer,\r\n                        Finish: true\r\n                    }\r\n                };\r\n            }\r\n        }\r\n        postMessage(info);\r\n    };\r\n    tendoWrapper.prototype.drawScreen = function () { };\r\n    tendoWrapper.prototype.stop = function () {\r\n        clearInterval(this.interval);\r\n        this.machine.PowerOff();\r\n        this.runStatus = this.machine.RunState;\r\n    };\r\n    tendoWrapper.prototype.flushAudio = function () {\r\n        //  debugger;\r\n        var len = this.machine.WaveForms.SharedBufferLength;\r\n        for (var i = 0; i < len; ++i) {\r\n            this.sharedAudioBufferPos++;\r\n            if (this.sharedAudioBufferPos >= this.sharedAudioBuffer.length) {\r\n                this.sharedAudioBufferPos = 0;\r\n            }\r\n            this.sharedAudioBuffer[this.sharedAudioBufferPos] = this.machine.WaveForms.SharedBuffer[i];\r\n            this.audioBytesWritten++;\r\n        }\r\n        while (this.audioBytesWritten >= this.sharedAudioBuffer.length >> 2) {\r\n            Atomics.store(this.iops, 3, this.audioBytesWritten);\r\n            Atomics.wait(this.iops, 3, this.audioBytesWritten);\r\n            this.audioBytesWritten = Atomics.load(this.iops, 3);\r\n        }\r\n    };\r\n    tendoWrapper.prototype.runInnerLoop = function () {\r\n        this.machine.PadOne.padOneState = this.iops[2] & 0xFF;\r\n        this.machine.PadTwo.padOneState = (this.iops[2] >> 8) & 0xFF;\r\n        this.machine.RunFrame();\r\n        this.framesPerSecond = 0;\r\n        //this.flushAudio();\r\n        if ((this.framesRendered++) === 60) {\r\n            // this.updateState();\r\n            this.framesPerSecond = ((this.framesRendered / (new Date().getTime() - this.startTime)) * 1000);\r\n            this.framesRendered = 0;\r\n            this.startTime = new Date().getTime();\r\n            this.iops[1] = this.framesPerSecond;\r\n            // if (this.framesPerSecond < 60 && this.runTimeout > 0) {\r\n            //     this.runTimeout--;\r\n            // } else if (this.runTimeout < 50) {\r\n            //     this.runTimeout++;\r\n            // }\r\n        }\r\n        //this.runInnerLoop();\r\n        //setTimeout(() => { this.runInnerLoop(); }, this.runTimeout); \r\n    };\r\n    tendoWrapper.prototype.run = function (reset) {\r\n        var _this = this;\r\n        this.iops[3] = 12312312;\r\n        var framesRendered = 0;\r\n        var machine = this.machine;\r\n        if (reset) {\r\n            machine.Reset();\r\n        }\r\n        machine.Cpu.Debugging = false;\r\n        this.startTime = new Date().getTime();\r\n        clearInterval(this.interval);\r\n        this.interval = setInterval(function () {\r\n            _this.iops[0] = 1;\r\n            while (_this.iops[0] == 1) {\r\n                _this.runInnerLoop();\r\n            }\r\n        }, 1);\r\n        this.runStatus = machine.RunState; // runStatuses.Running;\r\n    };\r\n    tendoWrapper.prototype.runFrame = function () {\r\n        clearInterval(this.interval);\r\n        this.frameFinished = false;\r\n        var machine = this.machine;\r\n        machine.Cpu.Debugging = this.Debugging;\r\n        // intervalId = setInterval(() => \r\n        machine.RunFrame();\r\n        this.runStatus = this.machine.RunState;\r\n        this.frameFinished = true;\r\n    };\r\n    tendoWrapper.prototype.reset = function () {\r\n        var machine = this.machine;\r\n        //setTimeout(()=>{\r\n        machine.Reset();\r\n        //},16);\r\n        this.runStatus = this.machine.RunState;\r\n    };\r\n    tendoWrapper.prototype.step = function () {\r\n        clearInterval(this.interval);\r\n        var machine = this.machine;\r\n        machine.Cpu.Debugging = this.Debugging;\r\n        machine.Step();\r\n        this.runStatus = this.machine.RunState;\r\n    };\r\n    tendoWrapper.prototype.handleMessage = function (event) {\r\n        var machine = this.machine;\r\n        switch (event.data.command) {\r\n            case 'create':\r\n                this.buffers = event.data;\r\n                this.createMachine();\r\n                //                this.sharedAudioBufferPos = 0;\r\n                this.iops = event.data.iops;\r\n                break;\r\n            case 'cheats':\r\n                this.machine.Cpu.cheating = event.data.cheats.length > 0;\r\n                this.machine.Cpu.genieCodes = event.data.cheats;\r\n                break;\r\n            case 'loadrom':\r\n                this.stop();\r\n                this.machine = undefined;\r\n                this.createMachine();\r\n                this.machine.EnableSound = false;\r\n                //this.createMachine();\r\n                this.machine.LoadCart(event.data.rom);\r\n                this.updateBuffers();\r\n                break;\r\n            case 'loadnsf':\r\n                this.stop();\r\n                //this.createNsfMachine();\r\n                this.updateBuffers();\r\n                break;\r\n            case 'audiosettings':\r\n                this.machine.SoundBopper.audioSettings = event.data.settings;\r\n                break;\r\n            case 'mute':\r\n                this.machine.EnableSound = false;\r\n                break;\r\n            case 'unmute':\r\n                this.machine.EnableSound = true;\r\n                break;\r\n            case 'run':\r\n                this.Debugging = false;\r\n                this.run(true);\r\n                break;\r\n            case 'runframe':\r\n                this.Debugging = true;\r\n                this.runFrame();\r\n                break;\r\n            case 'step':\r\n                this.Debugging = true;\r\n                this.step();\r\n                break;\r\n            case 'continue':\r\n                this.run(false);\r\n                break;\r\n            case 'stop':\r\n                this.machine.EnableSound = false;\r\n                this.stop();\r\n                break;\r\n            case 'reset':\r\n                this.reset();\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        this.updateState();\r\n    };\r\n    return tendoWrapper;\r\n}());\r\nexports.tendoWrapper = tendoWrapper;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./emulator.worker.ts\n// module id = 0\n// module chunks = 0","module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 11);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(13)\nvar ieee754 = __webpack_require__(14)\nvar isArray = __webpack_require__(15)\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12)))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar NameTableMirroring;\r\n(function (NameTableMirroring) {\r\n    NameTableMirroring[NameTableMirroring[\"OneScreen\"] = 0] = \"OneScreen\";\r\n    NameTableMirroring[NameTableMirroring[\"Vertical\"] = 1] = \"Vertical\";\r\n    NameTableMirroring[NameTableMirroring[\"Horizontal\"] = 2] = \"Horizontal\";\r\n    NameTableMirroring[NameTableMirroring[\"FourScreen\"] = 3] = \"FourScreen\";\r\n})(NameTableMirroring = exports.NameTableMirroring || (exports.NameTableMirroring = {}));\r\nvar BaseCart = /** @class */ (function () {\r\n    //ChrRamStart: number;\r\n    function BaseCart() {\r\n        var _this = this;\r\n        this.fourScreen = false;\r\n        this.mapperName = 'base';\r\n        this.supported = true;\r\n        this.submapperId = 0;\r\n        this.mapsBelow6000 = false;\r\n        // shared components\r\n        this.nextEventAt = 0;\r\n        this.prgRomBank6 = new Uint8Array(new SharedArrayBuffer(8192 * Uint8Array.BYTES_PER_ELEMENT));\r\n        this.ppuBankStarts = new Uint32Array(new SharedArrayBuffer(16 * Uint32Array.BYTES_PER_ELEMENT));\r\n        this.bankStartCache = new Uint32Array(new SharedArrayBuffer(4096 * Uint32Array.BYTES_PER_ELEMENT));\r\n        this.iNesHeader = new Uint8Array(16);\r\n        this.romControlBytes = new Uint8Array(2);\r\n        this.nesCart = null;\r\n        this.chrRom = null;\r\n        this.current8 = -1;\r\n        this.currentA = -1;\r\n        this.currentC = -1;\r\n        this.currentE = -1;\r\n        this.SRAMCanWrite = false;\r\n        this.SRAMEnabled = false;\r\n        this.SRAMCanSave = false;\r\n        this.prgRomCount = 0;\r\n        this.chrRomOffset = 0;\r\n        this.chrRamStart = 0;\r\n        this.chrRomCount = 0;\r\n        this.mapperId = 0;\r\n        this.bank8start = 0;\r\n        this.bankAstart = 0;\r\n        this.bankCstart = 0;\r\n        this.bankEstart = 0;\r\n        this.ROMHashFunction = null;\r\n        this.checkSum = null;\r\n        this.mirroring = -1;\r\n        this.updateIRQ = function () {\r\n            _this.NMIHandler();\r\n        };\r\n        this.bankSwitchesChanged = false;\r\n        this.oneScreenOffset = 0;\r\n        this.irqRaised = false;\r\n        this.DebugEvents = null;\r\n        //IRQAsserted: boolean;\r\n        //NextEventAt: number;\r\n        //PpuBankStarts: any;\r\n        //BankStartCache: any;\r\n        this.CurrentBank = 0;\r\n        //BankSwitchesChanged: boolean;\r\n        //OneScreenOffset: number;\r\n        this.UsesSRAM = false;\r\n        this.prgRomBank6.fill(0);\r\n        for (var i = 0; i < 16; i = (i + 1) | 0) {\r\n            this.ppuBankStarts[i] = i * 1024;\r\n        }\r\n    }\r\n    BaseCart.prototype.handleNextEvent = function (clock) { };\r\n    ;\r\n    BaseCart.prototype.advanceClock = function (clock) { };\r\n    // compatible with .net array.copy method\r\n    BaseCart.arrayCopy = function (src, spos, dest, dpos, len) {\r\n        if (!dest) {\r\n            throw new Error(\"dest Value cannot be null\");\r\n        }\r\n        if (!src) {\r\n            throw new Error(\"src Value cannot be null\");\r\n        }\r\n        if (spos < 0 || dpos < 0 || len < 0) {\r\n            throw new Error(\"Number was less than the array's lower bound in the first dimension\");\r\n        }\r\n        if (len > (src.length - spos) || len > (dest.length - dpos)) {\r\n            throw new Error(\"Destination array was not long enough. Check destIndex and length, and the array's lower bounds\");\r\n        }\r\n        if (spos < dpos && src === dest) {\r\n            while (--len >= 0) {\r\n                dest[dpos + len] = src[spos + len];\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < len; i++) {\r\n                dest[dpos + i] = src[spos + i];\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(BaseCart.prototype, \"NumberOfPrgRoms\", {\r\n        // external api\r\n        get: function () {\r\n            return this.prgRomCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BaseCart.prototype, \"NumberOfChrRoms\", {\r\n        get: function () {\r\n            return this.chrRomCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BaseCart.prototype, \"MapperID\", {\r\n        get: function () {\r\n            return this.mapperId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BaseCart.prototype, \"MapperName\", {\r\n        get: function () {\r\n            return this.mapperName;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BaseCart.prototype.ClearDebugEvents = function () {\r\n        //this.DebugEvents.clear();\r\n    };\r\n    BaseCart.prototype.LoadiNESCart = function (header, prgRoms, chrRoms, prgRomData, chrRomData, chrRomOffset) {\r\n        this.romControlBytes[0] = header[6];\r\n        this.romControlBytes[1] = header[7];\r\n        this.mapperId = (this.romControlBytes[0] & 240) >> 4;\r\n        this.mapperId = (this.mapperId + (this.romControlBytes[1] & 240)) | 0;\r\n        this.chrRomOffset = chrRomOffset;\r\n        /*\r\n        .NES file format\r\n        ---------------------------------------------------------------------------\r\n        0-3      String \"NES^Z\" used to recognize .NES files.\r\n        4        Number of 16kB ROM banks.\r\n        5        Number of 8kB VROM banks.\r\n        6        bit 0     1 for vertical mirroring, 0 for horizontal mirroring\r\n                bit 1     1 for battery-backed RAM at $6000-$7FFF\r\n                bit 2     1 for a 512-byte trainer at $7000-$71FF\r\n                bit 3     1 for a four-screen VRAM layout\r\n                bit 4-7   Four lower bits of ROM Mapper Type.\r\n        7        bit 0-3   Reserved, must be zeroes!\r\n                bit 4-7   Four higher bits of ROM Mapper Type.\r\n        8-15     Reserved, must be zeroes!\r\n        16-...   ROM banks, in ascending order. If a trainer i6s present, its\r\n                512 bytes precede the ROM bank contents.\r\n        ...-EOF  VROM banks, in ascending order.\r\n        ---------------------------------------------------------------------------\r\n        */\r\n        this.iNesHeader = new Uint8Array(header.slice(0, 16));\r\n        //System.Array.copy(header, 0, this.iNesHeader, 0, header.length);\r\n        this.prgRomCount = prgRoms;\r\n        this.chrRomCount = chrRoms;\r\n        //  this.nesCart = System.Array.init(prgRomData.length, 0, System.Byte);\r\n        // System.Array.copy(prgRomData, 0, this.nesCart, 0, prgRomData.length);\r\n        this.nesCart = new Uint8Array(prgRomData.length);\r\n        BaseCart.arrayCopy(prgRomData, 0, this.nesCart, 0, prgRomData.length);\r\n        if (this.chrRomCount === 0) {\r\n            // chrRom is going to be RAM\r\n            chrRomData = new Uint8Array(32768); //System.Array.init(32768, 0, System.Byte);\r\n            chrRomData.fill(0);\r\n        }\r\n        var chrRomBuffer = new SharedArrayBuffer((chrRomData.length + 4096) * Uint8Array.BYTES_PER_ELEMENT);\r\n        this.chrRom = new Uint8Array(chrRomBuffer); //     System.Array.init(((chrRomData.length + 4096) | 0), 0, System.Int32);\r\n        this.chrRamStart = chrRomData.length;\r\n        BaseCart.arrayCopy(chrRomData, 0, this.chrRom, 0, chrRomData.length);\r\n        this.prgRomCount = this.iNesHeader[4];\r\n        this.chrRomCount = this.iNesHeader[5];\r\n        this.romControlBytes[0] = this.iNesHeader[6];\r\n        this.romControlBytes[1] = this.iNesHeader[7];\r\n        this.SRAMCanSave = (this.romControlBytes[0] & 2) === 2;\r\n        this.SRAMEnabled = true;\r\n        this.UsesSRAM = (this.romControlBytes[0] & 2) === 2;\r\n        // rom0.0=0 is horizontal mirroring, rom0.0=1 is vertical mirroring\r\n        // by default  have to call Mirror() at least once to set up the bank offsets\r\n        this.Mirror(0, 0);\r\n        if ((this.romControlBytes[0] & 1) === 1) {\r\n            this.Mirror(0, 1);\r\n        }\r\n        else {\r\n            this.Mirror(0, 2);\r\n        }\r\n        this.fourScreen = (this.romControlBytes[0] & 8) === 8;\r\n        if ((this.romControlBytes[0] & 8) === 8) {\r\n            this.Mirror(0, 3);\r\n        }\r\n        this.checkSum = \"\"; //ROMHashFunction(nesCart, chrRom);\r\n        this.InitializeCart();\r\n    };\r\n    BaseCart.prototype.GetByte = function (clock, address) {\r\n        var bank = 0;\r\n        switch (address & 0xE000) {\r\n            case 0x6000:\r\n                return this.prgRomBank6[address & 0x1FFF];\r\n            case 0x8000:\r\n                bank = this.bank8start;\r\n                break;\r\n            case 0xA000:\r\n                bank = this.bankAstart;\r\n                break;\r\n            case 0xC000:\r\n                bank = this.bankCstart;\r\n                break;\r\n            case 0xE000:\r\n                bank = this.bankEstart;\r\n                break;\r\n        }\r\n        return this.nesCart[bank + (address & 0x1FFF)];\r\n    };\r\n    BaseCart.prototype.SetByte = function (clock, address, data) {\r\n        // throw new Error('Method not implemented.');\r\n    };\r\n    BaseCart.prototype.GetPPUByte = function (clock, address) {\r\n        var bank = address >> 10;\r\n        var newAddress = this.ppuBankStarts[bank] + (address & 0x3FF);\r\n        //while (newAddress > chrRamStart)\r\n        //{\r\n        //    newAddress -= chrRamStart;\r\n        //}\r\n        return this.chrRom[newAddress];\r\n    };\r\n    BaseCart.prototype.SetPPUByte = function (clock, address, data) {\r\n        var bank = address >> 10; //, 1024)) | 0;\r\n        var newAddress = this.ppuBankStarts[bank] + (address & 0x3FF);\r\n        this.chrRom[newAddress] = data;\r\n    };\r\n    BaseCart.prototype.SetupBankStarts = function (reg8, regA, regC, regE) {\r\n        reg8 = this.MaskBankAddress(reg8);\r\n        regA = this.MaskBankAddress(regA);\r\n        regC = this.MaskBankAddress(regC);\r\n        regE = this.MaskBankAddress(regE);\r\n        this.current8 = reg8;\r\n        this.currentA = regA;\r\n        this.currentC = regC;\r\n        this.currentE = regE;\r\n        this.bank8start = reg8 * 8192;\r\n        this.bankAstart = regA * 8192;\r\n        this.bankCstart = regC * 8192;\r\n        this.bankEstart = regE * 8192;\r\n    };\r\n    BaseCart.prototype.MaskBankAddress = function (bank) {\r\n        if (bank >= this.prgRomCount * 2) {\r\n            var i = 255;\r\n            while ((bank & i) >= this.prgRomCount * 2) {\r\n                i = i >> 1;\r\n            }\r\n            return (bank & i);\r\n        }\r\n        else {\r\n            return bank;\r\n        }\r\n    };\r\n    BaseCart.prototype.WriteState = function (state) {\r\n        // throw new Error('Method not implemented.');\r\n    };\r\n    BaseCart.prototype.ReadState = function (state) {\r\n        // throw new Error('Method not implemented.');\r\n    };\r\n    BaseCart.prototype.HandleEvent = function (Clock) {\r\n        //  throw new Error('Method not implemented.');\r\n    };\r\n    BaseCart.prototype.ResetClock = function (Clock) {\r\n        // throw new Error('Method not implemented.');\r\n    };\r\n    BaseCart.prototype.ResetBankStartCache = function () {\r\n        // if (currentBank > 0)\r\n        this.CurrentBank = 0;\r\n        // Array.Clear(bankStartCache, 0, 16 * 256 * 256);\r\n        //System.Array.copy(this.ppuBankStarts, 0, this.bankStartCache, 0, 16);\r\n        // this.bankStartCache.fill(0);\r\n        // for (let i = 0; i < 16; ++i) {\r\n        //     this.bankStartCache[i] = this.ppuBankStarts[i];\r\n        // }\r\n        //Mirror(-1, this.mirroring);\r\n        //chrRamStart = ppuBankStarts[8];\r\n        //Array.Copy(ppuBankStarts, 0, bankStartCache[0], 0, 16 * 4);\r\n        //bankSwitchesChanged = false;\r\n    };\r\n    BaseCart.prototype.UpdateBankStartCache = function () {\r\n        this.CurrentBank = 0; // (this.CurrentBank + 1) | 0;\r\n        // for (let i = 0; i < 16; ++i) {\r\n        //     this.bankStartCache[(this.CurrentBank * 16) + i] = this.ppuBankStarts[i];\r\n        // }\r\n        //System.Array.copy(this.ppuBankStarts, 0, this.bankStartCache, this.CurrentBank * 16, 16);\r\n        this.Whizzler.UpdatePixelInfo();\r\n        return this.CurrentBank;\r\n    };\r\n    BaseCart.prototype.ActualChrRomOffset = function (address) {\r\n        var bank = address >> 10 | 0;\r\n        //int newAddress = ppuBankStarts[bank] + (address & 0x3FF);\r\n        var newAddress = (this.bankStartCache[(this.CurrentBank * 16) + bank] + (address & 1023));\r\n        return newAddress;\r\n    };\r\n    BaseCart.prototype.Mirror = function (clockNum, mirroring) {\r\n        //    //            A11 A10 Effect\r\n        //    //----------------------------------------------------------\r\n        //    // 0   0  All four screen buffers are mapped to the same\r\n        //    //        area of memory which repeats at $2000, $2400,\r\n        //    //        $2800, and $2C00.\r\n        //    // 0   x  \"Upper\" and \"lower\" screen buffers are mapped to\r\n        //    //        separate areas of memory at $2000, $2400 and\r\n        //    //        $2800, $2C00. ( horizontal mirroring)\r\n        //    // x   0  \"Left\" and \"right\" screen buffers are mapped to\r\n        //    //        separate areas of memory at $2000, $2800 and\r\n        //    //        $2400,$2C00.  (vertical mirroring)\r\n        //    // x   x  All four screen buffers are mapped to separate\r\n        //    //        areas of memory. In this case, the cartridge\r\n        //    //        must contain 2kB of additional VRAM \r\n        this.mirroring = mirroring;\r\n        if (clockNum > -1) {\r\n            this.Whizzler.DrawTo(clockNum);\r\n        }\r\n        //Console.WriteLine(\"Mirroring set to {0}\", mirroring);\r\n        switch (mirroring) {\r\n            case 0:\r\n                this.ppuBankStarts[8] = (((this.chrRamStart + 0) | 0) + this.oneScreenOffset) | 0;\r\n                this.ppuBankStarts[9] = (((this.chrRamStart + 0) | 0) + this.oneScreenOffset) | 0;\r\n                this.ppuBankStarts[10] = (((this.chrRamStart + 0) | 0) + this.oneScreenOffset) | 0;\r\n                this.ppuBankStarts[11] = (((this.chrRamStart + 0) | 0) + this.oneScreenOffset) | 0;\r\n                break;\r\n            case 1:\r\n                this.ppuBankStarts[8] = (this.chrRamStart + 0) | 0;\r\n                this.ppuBankStarts[9] = (this.chrRamStart + 1024) | 0;\r\n                this.ppuBankStarts[10] = (this.chrRamStart + 0) | 0;\r\n                this.ppuBankStarts[11] = (this.chrRamStart + 1024) | 0;\r\n                break;\r\n            case 2:\r\n                this.ppuBankStarts[8] = (this.chrRamStart + 0) | 0;\r\n                this.ppuBankStarts[9] = (this.chrRamStart + 0) | 0;\r\n                this.ppuBankStarts[10] = (this.chrRamStart + 1024) | 0;\r\n                this.ppuBankStarts[11] = (this.chrRamStart + 1024) | 0;\r\n                break;\r\n            case 3:\r\n                this.ppuBankStarts[8] = (this.chrRamStart + 0) | 0;\r\n                this.ppuBankStarts[9] = (this.chrRamStart + 1024) | 0;\r\n                this.ppuBankStarts[10] = (this.chrRamStart + 2048) | 0;\r\n                this.ppuBankStarts[11] = (this.chrRamStart + 3072) | 0;\r\n                break;\r\n        }\r\n        this.UpdateBankStartCache();\r\n        this.Whizzler.UpdatePixelInfo();\r\n    };\r\n    // utility functions used by mappers\r\n    // CopyBanksXX sets up chrRom bankswitching\r\n    BaseCart.prototype.CopyBanks = function (clock, dest, src, numberOf8kBanks) {\r\n        if (dest >= this.chrRomCount) {\r\n            dest = this.chrRomCount - 1;\r\n        }\r\n        var oneKsrc = src << 3;\r\n        var oneKdest = dest << 3;\r\n        //TODO: get whizzler reading ram from INesCart.GetPPUByte then be calling this\r\n        //  setup ppuBankStarts in 0x400 block chunks \r\n        for (var i = 0; i < (numberOf8kBanks << 3); i++) {\r\n            this.ppuBankStarts[oneKdest + i] = (oneKsrc + i) * 1024;\r\n        }\r\n        this.UpdateBankStartCache();\r\n    };\r\n    BaseCart.prototype.CopyBanks4k = function (clock, dest, src, numberOf4kBanks) {\r\n        if (dest >= this.chrRomCount) {\r\n            dest = this.chrRomCount - 1;\r\n        }\r\n        var oneKsrc = src << 2;\r\n        var oneKdest = dest << 2;\r\n        //TODO: get whizzler reading ram from INesCart.GetPPUByte then be calling this\r\n        //  setup ppuBankStarts in 0x400 block chunks \r\n        for (var i = 0; i < (numberOf4kBanks << 2); i++) {\r\n            this.ppuBankStarts[oneKdest + i] = (oneKsrc + i) * 1024;\r\n        }\r\n        this.UpdateBankStartCache();\r\n    };\r\n    BaseCart.prototype.CopyBanks2k = function (clock, dest, src, numberOf2kBanks) {\r\n        if (dest >= this.chrRomCount) {\r\n            dest = this.chrRomCount - 1;\r\n        }\r\n        var oneKsrc = src << 1;\r\n        var oneKdest = dest << 1;\r\n        //TODO: get whizzler reading ram from INesCart.GetPPUByte then be calling this\r\n        //  setup ppuBankStarts in 0x400 block chunks \r\n        for (var i = 0; i < (numberOf2kBanks << 1); i++) {\r\n            this.ppuBankStarts[oneKdest + i] = (oneKsrc + i) * 1024;\r\n        }\r\n        this.UpdateBankStartCache();\r\n    };\r\n    BaseCart.prototype.CopyBanks1k = function (clock, dest, src, numberOf1kBanks) {\r\n        if (dest >= this.chrRomCount) {\r\n            dest = this.chrRomCount - 1;\r\n        }\r\n        var oneKsrc = src;\r\n        var oneKdest = dest;\r\n        //TODO: get whizzler reading ram from INesCart.GetPPUByte then be calling this\r\n        //  setup ppuBankStarts in 0x400 block chunks \r\n        for (var i = 0; i < numberOf1kBanks; i++) {\r\n            this.ppuBankStarts[oneKdest + i] = (oneKsrc + i) * 1024;\r\n        }\r\n        this.UpdateBankStartCache();\r\n    };\r\n    BaseCart.prototype.InitializeCart = function () {\r\n        //throw new Error('Method not implemented.');\r\n    };\r\n    BaseCart.prototype.UpdateScanlineCounter = function () {\r\n        //throw new Error('Method not implemented.');\r\n    };\r\n    return BaseCart;\r\n}());\r\nexports.BaseCart = BaseCart;\r\nvar BaseCart4k = /** @class */ (function () {\r\n    //ChrRamStart: number;\r\n    function BaseCart4k() {\r\n        var _this = this;\r\n        this.mapperName = 'base';\r\n        this.supported = true;\r\n        this.submapperId = 0;\r\n        this.mapsBelow6000 = false;\r\n        this.nextEventAt = 0;\r\n        // compatible with .net array.copy method\r\n        // shared components\r\n        this.prgRomBank6 = new Uint8Array(new SharedArrayBuffer(8192 * Uint8Array.BYTES_PER_ELEMENT));\r\n        this.ppuBankStarts = new Uint32Array(new SharedArrayBuffer(16 * Uint32Array.BYTES_PER_ELEMENT));\r\n        this.bankStartCache = new Uint32Array(new SharedArrayBuffer(4096 * Uint32Array.BYTES_PER_ELEMENT));\r\n        this.iNesHeader = new Uint8Array(16);\r\n        this.romControlBytes = new Uint8Array(2);\r\n        this.nesCart = null;\r\n        this.chrRom = null;\r\n        this.current8 = -1;\r\n        this.current9 = -1;\r\n        this.currentA = -1;\r\n        this.currentB = -1;\r\n        this.currentC = -1;\r\n        this.currentD = -1;\r\n        this.currentE = -1;\r\n        this.currentF = -1;\r\n        this.SRAMCanWrite = false;\r\n        this.SRAMEnabled = false;\r\n        this.SRAMCanSave = false;\r\n        this.prgRomCount = 0;\r\n        this.chrRomOffset = 0;\r\n        this.chrRamStart = 0;\r\n        this.chrRomCount = 0;\r\n        this.mapperId = 0;\r\n        this.bank8start = 0;\r\n        this.bank9start = 0;\r\n        this.bankAstart = 0;\r\n        this.bankBstart = 0;\r\n        this.bankCstart = 0;\r\n        this.bankDstart = 0;\r\n        this.bankEstart = 0;\r\n        this.bankFstart = 0;\r\n        this.ROMHashFunction = null;\r\n        this.checkSum = null;\r\n        this.mirroring = -1;\r\n        this.updateIRQ = function () {\r\n            _this.NMIHandler();\r\n        };\r\n        this.bankSwitchesChanged = false;\r\n        this.oneScreenOffset = 0;\r\n        this.irqRaised = false;\r\n        this.DebugEvents = null;\r\n        //IRQAsserted: boolean;\r\n        //NextEventAt: number;\r\n        //PpuBankStarts: any;\r\n        //BankStartCache: any;\r\n        this.CurrentBank = 0;\r\n        //BankSwitchesChanged: boolean;\r\n        //OneScreenOffset: number;\r\n        this.UsesSRAM = false;\r\n        this.prgRomBank6.fill(0);\r\n        for (var i = 0; i < 16; i = (i + 1) | 0) {\r\n            this.ppuBankStarts[i] = i * 1024;\r\n        }\r\n    }\r\n    BaseCart4k.prototype.handleNextEvent = function (clock) { };\r\n    ;\r\n    BaseCart4k.prototype.advanceClock = function (clock) { };\r\n    Object.defineProperty(BaseCart4k.prototype, \"NumberOfPrgRoms\", {\r\n        // external api\r\n        get: function () {\r\n            return this.prgRomCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BaseCart4k.prototype, \"NumberOfChrRoms\", {\r\n        get: function () {\r\n            return this.chrRomCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BaseCart4k.prototype, \"MapperID\", {\r\n        get: function () {\r\n            return this.mapperId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BaseCart4k.prototype, \"MapperName\", {\r\n        get: function () {\r\n            return this.mapperName;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BaseCart4k.prototype.ClearDebugEvents = function () {\r\n        //this.DebugEvents.clear();\r\n    };\r\n    BaseCart4k.prototype.LoadiNESCart = function (header, prgRoms, chrRoms, prgRomData, chrRomData, chrRomOffset) {\r\n        this.romControlBytes[0] = header[6];\r\n        this.romControlBytes[1] = header[7];\r\n        this.mapperId = (this.romControlBytes[0] & 240) >> 4;\r\n        this.mapperId = (this.mapperId + (this.romControlBytes[1] & 240)) | 0;\r\n        this.chrRomOffset = chrRomOffset;\r\n        /*\r\n        .NES file format\r\n        ---------------------------------------------------------------------------\r\n        0-3      String \"NES^Z\" used to recognize .NES files.\r\n        4        Number of 16kB ROM banks.\r\n        5        Number of 8kB VROM banks.\r\n        6        bit 0     1 for vertical mirroring, 0 for horizontal mirroring\r\n                bit 1     1 for battery-backed RAM at $6000-$7FFF\r\n                bit 2     1 for a 512-byte trainer at $7000-$71FF\r\n                bit 3     1 for a four-screen VRAM layout\r\n                bit 4-7   Four lower bits of ROM Mapper Type.\r\n        7        bit 0-3   Reserved, must be zeroes!\r\n                bit 4-7   Four higher bits of ROM Mapper Type.\r\n        8-15     Reserved, must be zeroes!\r\n        16-...   ROM banks, in ascending order. If a trainer i6s present, its\r\n                512 bytes precede the ROM bank contents.\r\n        ...-EOF  VROM banks, in ascending order.\r\n        ---------------------------------------------------------------------------\r\n        */\r\n        this.iNesHeader = new Uint8Array(header.slice(0, 16));\r\n        //System.Array.copy(header, 0, this.iNesHeader, 0, header.length);\r\n        this.prgRomCount = prgRoms;\r\n        this.chrRomCount = chrRoms;\r\n        //  this.nesCart = System.Array.init(prgRomData.length, 0, System.Byte);\r\n        // System.Array.copy(prgRomData, 0, this.nesCart, 0, prgRomData.length);\r\n        this.nesCart = new Uint8Array(prgRomData.length);\r\n        BaseCart.arrayCopy(prgRomData, 0, this.nesCart, 0, prgRomData.length);\r\n        if (this.chrRomCount === 0) {\r\n            // chrRom is going to be RAM\r\n            chrRomData = new Uint8Array(32768); //System.Array.init(32768, 0, System.Byte);\r\n            chrRomData.fill(0);\r\n        }\r\n        var chrRomBuffer = new SharedArrayBuffer((chrRomData.length + 4096) * Uint8Array.BYTES_PER_ELEMENT);\r\n        this.chrRom = new Uint8Array(chrRomBuffer); //     System.Array.init(((chrRomData.length + 4096) | 0), 0, System.Int32);\r\n        this.chrRamStart = chrRomData.length;\r\n        BaseCart.arrayCopy(chrRomData, 0, this.chrRom, 0, chrRomData.length);\r\n        this.prgRomCount = this.iNesHeader[4];\r\n        this.chrRomCount = this.iNesHeader[5];\r\n        this.romControlBytes[0] = this.iNesHeader[6];\r\n        this.romControlBytes[1] = this.iNesHeader[7];\r\n        this.SRAMCanSave = (this.romControlBytes[0] & 2) === 2;\r\n        this.SRAMEnabled = true;\r\n        this.UsesSRAM = (this.romControlBytes[0] & 2) === 2;\r\n        // rom0.0=0 is horizontal mirroring, rom0.0=1 is vertical mirroring\r\n        // by default  have to call Mirror() at least once to set up the bank offsets\r\n        this.Mirror(0, 0);\r\n        if ((this.romControlBytes[0] & 1) === 1) {\r\n            this.Mirror(0, 1);\r\n        }\r\n        else {\r\n            this.Mirror(0, 2);\r\n        }\r\n        if ((this.romControlBytes[0] & 8) === 8) {\r\n            this.Mirror(0, 3);\r\n        }\r\n        this.checkSum = \"\"; //ROMHashFunction(nesCart, chrRom);\r\n        this.InitializeCart();\r\n    };\r\n    BaseCart4k.prototype.GetByte = function (clock, address) {\r\n        var bank = 0;\r\n        switch (address & 0xF000) {\r\n            case 0x6000:\r\n            case 0x7000:\r\n                return this.prgRomBank6[address & 0x1FFF];\r\n            case 0x8000:\r\n                bank = this.bank8start;\r\n                break;\r\n            case 0x9000:\r\n                bank = this.bank9start;\r\n                break;\r\n            case 0xA000:\r\n                bank = this.bankAstart;\r\n                break;\r\n            case 0xB000:\r\n                bank = this.bankBstart;\r\n                break;\r\n            case 0xC000:\r\n                bank = this.bankCstart;\r\n                break;\r\n            case 0xD000:\r\n                bank = this.bankDstart;\r\n                break;\r\n            case 0xE000:\r\n                bank = this.bankEstart;\r\n                break;\r\n            case 0xF000:\r\n                bank = this.bankFstart;\r\n                break;\r\n        }\r\n        return this.nesCart[bank + (address & 0xFFF)];\r\n    };\r\n    BaseCart4k.prototype.SetByte = function (clock, address, data) {\r\n        // throw new Error('Method not implemented.');\r\n    };\r\n    BaseCart4k.prototype.GetPPUByte = function (clock, address) {\r\n        var bank = address >> 10;\r\n        var newAddress = this.ppuBankStarts[bank] + (address & 0x3FF);\r\n        return this.chrRom[newAddress];\r\n    };\r\n    BaseCart4k.prototype.SetPPUByte = function (clock, address, data) {\r\n        var bank = address >> 10; //, 1024)) | 0;\r\n        var newAddress = this.ppuBankStarts[bank] + (address & 0x3FF);\r\n        this.chrRom[newAddress] = data;\r\n    };\r\n    BaseCart4k.prototype.SetupBankStarts = function (reg8, reg9, regA, regB, regC, regD, regE, regF) {\r\n        this.current8 = reg8 = this.maskBankAddress(reg8);\r\n        this.current9 = reg9 = this.maskBankAddress(reg9);\r\n        this.currentA = regA = this.maskBankAddress(regA);\r\n        this.currentB = regB = this.maskBankAddress(regB);\r\n        this.currentC = regC = this.maskBankAddress(regC);\r\n        this.currentD = regD = this.maskBankAddress(regD);\r\n        this.currentE = regE = this.maskBankAddress(regE);\r\n        this.currentF = regF = this.maskBankAddress(regF);\r\n        this.bank8start = reg8 * 4096;\r\n        this.bank9start = reg9 * 4096;\r\n        this.bankAstart = regA * 4096;\r\n        this.bankBstart = regB * 4096;\r\n        this.bankCstart = regC * 4096;\r\n        this.bankDstart = regD * 4096;\r\n        this.bankEstart = regE * 4096;\r\n        this.bankFstart = regF * 4096;\r\n    };\r\n    BaseCart4k.prototype.maskBankAddress = function (bank) {\r\n        if (bank >= this.prgRomCount * 4) {\r\n            var i = 0xFFFF;\r\n            while ((bank & i) >= this.prgRomCount * 4) {\r\n                i = i >> 1;\r\n            }\r\n            return (bank & i);\r\n        }\r\n        else {\r\n            return bank;\r\n        }\r\n    };\r\n    BaseCart4k.prototype.WriteState = function (state) {\r\n        // throw new Error('Method not implemented.');\r\n    };\r\n    BaseCart4k.prototype.ReadState = function (state) {\r\n        // throw new Error('Method not implemented.');\r\n    };\r\n    BaseCart4k.prototype.HandleEvent = function (Clock) {\r\n        //  throw new Error('Method not implemented.');\r\n    };\r\n    BaseCart4k.prototype.ResetClock = function (Clock) {\r\n        // throw new Error('Method not implemented.');\r\n    };\r\n    BaseCart4k.prototype.ResetBankStartCache = function () {\r\n        // if (currentBank > 0)\r\n        this.CurrentBank = 0;\r\n        // Array.Clear(bankStartCache, 0, 16 * 256 * 256);\r\n        //System.Array.copy(this.ppuBankStarts, 0, this.bankStartCache, 0, 16);\r\n        this.bankStartCache.fill(0);\r\n        for (var i = 0; i < 16; ++i) {\r\n            this.bankStartCache[i] = this.ppuBankStarts[i];\r\n        }\r\n        //Mirror(-1, this.mirroring);\r\n        //chrRamStart = ppuBankStarts[8];\r\n        //Array.Copy(ppuBankStarts, 0, bankStartCache[0], 0, 16 * 4);\r\n        //bankSwitchesChanged = false;\r\n    };\r\n    BaseCart4k.prototype.UpdateBankStartCache = function () {\r\n        this.CurrentBank = 0; // (this.CurrentBank + 1) | 0;\r\n        for (var i = 0; i < 16; ++i) {\r\n            this.bankStartCache[(this.CurrentBank * 16) + i] = this.ppuBankStarts[i];\r\n        }\r\n        //System.Array.copy(this.ppuBankStarts, 0, this.bankStartCache, this.CurrentBank * 16, 16);\r\n        this.Whizzler.UpdatePixelInfo();\r\n        return this.CurrentBank;\r\n    };\r\n    BaseCart4k.prototype.ActualChrRomOffset = function (address) {\r\n        var bank = address >> 10 | 0;\r\n        //int newAddress = ppuBankStarts[bank] + (address & 0x3FF);\r\n        var newAddress = (this.bankStartCache[(this.CurrentBank * 16) + bank] + (address & 1023));\r\n        return newAddress;\r\n    };\r\n    BaseCart4k.prototype.Mirror = function (clockNum, mirroring) {\r\n        //    //            A11 A10 Effect\r\n        //    //----------------------------------------------------------\r\n        //    // 0   0  All four screen buffers are mapped to the same\r\n        //    //        area of memory which repeats at $2000, $2400,\r\n        //    //        $2800, and $2C00.\r\n        //    // 0   x  \"Upper\" and \"lower\" screen buffers are mapped to\r\n        //    //        separate areas of memory at $2000, $2400 and\r\n        //    //        $2800, $2C00. ( horizontal mirroring)\r\n        //    // x   0  \"Left\" and \"right\" screen buffers are mapped to\r\n        //    //        separate areas of memory at $2000, $2800 and\r\n        //    //        $2400,$2C00.  (vertical mirroring)\r\n        //    // x   x  All four screen buffers are mapped to separate\r\n        //    //        areas of memory. In this case, the cartridge\r\n        //    //        must contain 2kB of additional VRAM \r\n        this.mirroring = mirroring;\r\n        if (clockNum > -1) {\r\n            this.Whizzler.DrawTo(clockNum);\r\n        }\r\n        //Console.WriteLine(\"Mirroring set to {0}\", mirroring);\r\n        switch (mirroring) {\r\n            case 0:\r\n                this.ppuBankStarts[8] = (((this.chrRamStart + 0) | 0) + this.oneScreenOffset) | 0;\r\n                this.ppuBankStarts[9] = (((this.chrRamStart + 0) | 0) + this.oneScreenOffset) | 0;\r\n                this.ppuBankStarts[10] = (((this.chrRamStart + 0) | 0) + this.oneScreenOffset) | 0;\r\n                this.ppuBankStarts[11] = (((this.chrRamStart + 0) | 0) + this.oneScreenOffset) | 0;\r\n                break;\r\n            case 1:\r\n                this.ppuBankStarts[8] = (this.chrRamStart + 0) | 0;\r\n                this.ppuBankStarts[9] = (this.chrRamStart + 1024) | 0;\r\n                this.ppuBankStarts[10] = (this.chrRamStart + 0) | 0;\r\n                this.ppuBankStarts[11] = (this.chrRamStart + 1024) | 0;\r\n                break;\r\n            case 2:\r\n                this.ppuBankStarts[8] = (this.chrRamStart + 0) | 0;\r\n                this.ppuBankStarts[9] = (this.chrRamStart + 0) | 0;\r\n                this.ppuBankStarts[10] = (this.chrRamStart + 1024) | 0;\r\n                this.ppuBankStarts[11] = (this.chrRamStart + 1024) | 0;\r\n                break;\r\n            case 3:\r\n                this.ppuBankStarts[8] = (this.chrRamStart + 0) | 0;\r\n                this.ppuBankStarts[9] = (this.chrRamStart + 1024) | 0;\r\n                this.ppuBankStarts[10] = (this.chrRamStart + 2048) | 0;\r\n                this.ppuBankStarts[11] = (this.chrRamStart + 3072) | 0;\r\n                break;\r\n        }\r\n        this.UpdateBankStartCache();\r\n        this.Whizzler.UpdatePixelInfo();\r\n    };\r\n    // utility functions used by mappers\r\n    // CopyBanksXX sets up chrRom bankswitching\r\n    BaseCart4k.prototype.CopyBanks = function (clock, dest, src, numberOf8kBanks) {\r\n        if (dest >= this.chrRomCount) {\r\n            dest = this.chrRomCount - 1;\r\n        }\r\n        var oneKsrc = src << 3;\r\n        var oneKdest = dest << 3;\r\n        //TODO: get whizzler reading ram from INesCart.GetPPUByte then be calling this\r\n        //  setup ppuBankStarts in 0x400 block chunks \r\n        for (var i = 0; i < (numberOf8kBanks << 3); i++) {\r\n            this.ppuBankStarts[oneKdest + i] = (oneKsrc + i) * 1024;\r\n        }\r\n        this.UpdateBankStartCache();\r\n    };\r\n    BaseCart4k.prototype.CopyBanks4k = function (clock, dest, src, numberOf4kBanks) {\r\n        if (dest >= this.chrRomCount) {\r\n            dest = this.chrRomCount - 1;\r\n        }\r\n        var oneKsrc = src << 2;\r\n        var oneKdest = dest << 2;\r\n        //TODO: get whizzler reading ram from INesCart.GetPPUByte then be calling this\r\n        //  setup ppuBankStarts in 0x400 block chunks \r\n        for (var i = 0; i < (numberOf4kBanks << 2); i++) {\r\n            this.ppuBankStarts[oneKdest + i] = (oneKsrc + i) * 1024;\r\n        }\r\n        this.UpdateBankStartCache();\r\n    };\r\n    BaseCart4k.prototype.CopyBanks2k = function (clock, dest, src, numberOf2kBanks) {\r\n        if (dest >= this.chrRomCount) {\r\n            dest = this.chrRomCount - 1;\r\n        }\r\n        var oneKsrc = src << 1;\r\n        var oneKdest = dest << 1;\r\n        //TODO: get whizzler reading ram from INesCart.GetPPUByte then be calling this\r\n        //  setup ppuBankStarts in 0x400 block chunks \r\n        for (var i = 0; i < (numberOf2kBanks << 1); i++) {\r\n            this.ppuBankStarts[oneKdest + i] = (oneKsrc + i) * 1024;\r\n        }\r\n        this.UpdateBankStartCache();\r\n    };\r\n    BaseCart4k.prototype.CopyBanks1k = function (clock, dest, src, numberOf1kBanks) {\r\n        if (dest >= this.chrRomCount) {\r\n            dest = this.chrRomCount - 1;\r\n        }\r\n        var oneKsrc = src;\r\n        var oneKdest = dest;\r\n        //TODO: get whizzler reading ram from INesCart.GetPPUByte then be calling this\r\n        //  setup ppuBankStarts in 0x400 block chunks \r\n        for (var i = 0; i < numberOf1kBanks; i++) {\r\n            this.ppuBankStarts[oneKdest + i] = (oneKsrc + i) * 1024;\r\n        }\r\n        this.UpdateBankStartCache();\r\n    };\r\n    BaseCart4k.prototype.InitializeCart = function () {\r\n        //throw new Error('Method not implemented.');\r\n    };\r\n    BaseCart4k.prototype.UpdateScanlineCounter = function () {\r\n        //throw new Error('Method not implemented.');\r\n    };\r\n    return BaseCart4k;\r\n}());\r\nexports.BaseCart4k = BaseCart4k;\r\nvar UnsupportedCart = /** @class */ (function (_super) {\r\n    __extends(UnsupportedCart, _super);\r\n    function UnsupportedCart() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.supported = false;\r\n        return _this;\r\n    }\r\n    UnsupportedCart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'unsupported';\r\n        this.SetupBankStarts(0, 1, 2, 3);\r\n        this.Mirror(0, 0);\r\n    };\r\n    return UnsupportedCart;\r\n}(BaseCart));\r\nexports.UnsupportedCart = UnsupportedCart;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _buffer = __webpack_require__(0);\n\nvar createBuffer = _buffer.Buffer.from && _buffer.Buffer.alloc && _buffer.Buffer.allocUnsafe && _buffer.Buffer.allocUnsafeSlow ? _buffer.Buffer.from\n\n// support for Node < 5.10\n: function (val) {\n  return new _buffer.Buffer(val);\n};\n\nexports.default = createBuffer;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (model, calc) {\n  var fn = function fn(buf, previous) {\n    return calc(buf, previous) >>> 0;\n  };\n  fn.signed = calc;\n  fn.unsigned = fn;\n  fn.model = model;\n\n  return fn;\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n// utility classes\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BufferMaker = /** @class */ (function () {\r\n    function BufferMaker() {\r\n    }\r\n    BufferMaker.MakeUint32Array = function (count) {\r\n        return new Uint32Array(count);\r\n    };\r\n    BufferMaker.MakeUint8Array = function (count) {\r\n        return new Uint8Array(count);\r\n    };\r\n    return BufferMaker;\r\n}());\r\nexports.BufferMaker = BufferMaker;\r\nvar RunningStatuses;\r\n(function (RunningStatuses) {\r\n    RunningStatuses[RunningStatuses[\"Unloaded\"] = 0] = \"Unloaded\";\r\n    RunningStatuses[RunningStatuses[\"Off\"] = 1] = \"Off\";\r\n    RunningStatuses[RunningStatuses[\"Running\"] = 2] = \"Running\";\r\n    RunningStatuses[RunningStatuses[\"Frozen\"] = 3] = \"Frozen\";\r\n    RunningStatuses[RunningStatuses[\"Paused\"] = 4] = \"Paused\";\r\n})(RunningStatuses = exports.RunningStatuses || (exports.RunningStatuses = {}));\r\nvar ChiChiCPPU_AddressingModes;\r\n(function (ChiChiCPPU_AddressingModes) {\r\n    ChiChiCPPU_AddressingModes[ChiChiCPPU_AddressingModes[\"Bullshit\"] = 0] = \"Bullshit\";\r\n    ChiChiCPPU_AddressingModes[ChiChiCPPU_AddressingModes[\"Implicit\"] = 1] = \"Implicit\";\r\n    ChiChiCPPU_AddressingModes[ChiChiCPPU_AddressingModes[\"Accumulator\"] = 2] = \"Accumulator\";\r\n    ChiChiCPPU_AddressingModes[ChiChiCPPU_AddressingModes[\"Immediate\"] = 3] = \"Immediate\";\r\n    ChiChiCPPU_AddressingModes[ChiChiCPPU_AddressingModes[\"ZeroPage\"] = 4] = \"ZeroPage\";\r\n    ChiChiCPPU_AddressingModes[ChiChiCPPU_AddressingModes[\"ZeroPageX\"] = 5] = \"ZeroPageX\";\r\n    ChiChiCPPU_AddressingModes[ChiChiCPPU_AddressingModes[\"ZeroPageY\"] = 6] = \"ZeroPageY\";\r\n    ChiChiCPPU_AddressingModes[ChiChiCPPU_AddressingModes[\"Relative\"] = 7] = \"Relative\";\r\n    ChiChiCPPU_AddressingModes[ChiChiCPPU_AddressingModes[\"Absolute\"] = 8] = \"Absolute\";\r\n    ChiChiCPPU_AddressingModes[ChiChiCPPU_AddressingModes[\"AbsoluteX\"] = 9] = \"AbsoluteX\";\r\n    ChiChiCPPU_AddressingModes[ChiChiCPPU_AddressingModes[\"AbsoluteY\"] = 10] = \"AbsoluteY\";\r\n    ChiChiCPPU_AddressingModes[ChiChiCPPU_AddressingModes[\"Indirect\"] = 11] = \"Indirect\";\r\n    ChiChiCPPU_AddressingModes[ChiChiCPPU_AddressingModes[\"IndexedIndirect\"] = 12] = \"IndexedIndirect\";\r\n    ChiChiCPPU_AddressingModes[ChiChiCPPU_AddressingModes[\"IndirectIndexed\"] = 13] = \"IndirectIndexed\";\r\n    ChiChiCPPU_AddressingModes[ChiChiCPPU_AddressingModes[\"IndirectZeroPage\"] = 14] = \"IndirectZeroPage\";\r\n    ChiChiCPPU_AddressingModes[ChiChiCPPU_AddressingModes[\"IndirectAbsoluteX\"] = 15] = \"IndirectAbsoluteX\";\r\n})(ChiChiCPPU_AddressingModes = exports.ChiChiCPPU_AddressingModes || (exports.ChiChiCPPU_AddressingModes = {}));\r\nvar CpuStatus = /** @class */ (function () {\r\n    function CpuStatus() {\r\n        this.PC = 0;\r\n        this.A = 0;\r\n        this.X = 0;\r\n        this.Y = 0;\r\n        this.SP = 0;\r\n        this.SR = 0;\r\n    }\r\n    return CpuStatus;\r\n}());\r\nexports.CpuStatus = CpuStatus;\r\nvar PpuStatus = /** @class */ (function () {\r\n    function PpuStatus() {\r\n        this.status = 0;\r\n        this.controlByte0 = 0;\r\n        this.controlByte1 = 0;\r\n        this.nameTableStart = 0;\r\n        this.currentTile = 0;\r\n        this.lockedVScroll = 0;\r\n        this.lockedHScroll = 0;\r\n        this.X = 0;\r\n        this.Y = 0;\r\n    }\r\n    return PpuStatus;\r\n}());\r\nexports.PpuStatus = PpuStatus;\r\nvar ChiChiInstruction = /** @class */ (function () {\r\n    function ChiChiInstruction() {\r\n        this.AddressingMode = 0;\r\n        this.frame = 0;\r\n        this.time = 0;\r\n        this.A = 0;\r\n        this.X = 0;\r\n        this.Y = 0;\r\n        this.SR = 0;\r\n        this.SP = 0;\r\n        this.Address = 0;\r\n        this.OpCode = 0;\r\n        this.Parameters0 = 0;\r\n        this.Parameters1 = 0;\r\n        this.ExtraTiming = 0;\r\n        this.Length = 0;\r\n    }\r\n    return ChiChiInstruction;\r\n}());\r\nexports.ChiChiInstruction = ChiChiInstruction;\r\nvar ChiChiSprite = /** @class */ (function () {\r\n    function ChiChiSprite() {\r\n        this.YPosition = 0;\r\n        this.XPosition = 0;\r\n        this.SpriteNumber = 0;\r\n        this.Foreground = false;\r\n        this.IsVisible = false;\r\n        this.TileIndex = 0;\r\n        this.AttributeByte = 0;\r\n        this.FlipX = false;\r\n        this.FlipY = false;\r\n        this.Changed = false;\r\n    }\r\n    return ChiChiSprite;\r\n}());\r\nexports.ChiChiSprite = ChiChiSprite;\r\nvar AudioSettings = /** @class */ (function () {\r\n    function AudioSettings() {\r\n        this.sampleRate = 44100;\r\n        this.master_volume = 0.0;\r\n        this.enableSquare0 = true;\r\n        this.enableSquare1 = true;\r\n        this.enableTriangle = true;\r\n        this.enableNoise = true;\r\n        this.enablePCM = true;\r\n    }\r\n    return AudioSettings;\r\n}());\r\nexports.AudioSettings = AudioSettings;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// shared buffer to get sound out\r\nvar WavSharer = /** @class */ (function () {\r\n    function WavSharer() {\r\n        this.NES_BYTES_WRITTEN = 0;\r\n        this.WAVSHARER_BLOCKTHREAD = 1;\r\n        this.WAVSHARER_BUFFERPOS = 2;\r\n        this.controlBuffer = new Int32Array(new SharedArrayBuffer(3 * Int32Array.BYTES_PER_ELEMENT));\r\n        this.sharedAudioBufferPos = 0;\r\n        this.SharedBufferLength = 8192;\r\n        this.chunkSize = 1024;\r\n        this.SharedBuffer = new Float32Array(this.SharedBufferLength);\r\n    }\r\n    Object.defineProperty(WavSharer.prototype, \"bufferPosition\", {\r\n        get: function () {\r\n            return Atomics.load(this.controlBuffer, this.WAVSHARER_BUFFERPOS);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(WavSharer.prototype, \"audioBytesWritten\", {\r\n        get: function () {\r\n            return Atomics.load(this.controlBuffer, this.NES_BYTES_WRITTEN);\r\n        },\r\n        set: function (value) {\r\n            Atomics.store(this.controlBuffer, this.NES_BYTES_WRITTEN, value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WavSharer.prototype.wakeSleepers = function () {\r\n        Atomics.wake(this.controlBuffer, this.NES_BYTES_WRITTEN, 99999);\r\n    };\r\n    WavSharer.prototype.synchronize = function () {\r\n        while (this.audioBytesWritten >= this.chunkSize) {\r\n            Atomics.store(this.controlBuffer, this.WAVSHARER_BUFFERPOS, this.sharedAudioBufferPos);\r\n            Atomics.wait(this.controlBuffer, this.NES_BYTES_WRITTEN, this.audioBytesWritten);\r\n            //this.sharedAudioBufferPos = <any>Atomics.load(this.controlBuffer, this.WAVSHARER_BUFFERPOS);\r\n        }\r\n    };\r\n    WavSharer.sample_size = 1;\r\n    return WavSharer;\r\n}());\r\nexports.WavSharer = WavSharer;\r\n//apu classes\r\nvar blip_buffer_t = /** @class */ (function () {\r\n    function blip_buffer_t(size) {\r\n        this.size = size;\r\n        this.factor = 0;\r\n        this.offset = 0;\r\n        this.avail = 0;\r\n        this.integrator = 0;\r\n        this.time_bits = 0;\r\n        this.arrayLength = 0;\r\n        this.samples = new Array(size);\r\n        this.samples.fill(0);\r\n    }\r\n    return blip_buffer_t;\r\n}());\r\nexports.blip_buffer_t = blip_buffer_t;\r\nvar Blip = /** @class */ (function () {\r\n    // functions\r\n    function Blip(size) {\r\n        this.bass_shift = 8;\r\n        this.end_frame_extra = 2;\r\n        this.half_width = 8;\r\n        this.phase_bits = 5;\r\n        this.blip_new(size);\r\n    }\r\n    Blip.prototype.blip_new = function (size) {\r\n        this.BlipBuffer = new blip_buffer_t(size);\r\n        this.BlipBuffer.size = size;\r\n        this.BlipBuffer.factor = 0;\r\n        this.blip_clear();\r\n    };\r\n    Blip.prototype.blip_set_rates = function (clock_rate, sample_rate) {\r\n        this.BlipBuffer.factor = Blip.time_unit / clock_rate * sample_rate + (0.9999847412109375);\r\n    };\r\n    Blip.prototype.blip_clear = function () {\r\n        this.BlipBuffer.offset = 0;\r\n        this.BlipBuffer.avail = 0;\r\n        this.BlipBuffer.integrator = 0;\r\n        this.BlipBuffer.samples = new Array(this.BlipBuffer.size + Blip.buf_extra);\r\n        this.BlipBuffer.samples.fill(0);\r\n    };\r\n    Blip.prototype.blip_clocks_needed = function (samples) {\r\n        var needed = samples * Blip.time_unit - this.BlipBuffer.offset;\r\n        /* Fails if buffer can't hold that many more samples */\r\n        //assert( s->avail + samples <= s->size );\r\n        return ((needed + this.BlipBuffer.factor - 1) / this.BlipBuffer.factor) | 0;\r\n    };\r\n    Blip.prototype.blip_end_frame = function (t) {\r\n        var off = t * this.BlipBuffer.factor + this.BlipBuffer.offset;\r\n        this.BlipBuffer.avail += off >> Blip.time_bits;\r\n        this.BlipBuffer.offset = off & (Blip.time_unit - 1);\r\n    };\r\n    Blip.prototype.remove_samples = function (count) {\r\n        var remain = this.BlipBuffer.avail + Blip.buf_extra - count;\r\n        this.BlipBuffer.avail -= count;\r\n        this.BlipBuffer.samples.copyWithin(0, count, count + remain);\r\n        //for (let i = 0; i < remain; i++) {\r\n        //     this.BlipBuffer.samples[count + i] = this.BlipBuffer.samples[i];\r\n        // }\r\n        this.BlipBuffer.samples.fill(0, remain, remain + count);\r\n        //for (let i = 0;i < count; ++i) {\r\n        //    this.BlipBuffer.samples[i + remain] = 0;\r\n        //} \r\n        //        this.BlipBuffer.samples = this\r\n        //        System.Array.copy(this._blipBuffer.samples, count, this._blipBuffer.samples, 0, remain);\r\n        //        System.Array.fill(this._blipBuffer.samples, 0, remain, count);\r\n        this.BlipBuffer.arrayLength = count;\r\n    };\r\n    Blip.prototype.ReadBytes = function (outbuf, count, stereo) {\r\n        if (count > this.BlipBuffer.avail) {\r\n            count = this.BlipBuffer.avail;\r\n        }\r\n        if (count !== 0) {\r\n            var step = 1;\r\n            //int inPtr  = BLIP_SAMPLES( s );\r\n            //buf_t const* end = in + count;\r\n            var inPtr = 0, outPtr = 0;\r\n            var endPtr = inPtr + count;\r\n            var sum = this.BlipBuffer.integrator;\r\n            do {\r\n                var st = sum >> Blip.delta_bits; /* assumes right shift preserves sign */\r\n                sum = sum + this.BlipBuffer.samples[inPtr];\r\n                inPtr++;\r\n                if (st !== st) {\r\n                    st = (st >> 31) ^ 32767;\r\n                }\r\n                var f = st / 65536; // (st/0xFFFF) * 2 - 1;\r\n                //if (f < -1) {\r\n                //    f = -1;\r\n                //}\r\n                //if (f > 1) {\r\n                //    f = 1;\r\n                //}\r\n                outbuf[outPtr] = f;\r\n                // outbuf[outPtr+ 1] = (byte)(st >> 8);\r\n                outPtr += step;\r\n                sum = sum - (st << (7));\r\n            } while (inPtr !== endPtr);\r\n            this.BlipBuffer.integrator = sum;\r\n            this.remove_samples(count);\r\n        }\r\n        return count;\r\n    };\r\n    // reads 'count' elements into array 'outbuf', beginning at 'start' and looping at array boundary if needed\r\n    // returns number of elements written\r\n    Blip.prototype.ReadElementsLoop = function (wavSharer) {\r\n        var outbuf = wavSharer.SharedBuffer;\r\n        var start = wavSharer.sharedAudioBufferPos;\r\n        var count = this.BlipBuffer.avail;\r\n        var inPtr = 0, outPtr = start;\r\n        var end = count;\r\n        var sum = this.BlipBuffer.integrator;\r\n        if (count !== 0) {\r\n            var step = 1;\r\n            do {\r\n                var st = sum >> Blip.delta_bits; /* assumes right shift preserves sign */\r\n                sum = sum + this.BlipBuffer.samples[inPtr];\r\n                inPtr++;\r\n                if (st !== st) {\r\n                    st = (st >> 31) ^ 32767;\r\n                }\r\n                var f = st / 65536; // (st/0xFFFF) * 2 - 1;\r\n                outPtr += step;\r\n                if (outPtr >= outbuf.length) {\r\n                    outPtr = 0;\r\n                }\r\n                outbuf[outPtr] = f;\r\n                // outbuf[outPtr+ 1] = (byte)(st >> 8);\r\n                sum = sum - (st << (7));\r\n            } while (end-- > 0);\r\n            this.BlipBuffer.integrator = sum;\r\n            this.remove_samples(count);\r\n        }\r\n        wavSharer.sharedAudioBufferPos = outPtr;\r\n        wavSharer.audioBytesWritten += count;\r\n        wavSharer.synchronize();\r\n        return count;\r\n    };\r\n    Blip.prototype.blip_add_delta = function (time, delta) {\r\n        if (delta === 0) {\r\n            return;\r\n        }\r\n        var fixedTime = (time * this.BlipBuffer.factor + this.BlipBuffer.offset) | 0;\r\n        var outPtr = (this.BlipBuffer.avail + (fixedTime >> Blip.time_bits));\r\n        var phase_shift = 16;\r\n        //const phase = System.Int64.clip32(fixedTime.shr(phase_shift).and(System.Int64((Blip.phase_count - 1))));\r\n        var phase = (fixedTime >> phase_shift & (Blip.phase_count - 1)) >>> 0;\r\n        var inStep = phase; // bl_step[phase];\r\n        var rev = Blip.phase_count - phase; // bl_step[phase_count - phase];\r\n        var interp_bits = 15;\r\n        var interp = (fixedTime >> (phase_shift - interp_bits) & ((1 << interp_bits) - 1));\r\n        var delta2 = (delta * interp) >> interp_bits;\r\n        delta -= delta2;\r\n        /* Fails if buffer size was exceeded */\r\n        //assert( out <= &BLIP_SAMPLES( s ) [s->size] );\r\n        for (var i = 0; i < 8; ++i) {\r\n            this.BlipBuffer.samples[outPtr + i] += (Blip.bl_step[inStep][i] * delta) + (Blip.bl_step[inStep][i] * delta2);\r\n            this.BlipBuffer.samples[outPtr + (15 - i)] += (Blip.bl_step[rev][i] * delta) + (Blip.bl_step[rev - 1][i] * delta2);\r\n        }\r\n    };\r\n    Blip.prototype.blip_add_delta_fast = function (time, delta) {\r\n        var fixedTime = time * this.BlipBuffer.factor + this.BlipBuffer.offset;\r\n        var outPtr = this.BlipBuffer.avail + (fixedTime >> Blip.time_bits);\r\n        var delta_unit = 1 << Blip.delta_bits;\r\n        var phase_shift = Blip.time_bits - Blip.delta_bits;\r\n        var phase = fixedTime >> phase_shift & (delta_unit - 1);\r\n        var delta2 = delta * phase;\r\n        /* Fails if buffer size was exceeded */\r\n        //assert( out <= &BLIP_SAMPLES( s ) [s->size] );\r\n        this.BlipBuffer.samples[outPtr + 8] += delta * delta_unit - delta2;\r\n        this.BlipBuffer.samples[outPtr + 9] += delta2;\r\n        //out [8] += delta * delta_unit - delta2;\r\n        //out [9] += delta2;\r\n    };\r\n    Blip.time_unit = 2097152;\r\n    Blip.buf_extra = 18;\r\n    Blip.phase_count = 32;\r\n    Blip.time_bits = 21;\r\n    Blip.delta_bits = 15;\r\n    //sinc values\r\n    Blip.bl_step = [[43, -115,\r\n            350,\r\n            -488,\r\n            1136,\r\n            -914,\r\n            5861,\r\n            21022\r\n        ], [\r\n            44,\r\n            -118,\r\n            348,\r\n            -473,\r\n            1076,\r\n            -799,\r\n            5274,\r\n            21001\r\n        ], [\r\n            45,\r\n            -121,\r\n            344,\r\n            -454,\r\n            1011,\r\n            -677,\r\n            4706,\r\n            20936\r\n        ], [\r\n            46,\r\n            -122,\r\n            336,\r\n            -431,\r\n            942,\r\n            -549,\r\n            4156,\r\n            20829\r\n        ], [\r\n            47,\r\n            -123,\r\n            327,\r\n            -404,\r\n            868,\r\n            -418,\r\n            3629,\r\n            20679\r\n        ], [\r\n            47,\r\n            -122,\r\n            316,\r\n            -375,\r\n            792,\r\n            -285,\r\n            3124,\r\n            20488\r\n        ], [\r\n            47,\r\n            -120,\r\n            303,\r\n            -344,\r\n            714,\r\n            -151,\r\n            2644,\r\n            20256\r\n        ], [\r\n            46,\r\n            -117,\r\n            289,\r\n            -310,\r\n            634,\r\n            -17,\r\n            2188,\r\n            19985\r\n        ], [\r\n            46,\r\n            -114,\r\n            273,\r\n            -275,\r\n            553,\r\n            117,\r\n            1758,\r\n            19675\r\n        ], [\r\n            44,\r\n            -108,\r\n            255,\r\n            -237,\r\n            471,\r\n            247,\r\n            1356,\r\n            19327\r\n        ], [\r\n            43,\r\n            -103,\r\n            237,\r\n            -199,\r\n            390,\r\n            373,\r\n            981,\r\n            18944\r\n        ], [\r\n            42,\r\n            -98,\r\n            218,\r\n            -160,\r\n            310,\r\n            495,\r\n            633,\r\n            18527\r\n        ], [\r\n            40,\r\n            -91,\r\n            198,\r\n            -121,\r\n            231,\r\n            611,\r\n            314,\r\n            18078\r\n        ], [\r\n            38,\r\n            -84,\r\n            178,\r\n            -81,\r\n            153,\r\n            722,\r\n            22,\r\n            17599\r\n        ], [\r\n            36,\r\n            -76,\r\n            157,\r\n            -43,\r\n            80,\r\n            824,\r\n            -241,\r\n            17092\r\n        ], [\r\n            34,\r\n            -68,\r\n            135,\r\n            -3,\r\n            8,\r\n            919,\r\n            -476,\r\n            16558\r\n        ], [\r\n            32,\r\n            -61,\r\n            115,\r\n            34,\r\n            -60,\r\n            1006,\r\n            -683,\r\n            16001\r\n        ], [\r\n            29,\r\n            -52,\r\n            94,\r\n            70,\r\n            -123,\r\n            1083,\r\n            -862,\r\n            15422\r\n        ], [\r\n            27,\r\n            -44,\r\n            73,\r\n            106,\r\n            -184,\r\n            1152,\r\n            -1015,\r\n            14824\r\n        ], [\r\n            25,\r\n            -36,\r\n            53,\r\n            139,\r\n            -239,\r\n            1211,\r\n            -1142,\r\n            14210\r\n        ], [\r\n            22,\r\n            -27,\r\n            34,\r\n            170,\r\n            -290,\r\n            1261,\r\n            -1244,\r\n            13582\r\n        ], [\r\n            20,\r\n            -20,\r\n            16,\r\n            199,\r\n            -335,\r\n            1301,\r\n            -1322,\r\n            12942\r\n        ], [\r\n            18,\r\n            -12,\r\n            -3,\r\n            226,\r\n            -375,\r\n            1331,\r\n            -1376,\r\n            12293\r\n        ], [\r\n            15,\r\n            -4,\r\n            -19,\r\n            250,\r\n            -410,\r\n            1351,\r\n            -1408,\r\n            11638\r\n        ], [\r\n            13,\r\n            3,\r\n            -35,\r\n            272,\r\n            -439,\r\n            1361,\r\n            -1419,\r\n            10979\r\n        ], [\r\n            11,\r\n            9,\r\n            -49,\r\n            292,\r\n            -464,\r\n            1362,\r\n            -1410,\r\n            10319\r\n        ], [\r\n            9,\r\n            16,\r\n            -63,\r\n            309,\r\n            -483,\r\n            1354,\r\n            -1383,\r\n            9660\r\n        ], [\r\n            7,\r\n            22,\r\n            -75,\r\n            322,\r\n            -496,\r\n            1337,\r\n            -1339,\r\n            9005\r\n        ], [\r\n            6,\r\n            26,\r\n            -85,\r\n            333,\r\n            -504,\r\n            1312,\r\n            -1280,\r\n            8355\r\n        ], [\r\n            4,\r\n            31,\r\n            -94,\r\n            341,\r\n            -507,\r\n            1278,\r\n            -1205,\r\n            7713\r\n        ], [\r\n            3,\r\n            35,\r\n            -102,\r\n            347,\r\n            -506,\r\n            1238,\r\n            -1119,\r\n            7082\r\n        ], [\r\n            1,\r\n            40,\r\n            -110,\r\n            350,\r\n            -499,\r\n            1190,\r\n            -1021,\r\n            6464\r\n        ], [\r\n            0,\r\n            43,\r\n            -115,\r\n            350,\r\n            -488,\r\n            1136,\r\n            -914,\r\n            5861\r\n        ]];\r\n    return Blip;\r\n}());\r\nexports.Blip = Blip;\r\nvar PortWriteEntry = /** @class */ (function () {\r\n    function PortWriteEntry(time, address, data) {\r\n        this.time = time;\r\n        this.address = address;\r\n        this.data = data;\r\n    }\r\n    return PortWriteEntry;\r\n}());\r\nexports.PortWriteEntry = PortWriteEntry;\r\nvar QueuedPort = /** @class */ (function () {\r\n    function QueuedPort() {\r\n        this.array = new Array();\r\n    }\r\n    Object.defineProperty(QueuedPort.prototype, \"Count\", {\r\n        get: function () {\r\n            return this.array.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    QueuedPort.prototype.clear = function () {\r\n        this.array.length = 0;\r\n    };\r\n    QueuedPort.prototype.enqueue = function (item) {\r\n        this.array.push(item);\r\n    };\r\n    QueuedPort.prototype.dequeue = function () {\r\n        return this.array.pop();\r\n    };\r\n    return QueuedPort;\r\n}());\r\nexports.QueuedPort = QueuedPort;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ChiChiTypes_1 = __webpack_require__(4);\r\nvar ChiChiMemMap = /** @class */ (function () {\r\n    function ChiChiMemMap() {\r\n    }\r\n    ChiChiMemMap.prototype.getByte = function (address) {\r\n        return 0;\r\n    };\r\n    ChiChiMemMap.prototype.setByte = function (address, data) {\r\n    };\r\n    return ChiChiMemMap;\r\n}());\r\nexports.ChiChiMemMap = ChiChiMemMap;\r\nvar ChiChiPPU = /** @class */ (function () {\r\n    function ChiChiPPU() {\r\n        this.LastcpuClock = 0;\r\n        // private members\r\n        // scanline position\r\n        this.yPosition = 0;\r\n        this.xPosition = 0;\r\n        // current draw location in outbuffer    \r\n        this.vbufLocation = 0;\r\n        this.currentAttributeByte = 0;\r\n        // sprite info\r\n        this.spriteSize = 0;\r\n        this.spritesOnThisScanline = 0;\r\n        this._spriteCopyHasHappened = false;\r\n        this.spriteZeroHit = false;\r\n        this.isForegroundPixel = false;\r\n        this.spriteChanges = false;\r\n        this.ppuReadBuffer = 0;\r\n        this._clipSprites = false;\r\n        this._clipTiles = false;\r\n        this._tilesAreVisible = false;\r\n        this._spritesAreVisible = false;\r\n        this.nameTableMemoryStart = 0;\r\n        this.backgroundPatternTableIndex = 0;\r\n        //PPU implementation\r\n        this._PPUAddress = 0;\r\n        this._PPUStatus = 0;\r\n        this._PPUControlByte0 = 0;\r\n        this._PPUControlByte1 = 0;\r\n        this._spriteAddress = 0;\r\n        this.currentXPosition = 0;\r\n        this.currentYPosition = 0;\r\n        this._hScroll = 0;\r\n        this._vScroll = 0;\r\n        this.lockedHScroll = 0;\r\n        this.lockedVScroll = 0;\r\n        //private scanlineNum = 0;\r\n        //private scanlinePos = 0;\r\n        this.shouldRender = false;\r\n        //private NMIHasBeenThrownThisFrame = false;\r\n        this._frames = 0;\r\n        this.hitSprite = false;\r\n        this.PPUAddressLatchIsHigh = true;\r\n        this.p32 = new Uint32Array(256); // System.Array.init(256, 0, System.Int32);\r\n        this.isRendering = true;\r\n        this.frameClock = 0;\r\n        this.FrameEnded = false;\r\n        this.frameOn = false;\r\n        //private framePalette = System.Array.init(256, 0, System.Int32);\r\n        this.nameTableBits = 0;\r\n        this.vidRamIsRam = true;\r\n        this._palette = new Uint8Array(32); // System.Array.init(32, 0, System.Int32);\r\n        this._openBus = 0;\r\n        this.sprite0scanline = 0;\r\n        this.sprite0x = 0;\r\n        this._maxSpritesPerScanline = 64;\r\n        this.xNTXor = 0;\r\n        this.yNTXor = 0;\r\n        this.spriteRAMBuffer = new SharedArrayBuffer(256 * Uint8Array.BYTES_PER_ELEMENT);\r\n        this.spriteRAM = new Uint8Array(this.spriteRAMBuffer); // System.Array.init(256, 0, System.Int32);\r\n        this.spritesOnLine = new Array(512); // System.Array.init(512, 0, System.Int32);\r\n        this.currentTileIndex = 0;\r\n        this.fetchTile = true;\r\n        // tile bytes currently latched in ppu\r\n        this.patternEntry = 0;\r\n        this.patternEntryByte2 = 0;\r\n        //\r\n        this.outBuffer = new Uint8Array(65536);\r\n        // 'internal\r\n        this.byteOutBuffer = new Uint8Array(256 * 256 * 4); // System.Array.init(262144, 0, System.Int32);\r\n    }\r\n    Object.defineProperty(ChiChiPPU.prototype, \"ChrRomHandler\", {\r\n        get: function () {\r\n            return this.chrRomHandler;\r\n        },\r\n        set: function (value) {\r\n            this.chrRomHandler = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChiChiPPU.prototype, \"NextEventAt\", {\r\n        get: function () {\r\n            if (this.frameClock < 6820) {\r\n                return (6820 - this.frameClock) / 3;\r\n            }\r\n            else {\r\n                return (((89345 - this.frameClock) / 341) / 3);\r\n            }\r\n            //}\r\n            //else\r\n            //{\r\n            //    return (6823 - frameClock) / 3;\r\n            //}\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChiChiPPU.prototype.GetPPUStatus = function () {\r\n        return {\r\n            status: this._PPUStatus,\r\n            controlByte0: this._PPUControlByte0,\r\n            controlByte1: this._PPUControlByte1,\r\n            nameTableStart: this.nameTableMemoryStart,\r\n            currentTile: this.currentTileIndex,\r\n            lockedVScroll: this.lockedVScroll,\r\n            lockedHScroll: this.lockedHScroll,\r\n            X: this.currentXPosition,\r\n            Y: this.currentYPosition\r\n        };\r\n    };\r\n    Object.defineProperty(ChiChiPPU.prototype, \"PPU_FrameFinishHandler\", {\r\n        get: function () {\r\n            return this.frameFinished;\r\n        },\r\n        set: function (value) {\r\n            this.frameFinished = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChiChiPPU.prototype, \"PPU_NameTableMemoryStart\", {\r\n        get: function () {\r\n            return this.nameTableMemoryStart;\r\n        },\r\n        set: function (value) {\r\n            this.nameTableMemoryStart = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChiChiPPU.prototype, \"PatternTableIndex\", {\r\n        get: function () {\r\n            return this.backgroundPatternTableIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChiChiPPU.prototype, \"SpritePatternTableIndex\", {\r\n        get: function () {\r\n            var spritePatternTable = 0;\r\n            if ((this._PPUControlByte0 & 32) === 32) {\r\n                spritePatternTable = 4096;\r\n            }\r\n            return spritePatternTable;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChiChiPPU.prototype.Initialize = function () {\r\n        this._PPUAddress = 0;\r\n        this._PPUStatus = 0;\r\n        this._PPUControlByte0 = 0;\r\n        this._PPUControlByte1 = 0;\r\n        this._hScroll = 0;\r\n        this._vScroll = 0;\r\n        //this.scanlineNum = 0;\r\n        //this.scanlinePos = 0;\r\n        this._spriteAddress = 0;\r\n    };\r\n    ChiChiPPU.prototype.WriteState = function (writer) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    ChiChiPPU.prototype.ReadState = function (state) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    Object.defineProperty(ChiChiPPU.prototype, \"NMIIsThrown\", {\r\n        get: function () {\r\n            return (this._PPUControlByte0 & 128) === 128;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChiChiPPU.prototype.SetupVINT = function () {\r\n        this._PPUStatus = this._PPUStatus | 128;\r\n        //this.NMIHasBeenThrownThisFrame = false;\r\n        // HandleVBlankIRQ = true;\r\n        this._frames = this._frames + 1;\r\n        //isRendering = false;\r\n        if (this.NMIIsThrown) {\r\n            this.NMIHandler();\r\n            //this._handleNMI = true;\r\n            //this.HandleVBlankIRQ = true;\r\n            //this.NMIHasBeenThrownThisFrame = true;\r\n        }\r\n    };\r\n    ChiChiPPU.prototype.VidRAM_GetNTByte = function (address) {\r\n        var result = 0;\r\n        if (address >= 8192 && address < 12288) {\r\n            result = this.chrRomHandler.GetPPUByte(0, address);\r\n        }\r\n        else {\r\n            result = this.chrRomHandler.GetPPUByte(0, address);\r\n        }\r\n        return result;\r\n    };\r\n    ChiChiPPU.prototype.UpdatePPUControlByte0 = function () {\r\n        if ((this._PPUControlByte0 & 16)) {\r\n            this.backgroundPatternTableIndex = 4096;\r\n        }\r\n        else {\r\n            this.backgroundPatternTableIndex = 0;\r\n        }\r\n    };\r\n    ChiChiPPU.prototype.SetByte = function (Clock, address, data) {\r\n        // DrawTo(Clock);\r\n        //if (_isDebugging)\r\n        //{\r\n        //    Events.Enqueue(new PPUWriteEvent { IsWrite = true, DataWritten = data, FrameClock = frameClock, RegisterAffected = address, ScanlineNum = frameClock / 341, ScanlinePos = frameClock % 341 });\r\n        //}\r\n        //Writable 2C02 registers\r\n        //-----------------------\r\n        //4 \t-\treturns object attribute memory \r\n        //      location indexed by port 3, then increments port 3.\r\n        //6\t    -\tPPU address port to access with port 7.\r\n        //7\t    -\tPPU memory write port.\r\n        switch (address & 7) {\r\n            case 0:\r\n                this.DrawTo(Clock);\r\n                this._PPUControlByte0 = data;\r\n                this._openBus = data;\r\n                this.nameTableBits = this._PPUControlByte0 & 3;\r\n                this.backgroundPatternTableIndex = ((this._PPUControlByte0 & 16) >> 4) * 0x1000;\r\n                // if we toggle /vbl we can throw multiple NMIs in a vblank period\r\n                //if ((data & 0x80) == 0x80 && NMIHasBeenThrownThisFrame)\r\n                //{\r\n                //     NMIHasBeenThrownThisFrame = false;\r\n                //}\r\n                //UpdatePixelInfo();\r\n                this.nameTableMemoryStart = this.nameTableBits * 0x400;\r\n                break;\r\n            case 1:\r\n                //1\t    0\tdisable composite colorburst (when 1). Effectively causes gfx to go black & white.\r\n                //      1\tleft side screen column (8 pixels wide) playfield clipping (when 0).\r\n                //      2\tleft side screen column (8 pixels wide) object clipping (when 0).\r\n                //      3\tenable playfield display (on 1).\r\n                //      4\tenable objects display (on 1).\r\n                //      5\tR (to be documented)\r\n                //      6\tG (to be documented)\r\n                //      7\tB (to be documented)\r\n                this.DrawTo(Clock);\r\n                this.isRendering = (data & 0x18) !== 0;\r\n                this._PPUControlByte1 = data;\r\n                this._spritesAreVisible = (this._PPUControlByte1 & 0x10) === 0x10;\r\n                this._tilesAreVisible = (this._PPUControlByte1 & 0x08) === 0x08;\r\n                this._clipTiles = (this._PPUControlByte1 & 0x02) !== 0x02;\r\n                this._clipSprites = (this._PPUControlByte1 & 0x04) !== 0x04;\r\n                //UpdatePixelInfo();\r\n                this.nameTableMemoryStart = this.nameTableBits * 0x400;\r\n                break;\r\n            case 2:\r\n                this.ppuReadBuffer = data;\r\n                this._openBus = data;\r\n                break;\r\n            case 3:\r\n                //3\t    -\tinternal object attribute memory index pointer \r\n                //          (64 attributes, 32 bits each, byte granular access). \r\n                //          stored value post-increments on access to port 4.\r\n                this._spriteAddress = data & 0xFF;\r\n                this._openBus = this._spriteAddress;\r\n                break;\r\n            case 4:\r\n                this.spriteRAM[this._spriteAddress] = data;\r\n                // UnpackSprite(_spriteAddress / 4);\r\n                this._spriteAddress = (this._spriteAddress + 1) & 255;\r\n                this.unpackedSprites[this._spriteAddress >> 2].Changed = true;\r\n                this.spriteChanges = true;\r\n                break;\r\n            case 5:\r\n                //5\t    -\tscroll offset port.\r\n                // on 1st read (high), bits 0,1,2 go to fine horizonal scroll, rest to select tile\r\n                // on 2nd read, bits 0,1,2 go to fine vertical scroll, rest to select tile\r\n                // during render, writes to FH are applied immediately\r\n                if (this.PPUAddressLatchIsHigh) {\r\n                    //if (isRendering)\r\n                    //{\r\n                    //    fineHorizontalScroll = data & 0x7;\r\n                    //    horizontalTileIndex = data >> 3;\r\n                    //}  \r\n                    this.DrawTo(Clock);\r\n                    this._hScroll = data;\r\n                    this.lockedHScroll = this._hScroll & 7;\r\n                    this.UpdatePixelInfo();\r\n                    this.PPUAddressLatchIsHigh = false;\r\n                }\r\n                else {\r\n                    // during rendering, a write here will not post to the rendering counter\r\n                    this.DrawTo(Clock);\r\n                    this._vScroll = data;\r\n                    if (data > 240) {\r\n                        this._vScroll = data - 256;\r\n                    }\r\n                    if (!this.frameOn || (this.frameOn && !this.isRendering)) {\r\n                        this.lockedVScroll = this._vScroll;\r\n                    }\r\n                    this.PPUAddressLatchIsHigh = true;\r\n                    this.UpdatePixelInfo();\r\n                }\r\n                break;\r\n            case 6:\r\n                //Since the PPU's external address bus is only 14 bits in width, \r\n                //the top two bits of the value written are ignored. \r\n                if (this.PPUAddressLatchIsHigh) {\r\n                    //            //a) Write upper address byte into $2006\r\n                    this._PPUAddress = (this._PPUAddress & 0xFF) | ((data & 0x3F) << 8);\r\n                    this.PPUAddressLatchIsHigh = false;\r\n                }\r\n                else {\r\n                    //            //b) Write lower address byte into $2006\r\n                    this._PPUAddress = (this._PPUAddress & 0x7F00) | data & 0xFF;\r\n                    this.PPUAddressLatchIsHigh = true;\r\n                    // writes here during rendering directly affect the scroll counter\r\n                    // from Marat Fazulamans doc\r\n                    //Address Written into $2006\r\n                    //xxYYSSYYYYYXXXXX\r\n                    //   | |  |     |\r\n                    //   | |  |     +---- Horizontal scroll in tiles (i.e. 1 = 8 pixels)\r\n                    //   | |  +--------- Vertical scroll in tiles (i.e. 1 = 8 pixels)\r\n                    //   | +------------ Number of Name Table ($2000,$2400,$2800,$2C00)\r\n                    //   +-------------- Additional vertical scroll in pixels (0..3)\r\n                    // on second write during frame, loopy t (_hscroll, _vscroll) is copied to loopy_v (lockedHscroll, lockedVScroll)\r\n                    this.DrawTo(Clock);\r\n                    this._hScroll = ((this._PPUAddress & 0x1F) << 3); // +(currentXPosition & 7);\r\n                    this._vScroll = (((this._PPUAddress >> 5) & 0x1F) << 3);\r\n                    this._vScroll |= ((this._PPUAddress >> 12) & 3);\r\n                    this.nameTableBits = ((this._PPUAddress >> 10) & 3);\r\n                    if (this.frameOn) {\r\n                        this.lockedHScroll = this._hScroll;\r\n                        this.lockedVScroll = this._vScroll;\r\n                        this.lockedVScroll = this.lockedVScroll - this.currentYPosition;\r\n                    }\r\n                    this.UpdatePixelInfo();\r\n                    // relock vscroll during render when this happens\r\n                }\r\n                break;\r\n            case 7:\r\n                //            //Writing to PPU memory:\r\n                //            //c) Write data into $2007. After each write, the\r\n                //            //   address will increment either by 1 (bit 2 of\r\n                //            //   $2000 is 0) or by 32 (bit 2 of $2000 is 1).\r\n                // ppuLatch = data;\r\n                if ((this._PPUAddress & 0xFF00) === 0x3F00) {\r\n                    this.DrawTo(Clock);\r\n                    //WriteToNESPalette(_PPUAddress, (byte)data);\r\n                    var palAddress = (this._PPUAddress) & 0x1F;\r\n                    this._palette[palAddress] = data;\r\n                    // rgb32OutBuffer[255 * 256 + palAddress] = data;\r\n                    if ((this._PPUAddress & 0xFFEF) === 0x3F00) {\r\n                        this._palette[(palAddress ^ 16) & 0x1F] = data;\r\n                    }\r\n                    // these palettes are all mirrored every 0x10 bytes\r\n                    this.UpdatePixelInfo();\r\n                }\r\n                else {\r\n                    // if its a nametable byte, mask it according to current mirroring\r\n                    if ((this._PPUAddress & 0xF000) === 0x2000) {\r\n                        this.chrRomHandler.SetPPUByte(Clock, this._PPUAddress, data);\r\n                    }\r\n                    else {\r\n                        if (this.vidRamIsRam) {\r\n                            this.chrRomHandler.SetPPUByte(Clock, this._PPUAddress, data);\r\n                        }\r\n                    }\r\n                }\r\n                // if controlbyte0.4, set ppuaddress + 32, else inc\r\n                if ((this._PPUControlByte0 & 4) === 4) {\r\n                    this._PPUAddress = (this._PPUAddress + 32);\r\n                }\r\n                else {\r\n                    this._PPUAddress = (this._PPUAddress + 1);\r\n                }\r\n                // reset the flag which makex xxx6 set the high byte of address\r\n                this.PPUAddressLatchIsHigh = true;\r\n                this._PPUAddress = (this._PPUAddress & 0x3FFF);\r\n                break;\r\n        }\r\n    };\r\n    ChiChiPPU.prototype.GetByte = function (Clock, address) {\r\n        //if (_isDebugging)\r\n        //{\r\n        //    Events.Enqueue(new PPUWriteEvent { IsWrite = false, DataWritten = 0, FrameClock = frameClock, RegisterAffected = address, ScanlineNum = frameClock / 341, ScanlinePos = frameClock % 341 });\r\n        //}\r\n        switch (address & 7) {\r\n            case 3:\r\n            case 0:\r\n            case 1:\r\n            case 5:\r\n            case 6:\r\n                return this._openBus;\r\n            case 2:\r\n                var ret = 0;\r\n                this.PPUAddressLatchIsHigh = true;\r\n                // bit 7 is set to 0 after a read occurs\r\n                // return lower 5 latched bits, and the status\r\n                ret = (this.ppuReadBuffer & 0x1F) | this._PPUStatus;\r\n                this.DrawTo(Clock);\r\n                if ((ret & 0x80) === 0x80) {\r\n                    this._PPUStatus = this._PPUStatus & ~0x80;\r\n                }\r\n                this.UpdatePixelInfo();\r\n                //}\r\n                //this._openBus = ret;\r\n                return ret;\r\n            case 4:\r\n                var tmp = this.spriteRAM[this._spriteAddress];\r\n                //ppuLatch = spriteRAM[SpriteAddress];\r\n                // should not increment on read ?\r\n                //SpriteAddress = (SpriteAddress + 1) & 0xFF;\r\n                //this._openBus = tmp;\r\n                return tmp;\r\n            case 7:\r\n                // palette reads shouldn't be buffered like regular vram reads, they re internal\r\n                if ((this._PPUAddress & 0xFF00) === 0x3F00) {\r\n                    // these palettes are all mirrored every 0x10 bytes\r\n                    tmp = this._palette[this._PPUAddress & 0x1F];\r\n                    // palette read should also read vram into read buffer\r\n                    // info i found on the nesdev forums\r\n                    // When you read PPU $3F00-$3FFF, you get immediate data from Palette RAM \r\n                    // (without the 1-read delay usually present when reading from VRAM) and the PPU \r\n                    // will also fetch nametable data from the corresponding address (which is mirrored from PPU $2F00-$2FFF). \r\n                    // note: writes do not work this way \r\n                    this.ppuReadBuffer = this.chrRomHandler.GetPPUByte(Clock, this._PPUAddress - 4096);\r\n                }\r\n                else {\r\n                    tmp = this.ppuReadBuffer;\r\n                    if (this._PPUAddress >= 0x2000 && this._PPUAddress <= 0x2FFF) {\r\n                        this.ppuReadBuffer = this.chrRomHandler.GetPPUByte(Clock, this._PPUAddress);\r\n                    }\r\n                    else {\r\n                        this.ppuReadBuffer = this.chrRomHandler.GetPPUByte(Clock, this._PPUAddress & 0x3FFF);\r\n                    }\r\n                }\r\n                if ((this._PPUControlByte0 & 4) === 4) {\r\n                    this._PPUAddress = this._PPUAddress + 32;\r\n                }\r\n                else {\r\n                    this._PPUAddress = this._PPUAddress + 1;\r\n                }\r\n                this._PPUAddress = (this._PPUAddress & 0x3FFF);\r\n                return tmp;\r\n        }\r\n        return 0;\r\n    };\r\n    ChiChiPPU.prototype.HandleEvent = function (Clock) {\r\n        this.DrawTo(Clock);\r\n    };\r\n    ChiChiPPU.prototype.ResetClock = function (Clock) {\r\n        this.LastcpuClock = Clock;\r\n    };\r\n    ChiChiPPU.prototype.CopySprites = function (copyFrom) {\r\n        // should copy 0x100 items from source to spriteRAM, \r\n        // starting at SpriteAddress, and wrapping around\r\n        // should set spriteDMA flag\r\n        for (var i = 0; i < 256; ++i) {\r\n            var spriteLocation = (this._spriteAddress + i) & 255;\r\n            if (this.spriteRAM[spriteLocation] !== this.cpu.Rams[copyFrom + i]) {\r\n                this.spriteRAM[spriteLocation] = this.cpu.Rams[copyFrom + i];\r\n                this.unpackedSprites[(spriteLocation >> 2) & 255].Changed = true;\r\n            }\r\n        }\r\n        this._spriteCopyHasHappened = true;\r\n        this.spriteChanges = true;\r\n    };\r\n    ChiChiPPU.prototype.InitSprites = function () {\r\n        this.currentSprites = new Array(this._maxSpritesPerScanline); //ChiChiSprite;\r\n        for (var i = 0; i < this._maxSpritesPerScanline; ++i) {\r\n            this.currentSprites[i] = new ChiChiTypes_1.ChiChiSprite();\r\n        }\r\n        this.unpackedSprites = new Array(64);\r\n        for (var i = 0; i < 64; ++i) {\r\n            this.unpackedSprites[i] = new ChiChiTypes_1.ChiChiSprite();\r\n        }\r\n    };\r\n    ChiChiPPU.prototype.GetSpritePixel = function () {\r\n        this.isForegroundPixel = false;\r\n        this.spriteZeroHit = false;\r\n        var result = 0;\r\n        var yLine = 0;\r\n        var xPos = 0;\r\n        var tileIndex = 0;\r\n        for (var i = 0; i < this.spritesOnThisScanline; ++i) {\r\n            var currSprite = this.currentSprites[i];\r\n            if (currSprite.XPosition > 0 && this.currentXPosition >= currSprite.XPosition && this.currentXPosition < currSprite.XPosition + 8) {\r\n                var spritePatternTable = 0;\r\n                if ((this._PPUControlByte0 & 8) === 8) {\r\n                    spritePatternTable = 4096;\r\n                }\r\n                xPos = this.currentXPosition - currSprite.XPosition;\r\n                yLine = this.currentYPosition - currSprite.YPosition - 1;\r\n                yLine = yLine & (this.spriteSize - 1);\r\n                tileIndex = currSprite.TileIndex;\r\n                if ((this._PPUControlByte0 & 32) === 32) {\r\n                    if ((tileIndex & 1) === 1) {\r\n                        spritePatternTable = 4096;\r\n                        tileIndex = tileIndex ^ 1;\r\n                    }\r\n                    else {\r\n                        spritePatternTable = 0;\r\n                    }\r\n                }\r\n                //result = WhissaSpritePixel(spritePatternTable, xPos, yLine, ref currSprite, tileIndex);\r\n                // 8x8 tile\r\n                var patternEntry;\r\n                var patternEntryBit2;\r\n                if (currSprite.FlipY) {\r\n                    yLine = this.spriteSize - yLine - 1;\r\n                }\r\n                if (yLine >= 8) {\r\n                    yLine += 8;\r\n                }\r\n                patternEntry = this.chrRomHandler.GetPPUByte(0, spritePatternTable + tileIndex * 16 + yLine);\r\n                patternEntryBit2 = this.chrRomHandler.GetPPUByte(0, spritePatternTable + tileIndex * 16 + yLine + 8);\r\n                result = (currSprite.FlipX ? ((patternEntry >> xPos) & 1) | (((patternEntryBit2 >> xPos) << 1) & 2) : ((patternEntry >> 7 - xPos) & 1) | (((patternEntryBit2 >> 7 - xPos) << 1) & 2)) & 255;\r\n                if (result !== 0) {\r\n                    if (currSprite.SpriteNumber === 0) {\r\n                        this.spriteZeroHit = true;\r\n                    }\r\n                    this.isForegroundPixel = currSprite.Foreground;\r\n                    return (result | currSprite.AttributeByte);\r\n                }\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n    ChiChiPPU.prototype.WhissaSpritePixel = function (patternTableIndex, x, y, sprite, tileIndex) {\r\n        // 8x8 tile\r\n        var patternEntry = 0;\r\n        var patternEntryBit2 = 0;\r\n        if (sprite.v.FlipY) {\r\n            y = this.spriteSize - y - 1;\r\n        }\r\n        if (y >= 8) {\r\n            y += 8;\r\n        }\r\n        patternEntry = this.chrRomHandler.GetPPUByte(0, patternTableIndex + tileIndex * 16 + y);\r\n        patternEntryBit2 = this.chrRomHandler.GetPPUByte(0, patternTableIndex + tileIndex * 16 + y + 8);\r\n        return (sprite.v.FlipX ? ((patternEntry >> x) & 1) | (((patternEntryBit2 >> x) << 1) & 2) : ((patternEntry >> 7 - x) & 1) | (((patternEntryBit2 >> 7 - x) << 1) & 2));\r\n    };\r\n    ChiChiPPU.prototype.PreloadSprites = function (scanline) {\r\n        this.spritesOnThisScanline = 0;\r\n        this.sprite0scanline = -1;\r\n        var yLine = this.currentYPosition - 1;\r\n        this.outBuffer[(64768) + yLine] = 0;\r\n        this.outBuffer[(65024) + yLine] = 0;\r\n        //spritesOnLine[2 * yLine] = 0;\r\n        //spritesOnLine[2 * yLine + 1] = 0;\r\n        for (var spriteNum = 0; spriteNum < 256; spriteNum += 4) {\r\n            var spriteID = ((spriteNum + this._spriteAddress) & 255) >> 2;\r\n            var y = this.unpackedSprites[spriteID].YPosition + 1;\r\n            if (scanline >= y && scanline < y + this.spriteSize) {\r\n                if (spriteID === 0) {\r\n                    this.sprite0scanline = scanline;\r\n                    this.sprite0x = this.unpackedSprites[spriteID].XPosition;\r\n                }\r\n                var spId = spriteNum >> 2;\r\n                if (spId < 32) {\r\n                    this.outBuffer[(64768) + yLine] |= 1 << spId;\r\n                }\r\n                else {\r\n                    this.outBuffer[(65024) + yLine] |= 1 << (spId - 32);\r\n                }\r\n                this.currentSprites[this.spritesOnThisScanline] = this.unpackedSprites[spriteID];\r\n                this.currentSprites[this.spritesOnThisScanline].IsVisible = true;\r\n                this.spritesOnThisScanline++;\r\n                if (this.spritesOnThisScanline === this._maxSpritesPerScanline) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (this.spritesOnThisScanline > 7) {\r\n            this._PPUStatus = this._PPUStatus | 32;\r\n        }\r\n    };\r\n    ChiChiPPU.prototype.UnpackSprites = function () {\r\n        //Buffer.BlockCopy\r\n        //var outBufferloc = 65280;\r\n        //for (var i = 0; i < 256; i += 4) {\r\n        //    this.outBuffer[outBufferloc] = (this.spriteRAM[i] << 24) | (this.spriteRAM[i + 1] << 16) | (this.spriteRAM[i + 2] << 8) | (this.spriteRAM[i + 3] << 0);\r\n        //    outBufferloc++;\r\n        //}\r\n        // Array.Copy(spriteRAM, 0, outBuffer, 255 * 256 * 4, 256);\r\n        for (var currSprite = 0; currSprite < this.unpackedSprites.length; ++currSprite) {\r\n            if (this.unpackedSprites[currSprite].Changed) {\r\n                this.UnpackSprite(currSprite);\r\n            }\r\n        }\r\n    };\r\n    ChiChiPPU.prototype.UnpackSprite = function (currSprite) {\r\n        var attrByte = this.spriteRAM[(currSprite << 2) + 2 | 0];\r\n        this.unpackedSprites[currSprite].IsVisible = true;\r\n        this.unpackedSprites[currSprite].AttributeByte = ((attrByte & 3) << 2) | 16;\r\n        this.unpackedSprites[currSprite].YPosition = this.spriteRAM[currSprite * 4];\r\n        this.unpackedSprites[currSprite].XPosition = this.spriteRAM[currSprite * 4 + 3];\r\n        this.unpackedSprites[currSprite].SpriteNumber = currSprite;\r\n        this.unpackedSprites[currSprite].Foreground = (attrByte & 32) !== 32;\r\n        this.unpackedSprites[currSprite].FlipX = (attrByte & 64) === 64;\r\n        this.unpackedSprites[currSprite].FlipY = (attrByte & 128) === 128;\r\n        this.unpackedSprites[currSprite].TileIndex = this.spriteRAM[currSprite * 4 + 1];\r\n        this.unpackedSprites[currSprite].Changed = false;\r\n    };\r\n    ChiChiPPU.prototype.GetNameTablePixel = function () {\r\n        var result = ((this.patternEntry & 128) >> 7) | ((this.patternEntryByte2 & 128) >> 6);\r\n        this.patternEntry <<= 1;\r\n        this.patternEntryByte2 <<= 1;\r\n        if (result > 0) {\r\n            result |= this.currentAttributeByte;\r\n        }\r\n        return result & 255;\r\n    };\r\n    ChiChiPPU.prototype.FetchNextTile = function () {\r\n        var ppuNameTableMemoryStart = this.nameTableMemoryStart ^ this.xNTXor ^ this.yNTXor;\r\n        var xTilePosition = this.xPosition >> 3;\r\n        var tileRow = (this.yPosition >> 3) % 30 << 5;\r\n        var tileNametablePosition = 8192 + ppuNameTableMemoryStart + xTilePosition + tileRow;\r\n        var TileIndex = this.chrRomHandler.GetPPUByte(0, tileNametablePosition);\r\n        var patternTableYOffset = this.yPosition & 7;\r\n        var patternID = this.backgroundPatternTableIndex + (TileIndex * 16) + patternTableYOffset;\r\n        this.patternEntry = this.chrRomHandler.GetPPUByte(0, patternID);\r\n        this.patternEntryByte2 = this.chrRomHandler.GetPPUByte(0, patternID + 8);\r\n        this.currentAttributeByte = this.GetAttributeTableEntry(ppuNameTableMemoryStart, xTilePosition, this.yPosition >> 3);\r\n    };\r\n    ChiChiPPU.prototype.GetAttributeTableEntry = function (ppuNameTableMemoryStart, i, j) {\r\n        var LookUp = this.chrRomHandler.GetPPUByte(0, 8192 + ppuNameTableMemoryStart + 960 + (i >> 2) + ((j >> 2) * 8));\r\n        switch ((i & 2) | (j & 2) * 2) {\r\n            case 0:\r\n                return (LookUp << 2) & 12;\r\n            case 2:\r\n                return LookUp & 12;\r\n            case 4:\r\n                return (LookUp >> 2) & 12;\r\n            case 6:\r\n                return (LookUp >> 4) & 12;\r\n        }\r\n        return 0;\r\n    };\r\n    ChiChiPPU.prototype.DrawTo = function (cpuClockNum) {\r\n        var frClock = (cpuClockNum - this.LastcpuClock) * 3;\r\n        if (this.frameClock < 6820) {\r\n            // if the frameclock +frClock is in vblank (< 6820) dont do nothing, just update it\r\n            if (this.frameClock + frClock < 6820) {\r\n                this.frameClock += frClock;\r\n                frClock = 0;\r\n            }\r\n            else {\r\n                //find number of pixels to draw since frame start\r\n                frClock += this.frameClock - 6820;\r\n                this.frameClock = 6820;\r\n            }\r\n        }\r\n        for (var i = 0; i < frClock; ++i) {\r\n            switch (this.frameClock++) {\r\n                case 0:\r\n                    break;\r\n                case 6820:\r\n                    this._PPUStatus = 0;\r\n                    this.hitSprite = false;\r\n                    this.spriteSize = ((this._PPUControlByte0 & 0x20) === 0x20) ? 16 : 8;\r\n                    if ((this._PPUControlByte1 & 0x18) !== 0) {\r\n                        this.isRendering = true;\r\n                    }\r\n                    this.frameOn = true;\r\n                    this.chrRomHandler.ResetBankStartCache();\r\n                    // setFrameOn();\r\n                    if (this.spriteChanges) {\r\n                        this.UnpackSprites();\r\n                        this.spriteChanges = false;\r\n                    }\r\n                    break;\r\n                case 7161:\r\n                    //lockedVScroll = _vScroll;\r\n                    this.vbufLocation = 0;\r\n                    //curBufPos = bufStart;\r\n                    this.xNTXor = 0;\r\n                    this.yNTXor = 0;\r\n                    this.currentXPosition = 0;\r\n                    this.currentYPosition = 0;\r\n                    break;\r\n                case 89342://ChiChiNES.CPU2A03.frameClockEnd:\r\n                    this.shouldRender = true;\r\n                    //__frameFinished = true;\r\n                    this.frameFinished();\r\n                    this.SetupVINT();\r\n                    this.frameOn = false;\r\n                    this.frameClock = 0;\r\n                    //if (_isDebugging)\r\n                    //    events.Clear();\r\n                    break;\r\n            }\r\n            if (this.frameClock >= 7161 && this.frameClock <= 89342) {\r\n                if (this.currentXPosition < 256 && this.vbufLocation < 61440) {\r\n                    /* update x position */\r\n                    this.xPosition = this.currentXPosition + this.lockedHScroll;\r\n                    if ((this.xPosition & 7) === 0) {\r\n                        this.xNTXor = (this.xPosition & 0x100) ? 0x400 : 0;\r\n                        this.xPosition &= 0xFF;\r\n                        /* fetch next tile */\r\n                        var ppuNameTableMemoryStart = this.nameTableMemoryStart ^ this.xNTXor ^ this.yNTXor;\r\n                        var xTilePosition = this.xPosition >> 3;\r\n                        var tileRow = (this.yPosition >> 3) % 30 << 5;\r\n                        var tileNametablePosition = 0x2000 + ppuNameTableMemoryStart + xTilePosition + tileRow;\r\n                        var TileIndex = this.chrRomHandler.GetPPUByte(0, tileNametablePosition);\r\n                        var patternTableYOffset = this.yPosition & 7;\r\n                        var patternID = this.backgroundPatternTableIndex + (TileIndex * 16) + patternTableYOffset;\r\n                        this.patternEntry = this.chrRomHandler.GetPPUByte(0, patternID);\r\n                        this.patternEntryByte2 = this.chrRomHandler.GetPPUByte(0, patternID + 8);\r\n                        this.currentAttributeByte = this.GetAttributeTableEntry(ppuNameTableMemoryStart, xTilePosition, this.yPosition >> 3);\r\n                        /* end fetch next tile */\r\n                    }\r\n                    /* draw pixel */\r\n                    var tilePixel = this._tilesAreVisible ? this.GetNameTablePixel() : 0;\r\n                    // bool foregroundPixel = isForegroundPixel;\r\n                    var spritePixel = this._spritesAreVisible ? this.GetSpritePixel() : 0;\r\n                    if (!this.hitSprite && this.spriteZeroHit && tilePixel !== 0) {\r\n                        this.hitSprite = true;\r\n                        this._PPUStatus = this._PPUStatus | 64;\r\n                    }\r\n                    //var x = pal[_palette[(foregroundPixel || (tilePixel == 0 && spritePixel != 0)) ? spritePixel : tilePixel]];\r\n                    //var x = \r\n                    this.byteOutBuffer[this.vbufLocation * 4] = this._palette[(this.isForegroundPixel || (tilePixel === 0 && spritePixel !== 0)) ? spritePixel : tilePixel];\r\n                    //byteOutBuffer[(vbufLocation * 4) + 1] = x;// (byte)(x >> 8);\r\n                    //byteOutBuffer[(vbufLocation * 4) + 2] = x;//  (byte)(x >> 16);\r\n                    //byteOutBuffer[(vbufLocation * 4) + 3] = 0xFF;// (byte)(x);// (byte)rgb32OutBuffer[vbufLocation];\r\n                    this.vbufLocation++;\r\n                }\r\n                if (this.currentXPosition === 324) {\r\n                    this.chrRomHandler.UpdateScanlineCounter();\r\n                }\r\n                this.currentXPosition++;\r\n                if (this.currentXPosition > 340) {\r\n                    this.currentXPosition = 0;\r\n                    this.currentYPosition++;\r\n                    this.PreloadSprites(this.currentYPosition);\r\n                    if (this.spritesOnThisScanline >= 7) {\r\n                        this._PPUStatus = this._PPUStatus | 32;\r\n                    }\r\n                    this.lockedHScroll = this._hScroll;\r\n                    this.UpdatePixelInfo();\r\n                    //RunNewScanlineEvents \r\n                    this.yPosition = this.currentYPosition + this.lockedVScroll;\r\n                    if (this.yPosition < 0) {\r\n                        this.yPosition += 240;\r\n                    }\r\n                    if (this.yPosition >= 240) {\r\n                        this.yPosition -= 240;\r\n                        this.yNTXor = 2048;\r\n                    }\r\n                    else {\r\n                        this.yNTXor = 0;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.LastcpuClock = cpuClockNum;\r\n    };\r\n    ChiChiPPU.prototype.Tick = function () {\r\n        this.DrawTo(this.LastcpuClock + 1);\r\n    };\r\n    ChiChiPPU.prototype.UpdatePixelInfo = function () {\r\n        this.nameTableMemoryStart = this.nameTableBits * 0x400;\r\n    };\r\n    ChiChiPPU.pal = new Uint32Array([7961465, 10626572, 11407400, 10554206, 7733552, 2753820, 725017, 271983, 278855, 284436, 744967, 3035906, 7161605, 0, 131586, 131586, 12566719, 14641430, 15614283, 14821245, 12196292, 6496468, 2176980, 875189, 293472, 465210, 1597716, 5906953, 11090185, 2961197, 197379, 197379, 16316149, 16298569, 16588080, 16415170, 15560682, 12219892, 7115511, 4563694, 2277591, 2151458, 4513360, 1957181, 14604331, 6579811, 263172, 263172, 16447992, 16441012, 16634316, 16500447, 16236786, 14926838, 12831991, 11393781, 2287340, 5500370, 11858360, 14283440, 15921318, 13158344, 328965, 328965, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\r\n    return ChiChiPPU;\r\n}());\r\nexports.ChiChiPPU = ChiChiPPU;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ChiChiCarts_1 = __webpack_require__(8);\r\nvar ChiChiAudio_1 = __webpack_require__(9);\r\nvar ChiChiTypes_1 = __webpack_require__(4);\r\nvar ChiChiControl_1 = __webpack_require__(10);\r\nvar ChiChiPPU_1 = __webpack_require__(6);\r\nvar CommonAudio_1 = __webpack_require__(5);\r\n//machine wrapper\r\nvar ChiChiMachine = /** @class */ (function () {\r\n    function ChiChiMachine(cpu) {\r\n        var _this = this;\r\n        this.frameJustEnded = true;\r\n        this.frameOn = false;\r\n        this.totalCPUClocks = 0;\r\n        this._enableSound = false;\r\n        this.evenFrame = true;\r\n        var wavSharer = new CommonAudio_1.WavSharer();\r\n        this.SoundBopper = new ChiChiAudio_1.ChiChiBopper(wavSharer);\r\n        this.WaveForms = wavSharer;\r\n        this.ppu = new ChiChiPPU_1.ChiChiPPU();\r\n        this.Cpu = cpu ? cpu : new ChiChiCPPU(this.SoundBopper, this.ppu);\r\n        this.ppu.cpu = this.Cpu;\r\n        this.ppu.NMIHandler = function () {\r\n            _this.Cpu.NMIHandler();\r\n        };\r\n        this.ppu.frameFinished = function () { _this.FrameFinished(); };\r\n    }\r\n    ChiChiMachine.prototype.Drawscreen = function () {\r\n    };\r\n    Object.defineProperty(ChiChiMachine.prototype, \"Cart\", {\r\n        get: function () {\r\n            return this.Cpu.Cart;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChiChiMachine.prototype, \"EnableSound\", {\r\n        get: function () {\r\n            return this._enableSound;\r\n        },\r\n        set: function (value) {\r\n            this._enableSound = value;\r\n            if (this._enableSound) {\r\n                this.SoundBopper.RebuildSound();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChiChiMachine.prototype, \"PadOne\", {\r\n        get: function () {\r\n            return this.Cpu.PadOne.ControlPad;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChiChiMachine.prototype, \"PadTwo\", {\r\n        get: function () {\r\n            return this.Cpu.PadTwo.ControlPad;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChiChiMachine.prototype.Reset = function () {\r\n        if (this.Cpu && this.Cart && this.Cart.supported) {\r\n            // ForceStop();\r\n            //this.ppu.Initialize();\r\n            //this.Cart.InitializeCart();\r\n            this.Cpu.ResetCPU();\r\n            this.SoundBopper.RebuildSound();\r\n            //ClearGenieCodes();\r\n            //this.Cpu.PowerOn();\r\n            this.RunState = ChiChiTypes_1.RunningStatuses.Running;\r\n        }\r\n    };\r\n    ChiChiMachine.prototype.PowerOn = function () {\r\n        if (this.Cpu && this.Cart && this.Cart.supported) {\r\n            this.Cpu.ppu.Initialize();\r\n            this.Cart.InitializeCart();\r\n            // if (this.SRAMReader !=  null && this.Cart.UsesSRAM) {\r\n            //     this.Cart.SRAM = this.SRAMReader(this.Cart.ChiChiNES$INESCart$CheckSum);\r\n            // }\r\n            //this.Cpu.ResetCPU();\r\n            //ClearGenieCodes();\r\n            this.Cpu.PowerOn();\r\n            this.SoundBopper.RebuildSound();\r\n            this.RunState = ChiChiTypes_1.RunningStatuses.Running;\r\n        }\r\n    };\r\n    ChiChiMachine.prototype.PowerOff = function () {\r\n        this.RunState = ChiChiTypes_1.RunningStatuses.Off;\r\n    };\r\n    ChiChiMachine.prototype.Step = function () {\r\n        if (this.frameJustEnded) {\r\n            this.Cpu.FindNextEvent();\r\n            this.frameOn = true;\r\n            this.frameJustEnded = false;\r\n        }\r\n        this.Cpu.Step();\r\n        if (!this.frameOn) {\r\n            this.totalCPUClocks = 0;\r\n            this.Cpu.Clock = 0;\r\n            this.ppu.LastcpuClock = 0;\r\n            this.frameJustEnded = true;\r\n        }\r\n    };\r\n    ChiChiMachine.prototype.RunFrame = function () {\r\n        this.frameOn = true;\r\n        this.frameJustEnded = false;\r\n        //_cpu.RunFrame();\r\n        this.Cpu.FindNextEvent();\r\n        do {\r\n            this.Cpu.Step();\r\n        } while (this.frameOn);\r\n        this.totalCPUClocks = this.Cpu.Clock;\r\n        this.SoundBopper.FlushFrame(this.totalCPUClocks);\r\n        this.SoundBopper.EndFrame(this.totalCPUClocks);\r\n        //this.SoundBopper.writer.ReadWaves();\r\n        this.totalCPUClocks = 0;\r\n        this.Cpu.Clock = 0;\r\n        this.ppu.LastcpuClock = 0;\r\n    };\r\n    ChiChiMachine.prototype.EjectCart = function () {\r\n        this.Cpu.Cart = null;\r\n        this.ppu.ChrRomHandler = null;\r\n    };\r\n    ChiChiMachine.prototype.LoadNSF = function (rom) {\r\n    };\r\n    ChiChiMachine.prototype.LoadCart = function (rom) {\r\n        var _this = this;\r\n        this.EjectCart();\r\n        var cart = ChiChiCarts_1.iNESFileHandler.LoadROM(this.Cpu, rom);\r\n        if (cart != null) {\r\n            this.Cpu.cheating = false;\r\n            this.Cpu.genieCodes = new Array();\r\n            this.Cpu.Cart = cart; // Bridge.cast(this.Cart, ChiChiNES.IClockedMemoryMappedIOElement);\r\n            this.Cart.NMIHandler = function () { _this.Cpu.InterruptRequest(); };\r\n            this.ppu.ChrRomHandler = this.Cart;\r\n        }\r\n        else {\r\n            throw new Error(\"Unsupported ROM type - load failed.\");\r\n        }\r\n    };\r\n    ChiChiMachine.prototype.HasState = function (index) {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    ChiChiMachine.prototype.GetState = function (index) {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    ChiChiMachine.prototype.SetState = function (index) {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    ChiChiMachine.prototype.SetupSound = function () {\r\n        throw new Error(\"Method not implemented.\");\r\n    };\r\n    ChiChiMachine.prototype.FrameFinished = function () {\r\n        this.frameJustEnded = true;\r\n        this.frameOn = false;\r\n        this.Drawscreen();\r\n    };\r\n    ChiChiMachine.prototype.dispose = function () {\r\n    };\r\n    return ChiChiMachine;\r\n}());\r\nexports.ChiChiMachine = ChiChiMachine;\r\n//chichipig\r\nvar ChiChiCPPU = /** @class */ (function () {\r\n    function ChiChiCPPU(bopper, ppu) {\r\n        this.SRMasks_CarryMask = 0x01;\r\n        this.SRMasks_ZeroResultMask = 0x02;\r\n        this.SRMasks_InterruptDisableMask = 0x04;\r\n        this.SRMasks_DecimalModeMask = 0x08;\r\n        this.SRMasks_BreakCommandMask = 0x10;\r\n        this.SRMasks_ExpansionMask = 0x20;\r\n        this.SRMasks_OverflowMask = 0x40;\r\n        this.SRMasks_NegativeResultMask = 0x80;\r\n        this._reset = false;\r\n        //timing\r\n        this._clock = 0;\r\n        this._ticks = 0;\r\n        // CPU Status\r\n        this._statusRegister = 0;\r\n        this._programCounter = 0;\r\n        this._handleNMI = false;\r\n        this._handleIRQ = false;\r\n        // CPU Op info\r\n        this._addressBus = 0;\r\n        this._dataBus = 0;\r\n        this._operationCounter = 0;\r\n        this._accumulator = 0;\r\n        this._indexRegisterX = 0;\r\n        this._indexRegisterY = 0;\r\n        // Current Instruction\r\n        this._currentInstruction_AddressingMode = ChiChiTypes_1.ChiChiCPPU_AddressingModes.Bullshit;\r\n        this._currentInstruction_Address = 0;\r\n        this._currentInstruction_OpCode = 0;\r\n        this._currentInstruction_Parameters0 = 0;\r\n        this._currentInstruction_Parameters1 = 0;\r\n        this._currentInstruction_ExtraTiming = 0;\r\n        this.systemClock = 0;\r\n        this.nextEvent = -1;\r\n        //tbi\r\n        this._cheating = false;\r\n        this.__frameFinished = true;\r\n        // system ram\r\n        this._ramsBuffer = new SharedArrayBuffer(8192 * Uint8Array.BYTES_PER_ELEMENT);\r\n        this.Rams = new Uint8Array(this._ramsBuffer); // System.Array.init(vv, 0, System.Int32);\r\n        this._stackPointer = 255;\r\n        // debug helpers\r\n        this.instructionUsage = new Uint32Array(256); //System.Array.init(256, 0, System.Int32);\r\n        this._debugging = false;\r\n        // #region Cheats\r\n        this.cheating = false;\r\n        this.genieCodes = new Array();\r\n        // #endregion cheats\r\n        this.instructionHistoryPointer = 255;\r\n        this._instructionHistory = new Array(256); //System.Array.init(256, null, ChiChiInstruction);\r\n        // ppu events\r\n        // ppu variables \r\n        this.backgroundPatternTableIndex = 0;\r\n        //private PPU_HandleVBlankIRQ: boolean;\r\n        this._PPUAddress = 0;\r\n        this._PPUStatus = 0;\r\n        this._PPUControlByte0 = 0;\r\n        this._PPUControlByte1 = 0;\r\n        this._spriteAddress = 0;\r\n        this.currentXPosition = 0;\r\n        this.currentYPosition = 0;\r\n        this._hScroll = 0;\r\n        this._vScroll = 0;\r\n        this.lockedHScroll = 0;\r\n        this.lockedVScroll = 0;\r\n        //private scanlineNum = 0;\r\n        //private scanlinePos = 0;\r\n        this.shouldRender = false;\r\n        //private NMIHasBeenThrownThisFrame = false;\r\n        this._frames = 0;\r\n        this.hitSprite = false;\r\n        this.PPUAddressLatchIsHigh = true;\r\n        this.p32 = new Uint32Array(256); // System.Array.init(256, 0, System.Int32);\r\n        this.isRendering = true;\r\n        this.frameClock = 0;\r\n        this.FrameEnded = false;\r\n        this.frameOn = false;\r\n        //private framePalette = System.Array.init(256, 0, System.Int32);\r\n        this.nameTableBits = 0;\r\n        this.vidRamIsRam = true;\r\n        this._palette = new Uint8Array(32); // System.Array.init(32, 0, System.Int32);\r\n        this._openBus = 0;\r\n        this.sprite0scanline = 0;\r\n        this.sprite0x = 0;\r\n        this._maxSpritesPerScanline = 64;\r\n        this.xNTXor = 0;\r\n        this.yNTXor = 0;\r\n        this.spriteRAMBuffer = new SharedArrayBuffer(256 * Uint8Array.BYTES_PER_ELEMENT);\r\n        this.spriteRAM = new Uint8Array(this.spriteRAMBuffer); // System.Array.init(256, 0, System.Int32);\r\n        this.spritesOnLine = new Array(512); // System.Array.init(512, 0, System.Int32);\r\n        this.currentTileIndex = 0;\r\n        this.fetchTile = true;\r\n        // tile bytes currently latched in ppu\r\n        this.patternEntry = 0;\r\n        this.patternEntryByte2 = 0;\r\n        //\r\n        this.outBuffer = new Uint8Array(65536);\r\n        // 'internal\r\n        this.byteOutBuffer = new Uint8Array(256 * 256 * 4); // System.Array.init(262144, 0, System.Int32);\r\n        this.debugEvents = new Array();\r\n        this.SoundBopper = bopper;\r\n        bopper.NMIHandler = this.IRQUpdater;\r\n        // init PPU\r\n        this.ppu = ppu;\r\n        this.ppu.InitSprites();\r\n        this._padOne = new ChiChiControl_1.ChiChiInputHandler();\r\n        this._padTwo = new ChiChiControl_1.ChiChiInputHandler();\r\n        for (var i = 0; i < this._instructionHistory.length; ++i) {\r\n            this._instructionHistory[i] = new ChiChiTypes_1.ChiChiInstruction();\r\n        }\r\n    }\r\n    Object.defineProperty(ChiChiCPPU.prototype, \"clock\", {\r\n        get: function () {\r\n            return this._clock;\r\n        },\r\n        set: function (value) {\r\n            this._clock = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChiChiCPPU.prototype.advanceClock = function (value) {\r\n        this.ppu.DrawTo(this._clock);\r\n        this.Cart.advanceClock(value);\r\n        this._clock += value;\r\n    };\r\n    Object.defineProperty(ChiChiCPPU.prototype, \"Debugging\", {\r\n        get: function () {\r\n            return this._debugging;\r\n        },\r\n        set: function (value) {\r\n            this._debugging = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChiChiCPPU.prototype.cheat = function (address, result) {\r\n        var patch = this.genieCodes.find(function (v) { return v.address == address; });\r\n        if (!patch)\r\n            return result;\r\n        if (patch.data > 0xFF) {\r\n            // its a comparison\r\n            var compare = patch.data >> 8;\r\n            if (compare == result) {\r\n                result = patch.data & 0xFF;\r\n            }\r\n        }\r\n        else {\r\n            result = patch.data;\r\n        }\r\n        return result;\r\n    };\r\n    Object.defineProperty(ChiChiCPPU.prototype, \"InstructionHistory\", {\r\n        get: function () {\r\n            return this._instructionHistory;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChiChiCPPU.prototype, \"InstructionHistoryPointer\", {\r\n        get: function () {\r\n            return this.instructionHistoryPointer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChiChiCPPU.prototype, \"PadOne\", {\r\n        get: function () {\r\n            return this._padOne;\r\n        },\r\n        set: function (value) {\r\n            this._padOne = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChiChiCPPU.prototype, \"PadTwo\", {\r\n        get: function () {\r\n            return this._padTwo;\r\n        },\r\n        set: function (value) {\r\n            this._padTwo = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChiChiCPPU.prototype.addDebugEvent = function (value) {\r\n        this.debugEvents.push(value);\r\n    };\r\n    ChiChiCPPU.prototype.removeDebugEvent = function (value) {\r\n        // throw new Error('Method not implemented.');\r\n    };\r\n    Object.defineProperty(ChiChiCPPU.prototype, \"Clock\", {\r\n        get: function () {\r\n            return this.clock;\r\n        },\r\n        set: function (value) {\r\n            this.clock = value;\r\n            if (value === 0) {\r\n                this.systemClock = (this.systemClock + this.clock) & 0xFFFFFFFFFF;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChiChiCPPU.prototype.SetFlag = function (Flag, value) {\r\n        this._statusRegister = (value ? (this._statusRegister | Flag) : (this._statusRegister & ~Flag));\r\n        this._statusRegister |= 32; // (int)CPUStatusMasks.ExpansionMask;\r\n    };\r\n    ChiChiCPPU.prototype.GetFlag = function (flag) {\r\n        return ((this._statusRegister & flag) === flag);\r\n    };\r\n    ChiChiCPPU.prototype.InterruptRequest = function () {\r\n        //When an IRQ or NMI occurs, the current status with bit 4 clear and bit 5 \r\n        //  set is pushed on the stack, then the I flag is set. \r\n        if (!this.GetFlag(this.SRMasks_InterruptDisableMask)) {\r\n            this.SetFlag(this.SRMasks_InterruptDisableMask, true);\r\n            var newStatusReg1 = this._statusRegister & ~0x10 | 0x20;\r\n            // if enabled\r\n            // push pc onto stack (high byte first)\r\n            this.PushStack(this._programCounter >> 8);\r\n            this.PushStack(this._programCounter);\r\n            // push sr onto stack\r\n            this.PushStack(this._statusRegister);\r\n            // point pc to interrupt service routine\r\n            this._programCounter = this.GetByte(0xFFFE) + (this.GetByte(0xFFFF) << 8);\r\n            // nonOpCodeticks = 7;\r\n        }\r\n    };\r\n    ChiChiCPPU.prototype.NonMaskableInterrupt = function () {\r\n        //When an IRQ or NMI occurs, the current status with bit 4 clear and bit 5 \r\n        //  set is pushed on the stack, then the I flag is set. \r\n        var newStatusReg = this._statusRegister & ~0x10 | 0x20;\r\n        this.SetFlag(this.SRMasks_InterruptDisableMask, true);\r\n        // push pc onto stack (high byte first)\r\n        this.PushStack(this._programCounter >> 8);\r\n        this.PushStack(this._programCounter & 0xFF);\r\n        //c7ab\r\n        // push sr onto stack\r\n        this.PushStack(newStatusReg);\r\n        // point pc to interrupt service routine\r\n        var lowByte = this.GetByte(0xFFFA);\r\n        var highByte = this.GetByte(0xFFFB);\r\n        var jumpTo = lowByte | (highByte << 8);\r\n        this._programCounter = jumpTo;\r\n        //nonOpCodeticks = 7;\r\n    };\r\n    ChiChiCPPU.prototype.CheckEvent = function () {\r\n        if (this.nextEvent === -1) {\r\n            this.FindNextEvent();\r\n        }\r\n    };\r\n    ChiChiCPPU.prototype.RunFast = function () {\r\n        while (this.clock < 29780) {\r\n            this.Step();\r\n        }\r\n    };\r\n    ChiChiCPPU.prototype.Step = function () {\r\n        //let tickCount = 0;\r\n        this._currentInstruction_ExtraTiming = 0;\r\n        //this.FindNextEvent();\r\n        if (this._handleNMI) {\r\n            this.advanceClock(7);\r\n            this._handleNMI = false;\r\n            this.NonMaskableInterrupt();\r\n        }\r\n        else if (this._handleIRQ) {\r\n            this.advanceClock(7);\r\n            this._handleIRQ = false;\r\n            this.InterruptRequest();\r\n        }\r\n        //FetchNextInstruction();\r\n        this._currentInstruction_Address = this._programCounter;\r\n        this._currentInstruction_OpCode = this.GetByte((this._programCounter++) & 0xFFFF);\r\n        this._currentInstruction_AddressingMode = ChiChiCPPU.addressModes[this._currentInstruction_OpCode];\r\n        this.fetchInstructionParameters();\r\n        this.execute();\r\n        //(\"{0:x} {1:x} {2:x}\", _currentInstruction_OpCode, _currentInstruction_AddressingMode, _currentInstruction_Address);\r\n        if (this._debugging) {\r\n            this.WriteInstructionHistoryAndUsage();\r\n            this._operationCounter++;\r\n        }\r\n        this.advanceClock(ChiChiCPPU.cpuTiming[this._currentInstruction_OpCode]);\r\n        this.advanceClock(this._currentInstruction_ExtraTiming);\r\n        //this.clock += ;\r\n    };\r\n    ChiChiCPPU.prototype.fetchInstructionParameters = function () {\r\n        switch (this._currentInstruction_AddressingMode) {\r\n            case ChiChiTypes_1.ChiChiCPPU_AddressingModes.Absolute:\r\n            case ChiChiTypes_1.ChiChiCPPU_AddressingModes.AbsoluteX:\r\n            case ChiChiTypes_1.ChiChiCPPU_AddressingModes.AbsoluteY:\r\n            case ChiChiTypes_1.ChiChiCPPU_AddressingModes.Indirect:\r\n                // case AddressingModes.IndirectAbsoluteX:\r\n                this._currentInstruction_Parameters0 = this.GetByte((this._programCounter++) & 0xFFFF);\r\n                this._currentInstruction_Parameters1 = this.GetByte((this._programCounter++) & 0xFFFF);\r\n                break;\r\n            case ChiChiTypes_1.ChiChiCPPU_AddressingModes.ZeroPage:\r\n            case ChiChiTypes_1.ChiChiCPPU_AddressingModes.ZeroPageX:\r\n            case ChiChiTypes_1.ChiChiCPPU_AddressingModes.ZeroPageY:\r\n            case ChiChiTypes_1.ChiChiCPPU_AddressingModes.Relative:\r\n            case ChiChiTypes_1.ChiChiCPPU_AddressingModes.IndexedIndirect:\r\n            case ChiChiTypes_1.ChiChiCPPU_AddressingModes.IndirectIndexed:\r\n            case ChiChiTypes_1.ChiChiCPPU_AddressingModes.IndirectZeroPage:\r\n            case ChiChiTypes_1.ChiChiCPPU_AddressingModes.Immediate:\r\n                this._currentInstruction_Parameters0 = this.GetByte((this._programCounter++) & 0xFFFF);\r\n                break;\r\n            case ChiChiTypes_1.ChiChiCPPU_AddressingModes.Accumulator:\r\n            case ChiChiTypes_1.ChiChiCPPU_AddressingModes.Implicit:\r\n                break;\r\n            default:\r\n                //  throw new Error(\"Invalid address mode!!\");\r\n                break;\r\n        }\r\n    };\r\n    ChiChiCPPU.prototype.ResetCPU = function () {\r\n        this._statusRegister = 52;\r\n        this._operationCounter = 0;\r\n        this._stackPointer = 253;\r\n        this._programCounter = this.GetByte(0xFFFC) | (this.GetByte(0xFFFD) << 8);\r\n        this._ticks = 4;\r\n        this.genieCodes = [];\r\n    };\r\n    ChiChiCPPU.prototype.PowerOn = function () {\r\n        // powers up with this state\r\n        this._statusRegister = 52;\r\n        this._stackPointer = 253;\r\n        this._operationCounter = 0;\r\n        this._ticks = 4;\r\n        // wram initialized to 0xFF, with some exceptions\r\n        // probably doesn't affect games, but why not?\r\n        for (var i = 0; i < 2048; ++i) {\r\n            this.Rams[i] = 255;\r\n        }\r\n        this.Rams[8] = 247;\r\n        this.Rams[9] = 239;\r\n        this.Rams[10] = 223;\r\n        this.Rams[15] = 191;\r\n        this._programCounter = this.GetByte(0xFFFC) | (this.GetByte(0xFFFD) << 8);\r\n    };\r\n    ChiChiCPPU.prototype.GetState = function (outStream) {\r\n        //throw new Error('Method not implemented.');\r\n    };\r\n    ChiChiCPPU.prototype.SetState = function (inStream) {\r\n        // throw new Error('Method not implemented.');\r\n    };\r\n    ChiChiCPPU.prototype.RunFrame = function () {\r\n        this.FindNextEvent();\r\n        do {\r\n            this.Step();\r\n        } while (!this.__frameFinished);\r\n    };\r\n    ChiChiCPPU.prototype.DecodeAddress = function () {\r\n        this._currentInstruction_ExtraTiming = 0;\r\n        var result = 0;\r\n        var lowByte = 0;\r\n        var highByte = 0;\r\n        switch (this._currentInstruction_AddressingMode) {\r\n            case ChiChiTypes_1.ChiChiCPPU_AddressingModes.Absolute:\r\n                // two parameters refer to the memory position\r\n                result = ((this._currentInstruction_Parameters1 << 8) | this._currentInstruction_Parameters0);\r\n                break;\r\n            case ChiChiTypes_1.ChiChiCPPU_AddressingModes.AbsoluteX:\r\n                // absolute, x indexed - two paramaters + Index register x\r\n                result = (((((this._currentInstruction_Parameters1 << 8) | this._currentInstruction_Parameters0) + this._indexRegisterX) | 0));\r\n                if ((result & 0xFF) < this._indexRegisterX) {\r\n                    this._currentInstruction_ExtraTiming = 1;\r\n                }\r\n                break;\r\n            case ChiChiTypes_1.ChiChiCPPU_AddressingModes.AbsoluteY:\r\n                // absolute, y indexed - two paramaters + Index register y\r\n                result = (((((this._currentInstruction_Parameters1 << 8) | this._currentInstruction_Parameters0) + this._indexRegisterY) | 0));\r\n                if ((result & 0xFF) < this._indexRegisterY) {\r\n                    this._currentInstruction_ExtraTiming = 1;\r\n                }\r\n                break;\r\n            case ChiChiTypes_1.ChiChiCPPU_AddressingModes.ZeroPage:\r\n                // first parameter represents offset in zero page\r\n                result = this._currentInstruction_Parameters0;\r\n                break;\r\n            case ChiChiTypes_1.ChiChiCPPU_AddressingModes.ZeroPageX:\r\n                result = (((this._currentInstruction_Parameters0 + this._indexRegisterX) | 0)) & 0xFF;\r\n                break;\r\n            case ChiChiTypes_1.ChiChiCPPU_AddressingModes.ZeroPageY:\r\n                result = ((((this._currentInstruction_Parameters0 & 0xFF) + (this._indexRegisterY & 0xFF)) | 0)) & 0xFF;\r\n                break;\r\n            case ChiChiTypes_1.ChiChiCPPU_AddressingModes.Indirect:\r\n                lowByte = this._currentInstruction_Parameters0;\r\n                highByte = this._currentInstruction_Parameters1 << 8;\r\n                var indAddr = (highByte | lowByte) & 65535;\r\n                var indirectAddr = (this.GetByte(indAddr));\r\n                lowByte = (((lowByte + 1) | 0)) & 0xFF;\r\n                indAddr = (highByte | lowByte) & 65535;\r\n                indirectAddr = indirectAddr | (this.GetByte(indAddr) << 8);\r\n                result = indirectAddr;\r\n                break;\r\n            case ChiChiTypes_1.ChiChiCPPU_AddressingModes.IndexedIndirect:\r\n                var addr = (((this._currentInstruction_Parameters0 + this._indexRegisterX) | 0)) & 0xFF;\r\n                lowByte = this.GetByte(addr);\r\n                addr = (addr + 1) | 0;\r\n                highByte = this.GetByte(addr & 0xFF);\r\n                highByte = highByte << 8;\r\n                result = highByte | lowByte;\r\n                break;\r\n            case ChiChiTypes_1.ChiChiCPPU_AddressingModes.IndirectIndexed:\r\n                lowByte = this.GetByte(this._currentInstruction_Parameters0);\r\n                highByte = this.GetByte((((this._currentInstruction_Parameters0 + 1) | 0)) & 0xFF) << 8;\r\n                addr = (lowByte | highByte);\r\n                result = (addr + this._indexRegisterY) | 0;\r\n                if ((result & 0xFF) > this._indexRegisterY) {\r\n                    this._currentInstruction_ExtraTiming = 1;\r\n                }\r\n                break;\r\n            case ChiChiTypes_1.ChiChiCPPU_AddressingModes.Relative:\r\n                result = (((this._programCounter + this._currentInstruction_Parameters0) | 0));\r\n                break;\r\n            default:\r\n                this.HandleBadOperation();\r\n                break;\r\n        }\r\n        return result & 65535;\r\n    };\r\n    ChiChiCPPU.prototype.HandleBadOperation = function () {\r\n        //throw new Error('Method not implemented.');\r\n    };\r\n    ChiChiCPPU.prototype.DecodeOperand = function () {\r\n        switch (this._currentInstruction_AddressingMode) {\r\n            case ChiChiTypes_1.ChiChiCPPU_AddressingModes.Immediate:\r\n                this._dataBus = this._currentInstruction_Parameters0;\r\n                return this._currentInstruction_Parameters0;\r\n            case ChiChiTypes_1.ChiChiCPPU_AddressingModes.Accumulator:\r\n                return this._accumulator;\r\n            default:\r\n                this._dataBus = this.GetByte(this.DecodeAddress());\r\n                return this._dataBus;\r\n        }\r\n    };\r\n    ChiChiCPPU.prototype.execute = function () {\r\n        var data = 0;\r\n        var lowByte = 0;\r\n        var highByte = 0;\r\n        var carryFlag = 0;\r\n        var result = 0;\r\n        var oldbit = 0;\r\n        switch (this._currentInstruction_OpCode) {\r\n            case 128:\r\n            case 130:\r\n            case 194:\r\n            case 226:\r\n            case 4:\r\n            case 20:\r\n            case 52:\r\n            case 68:\r\n            case 84:\r\n            case 100:\r\n            case 116:\r\n            case 212:\r\n            case 244:\r\n            case 12:\r\n            case 28:\r\n            case 60:\r\n            case 92:\r\n            case 124:\r\n            case 220:\r\n            case 252:\r\n                //SKB, SKW, DOP, - undocumented noops\r\n                this.DecodeAddress();\r\n                break;\r\n            case 105:\r\n            case 101:\r\n            case 117:\r\n            case 109:\r\n            case 125:\r\n            case 121:\r\n            case 97:\r\n            case 113:\r\n                //ADC\r\n                data = this.DecodeOperand();\r\n                carryFlag = (this._statusRegister & 1);\r\n                result = (this._accumulator + data + carryFlag) | 0;\r\n                // carry flag\r\n                this.SetFlag(this.SRMasks_CarryMask, result > 255);\r\n                // overflow flag\r\n                this.SetFlag(this.SRMasks_OverflowMask, ((this._accumulator ^ data) & 128) !== 128 && ((this._accumulator ^ result) & 128) === 128);\r\n                // occurs when bit 7 is set\r\n                this._accumulator = result & 0xFF;\r\n                this.SetZNFlags(this._accumulator);\r\n                break;\r\n            case 41:\r\n            case 37:\r\n            case 53:\r\n            case 45:\r\n            case 61:\r\n            case 57:\r\n            case 33:\r\n            case 49:\r\n                //AND\r\n                this._accumulator = (this._accumulator & this.DecodeOperand());\r\n                this.SetZNFlags(this._accumulator);\r\n                break;\r\n            case 10:\r\n            case 6:\r\n            case 22:\r\n            case 14:\r\n            case 30:\r\n                //ASL\r\n                data = this.DecodeOperand();\r\n                // set carry flag\r\n                this.SetFlag(this.SRMasks_CarryMask, ((data & 128) === 128));\r\n                data = (data << 1) & 254;\r\n                if (this._currentInstruction_AddressingMode === ChiChiTypes_1.ChiChiCPPU_AddressingModes.Accumulator) {\r\n                    this._accumulator = data;\r\n                }\r\n                else {\r\n                    this.SetByte(this.DecodeAddress(), data);\r\n                }\r\n                this.SetZNFlags(data);\r\n                break;\r\n            case 144:\r\n                //BCC\r\n                if ((this._statusRegister & 1) !== 1) {\r\n                    this.Branch();\r\n                }\r\n                break;\r\n            case 176:\r\n                //BCS();\r\n                if ((this._statusRegister & 1) === 1) {\r\n                    this.Branch();\r\n                }\r\n                break;\r\n            case 240:\r\n                //BEQ();\r\n                if ((this._statusRegister & 2) === 2) {\r\n                    this.Branch();\r\n                }\r\n                break;\r\n            case 36:\r\n            case 44:\r\n                //BIT();\r\n                data = this.DecodeOperand();\r\n                // overflow is bit 6\r\n                this.SetFlag(this.SRMasks_OverflowMask, (data & 64) === 64);\r\n                // negative is bit 7\r\n                if ((data & 128) === 128) {\r\n                    this._statusRegister = this._statusRegister | 128;\r\n                }\r\n                else {\r\n                    this._statusRegister = this._statusRegister & 127;\r\n                }\r\n                if ((data & this._accumulator) === 0) {\r\n                    this._statusRegister = this._statusRegister | 2;\r\n                }\r\n                else {\r\n                    this._statusRegister = this._statusRegister & 253;\r\n                }\r\n                break;\r\n            case 48:\r\n                //BMI();\r\n                if ((this._statusRegister & 128) === 128) {\r\n                    this.Branch();\r\n                }\r\n                break;\r\n            case 208:\r\n                //BNE();\r\n                if ((this._statusRegister & 2) !== 2) {\r\n                    this.Branch();\r\n                }\r\n                break;\r\n            case 16:\r\n                //BPL();\r\n                if ((this._statusRegister & 128) !== 128) {\r\n                    this.Branch();\r\n                }\r\n                break;\r\n            case 0:\r\n                //BRK();\r\n                //BRK causes a non-maskable interrupt and increments the program counter by one. \r\n                //Therefore an RTI will go to the address of the BRK +2 so that BRK may be used to replace a two-byte instruction \r\n                // for debugging and the subsequent RTI will be correct. \r\n                // push pc onto stack (high byte first)\r\n                this._programCounter = this._programCounter + 1;\r\n                this.PushStack(this._programCounter >> 8 & 0xFF);\r\n                this.PushStack(this._programCounter & 0xFF);\r\n                // push sr onto stack\r\n                //PHP and BRK push the current status with bits 4 and 5 set on the stack; \r\n                data = this._statusRegister | 16 | 32;\r\n                this.PushStack(data);\r\n                // set interrupt disable, and break flags\r\n                // BRK then sets the I flag.\r\n                this._statusRegister = this._statusRegister | 20;\r\n                // point pc to interrupt service routine\r\n                this._addressBus = 65534;\r\n                lowByte = this.GetByte(this._addressBus);\r\n                this._addressBus = 65535;\r\n                highByte = this.GetByte(this._addressBus);\r\n                this._programCounter = lowByte + highByte * 256;\r\n                break;\r\n            case 80:\r\n                //BVC();\r\n                if ((this._statusRegister & 64) !== 64) {\r\n                    this.Branch();\r\n                }\r\n                break;\r\n            case 112:\r\n                //BVS();\r\n                if ((this._statusRegister & 64) === 64) {\r\n                    this.Branch();\r\n                }\r\n                break;\r\n            case 24:\r\n                //CLC();\r\n                this.SetFlag(this.SRMasks_CarryMask, false);\r\n                break;\r\n            case 216:\r\n                //CLD();\r\n                this.SetFlag(this.SRMasks_DecimalModeMask, false);\r\n                break;\r\n            case 88:\r\n                //CLI();\r\n                this.SetFlag(this.SRMasks_InterruptDisableMask, false);\r\n                break;\r\n            case 184:\r\n                //CLV();\r\n                this.SetFlag(this.SRMasks_OverflowMask, false);\r\n                break;\r\n            case 201:\r\n            case 197:\r\n            case 213:\r\n            case 205:\r\n            case 221:\r\n            case 217:\r\n            case 193:\r\n            case 209:\r\n                //CMP();\r\n                data = (this._accumulator + 256 - this.DecodeOperand());\r\n                this.Compare(data);\r\n                break;\r\n            case 224:\r\n            case 228:\r\n            case 236:\r\n                //CPX();\r\n                data = (this._indexRegisterX + 256 - this.DecodeOperand());\r\n                this.Compare(data);\r\n                break;\r\n            case 192:\r\n            case 196:\r\n            case 204:\r\n                //CPY();\r\n                data = (this._indexRegisterY + 256 - this.DecodeOperand());\r\n                this.Compare(data);\r\n                break;\r\n            case 198:\r\n            case 214:\r\n            case 206:\r\n            case 222:\r\n                //DEC();\r\n                data = this.DecodeOperand();\r\n                data = (data - 1) & 0xFF;\r\n                this.SetByte(this.DecodeAddress(), data);\r\n                this.SetZNFlags(data);\r\n                break;\r\n            case 202:\r\n                //DEX();\r\n                this._indexRegisterX = this._indexRegisterX - 1;\r\n                this._indexRegisterX = this._indexRegisterX & 0xFF;\r\n                this.SetZNFlags(this._indexRegisterX);\r\n                break;\r\n            case 136:\r\n                //DEY();\r\n                this._indexRegisterY = this._indexRegisterY - 1;\r\n                this._indexRegisterY = this._indexRegisterY & 0xFF;\r\n                this.SetZNFlags(this._indexRegisterY);\r\n                break;\r\n            case 73:\r\n            case 69:\r\n            case 85:\r\n            case 77:\r\n            case 93:\r\n            case 89:\r\n            case 65:\r\n            case 81:\r\n                //EOR();\r\n                this._accumulator = (this._accumulator ^ this.DecodeOperand());\r\n                this.SetZNFlags(this._accumulator);\r\n                break;\r\n            case 230:\r\n            case 246:\r\n            case 238:\r\n            case 254:\r\n                //INC();\r\n                data = this.DecodeOperand();\r\n                data = (data + 1) & 0xFF;\r\n                this.SetByte(this.DecodeAddress(), data);\r\n                this.SetZNFlags(data);\r\n                break;\r\n            case 232:\r\n                //INX();\r\n                this._indexRegisterX = this._indexRegisterX + 1;\r\n                this._indexRegisterX = this._indexRegisterX & 0xFF;\r\n                this.SetZNFlags(this._indexRegisterX);\r\n                break;\r\n            case 200:\r\n                this._indexRegisterY = this._indexRegisterY + 1;\r\n                this._indexRegisterY = this._indexRegisterY & 0xFF;\r\n                this.SetZNFlags(this._indexRegisterY);\r\n                break;\r\n            case 76:\r\n            case 108:\r\n                // JMP();\r\n                // 6052 indirect jmp bug\r\n                if (this._currentInstruction_AddressingMode === ChiChiTypes_1.ChiChiCPPU_AddressingModes.Indirect && this._currentInstruction_Parameters0 === 255) {\r\n                    this._programCounter = 255 | this._currentInstruction_Parameters1 << 8;\r\n                }\r\n                else {\r\n                    this._programCounter = this.DecodeAddress();\r\n                }\r\n                break;\r\n            case 32:\r\n                //JSR();\r\n                this.PushStack((this._programCounter >> 8) & 0xFF);\r\n                this.PushStack((this._programCounter - 1) & 0xFF);\r\n                this._programCounter = this.DecodeAddress();\r\n                break;\r\n            case 169:\r\n            case 165:\r\n            case 181:\r\n            case 173:\r\n            case 189:\r\n            case 185:\r\n            case 161:\r\n            case 177:\r\n                //LDA();\r\n                this._accumulator = this.DecodeOperand();\r\n                this.SetZNFlags(this._accumulator);\r\n                break;\r\n            case 162:\r\n            case 166:\r\n            case 182:\r\n            case 174:\r\n            case 190:\r\n                //LDX();\r\n                this._indexRegisterX = this.DecodeOperand();\r\n                this.SetZNFlags(this._indexRegisterX);\r\n                break;\r\n            case 160:\r\n            case 164:\r\n            case 180:\r\n            case 172:\r\n            case 188:\r\n                //LDY();\r\n                this._indexRegisterY = this.DecodeOperand();\r\n                this.SetZNFlags(this._indexRegisterY);\r\n                break;\r\n            case 74:\r\n            case 70:\r\n            case 86:\r\n            case 78:\r\n            case 94:\r\n                //LSR();\r\n                data = this.DecodeOperand();\r\n                //LSR shifts all bits right one position. 0 is shifted into bit 7 and the original bit 0 is shifted into the Carry. \r\n                this.SetFlag(this.SRMasks_CarryMask, (data & 1) === 1);\r\n                //target.SetFlag(CPUStatusBits.Carry, (rst & 1) == 1);\r\n                data = data >> 1 & 0xFF;\r\n                this.SetZNFlags(data);\r\n                if (this._currentInstruction_AddressingMode === ChiChiTypes_1.ChiChiCPPU_AddressingModes.Accumulator) {\r\n                    this._accumulator = data;\r\n                }\r\n                else {\r\n                    this.SetByte(this.DecodeAddress(), data);\r\n                }\r\n                break;\r\n            case 234:\r\n            case 26:\r\n            case 58:\r\n            case 90:\r\n            case 122:\r\n            case 218:\r\n            case 250:\r\n            case 137:\r\n                //case 0x04:\r\n                //case 0x14:\r\n                //case 0x34:\r\n                //case 0x44:\r\n                //case 0x64:\r\n                //case 0x80:\r\n                //case 0x82:\r\n                //case 0xc2:\r\n                //case 0xd4:\r\n                //case 0xe2:\r\n                //case 0xf4:\r\n                //case 0x0c:\r\n                //case 0x1c:\r\n                //case 0x3c:\r\n                //case 0x5c:\r\n                //case 0x7c:\r\n                //case 0xdc:\r\n                //case 0xfc:\r\n                //NOP();\r\n                if (this._currentInstruction_AddressingMode === ChiChiTypes_1.ChiChiCPPU_AddressingModes.AbsoluteX) {\r\n                    this.DecodeAddress();\r\n                }\r\n                break;\r\n            case 9:\r\n            case 5:\r\n            case 21:\r\n            case 13:\r\n            case 29:\r\n            case 25:\r\n            case 1:\r\n            case 17:\r\n                //ORA();\r\n                this._accumulator = (this._accumulator | this.DecodeOperand());\r\n                this.SetZNFlags(this._accumulator);\r\n                break;\r\n            case 72:\r\n                //PHA();\r\n                this.PushStack(this._accumulator);\r\n                break;\r\n            case 8:\r\n                //PHP();\r\n                data = this._statusRegister | 16 | 32;\r\n                this.PushStack(data);\r\n                break;\r\n            case 104:\r\n                //PLA();\r\n                this._accumulator = this.PopStack();\r\n                this.SetZNFlags(this._accumulator);\r\n                break;\r\n            case 40:\r\n                //PLP();\r\n                this._statusRegister = this.PopStack(); // | 0x20;\r\n                break;\r\n            case 42:\r\n            case 38:\r\n            case 54:\r\n            case 46:\r\n            case 62:\r\n                //ROL();\r\n                data = this.DecodeOperand();\r\n                // old carry bit shifted into bit 1\r\n                oldbit = (this._statusRegister & 1) === 1 ? 1 : 0;\r\n                this.SetFlag(this.SRMasks_CarryMask, (data & 128) === 128);\r\n                data = ((data << 1) | oldbit) & 0xFF;\r\n                //data = data & 0xFF;\r\n                //data = data | oldbit;\r\n                this.SetZNFlags(data);\r\n                if (this._currentInstruction_AddressingMode === ChiChiTypes_1.ChiChiCPPU_AddressingModes.Accumulator) {\r\n                    this._accumulator = data;\r\n                }\r\n                else {\r\n                    this.SetByte(this.DecodeAddress(), data);\r\n                }\r\n                break;\r\n            case 106:\r\n            case 102:\r\n            case 118:\r\n            case 110:\r\n            case 126:\r\n                //ROR();\r\n                data = this.DecodeOperand();\r\n                // old carry bit shifted into bit 7\r\n                oldbit = (this._statusRegister & 1) === 1 ? 128 : 0;\r\n                // original bit 0 shifted to carry\r\n                this.SetFlag(this.SRMasks_CarryMask, (data & 1) === 1);\r\n                data = (data >> 1) | oldbit;\r\n                this.SetZNFlags(data);\r\n                if (this._currentInstruction_AddressingMode === ChiChiTypes_1.ChiChiCPPU_AddressingModes.Accumulator) {\r\n                    this._accumulator = data;\r\n                }\r\n                else {\r\n                    this.SetByte(this.DecodeAddress(), data);\r\n                }\r\n                break;\r\n            case 64:\r\n                //RTI();\r\n                this._statusRegister = this.PopStack(); // | 0x20;\r\n                lowByte = this.PopStack();\r\n                highByte = this.PopStack();\r\n                this._programCounter = ((highByte << 8) | lowByte);\r\n                break;\r\n            case 96:\r\n                //RTS();\r\n                lowByte = (this.PopStack() + 1) & 0xFF;\r\n                highByte = this.PopStack();\r\n                this._programCounter = ((highByte << 8) | lowByte);\r\n                break;\r\n            case 235:\r\n            case 233:\r\n            case 229:\r\n            case 245:\r\n            case 237:\r\n            case 253:\r\n            case 249:\r\n            case 225:\r\n            case 241:// undocumented sbc immediate\r\n                //SBC();\r\n                // start the read process\r\n                data = this.DecodeOperand() & 4095;\r\n                carryFlag = ((this._statusRegister ^ 1) & 1);\r\n                result = (((this._accumulator - data) & 4095) - carryFlag) & 4095;\r\n                // set overflow flag if sign bit of accumulator changed\r\n                this.SetFlag(this.SRMasks_OverflowMask, ((this._accumulator ^ result) & 128) === 128 && ((this._accumulator ^ data) & 128) === 128);\r\n                this.SetFlag(this.SRMasks_CarryMask, (result < 256));\r\n                this._accumulator = (result) & 0xFF;\r\n                this.SetZNFlags(this._accumulator);\r\n                break;\r\n            case 56:\r\n                //SEC();\r\n                this.SetFlag(this.SRMasks_CarryMask, true);\r\n                break;\r\n            case 248:\r\n                //SED();\r\n                this.SetFlag(this.SRMasks_DecimalModeMask, true);\r\n                break;\r\n            case 120:\r\n                //SEI();\r\n                this.SetFlag(this.SRMasks_InterruptDisableMask, true);\r\n                break;\r\n            case 133:\r\n            case 149:\r\n            case 141:\r\n            case 157:\r\n            case 153:\r\n            case 129:\r\n            case 145:\r\n                //STA();\r\n                this.SetByte(this.DecodeAddress(), this._accumulator);\r\n                break;\r\n            case 134:\r\n            case 150:\r\n            case 142:\r\n                //STX();\r\n                this.SetByte(this.DecodeAddress(), this._indexRegisterX);\r\n                break;\r\n            case 132:\r\n            case 148:\r\n            case 140:\r\n                //STY();\r\n                this.SetByte(this.DecodeAddress(), this._indexRegisterY);\r\n                break;\r\n            case 170:\r\n                //TAX();\r\n                this._indexRegisterX = this._accumulator;\r\n                this.SetZNFlags(this._indexRegisterX);\r\n                break;\r\n            case 168:\r\n                //TAY();\r\n                this._indexRegisterY = this._accumulator;\r\n                this.SetZNFlags(this._indexRegisterY);\r\n                break;\r\n            case 186:\r\n                //TSX();\r\n                this._indexRegisterX = this._stackPointer;\r\n                this.SetZNFlags(this._indexRegisterX);\r\n                break;\r\n            case 138:\r\n                //TXA();\r\n                this._accumulator = this._indexRegisterX;\r\n                this.SetZNFlags(this._accumulator);\r\n                break;\r\n            case 154:\r\n                //TXS();\r\n                this._stackPointer = this._indexRegisterX;\r\n                break;\r\n            case 152:\r\n                //TYA();\r\n                this._accumulator = this._indexRegisterY;\r\n                this.SetZNFlags(this._accumulator);\r\n                break;\r\n            case 11:\r\n            case 43:\r\n                //AAC();\r\n                //AND byte with accumulator. If result is negative then carry is set.\r\n                //Status flags: N,Z,C\r\n                this._accumulator = this.DecodeOperand() & this._accumulator & 0xFF;\r\n                this.SetFlag(this.SRMasks_CarryMask, (this._accumulator & 128) === 128);\r\n                this.SetZNFlags(this._accumulator);\r\n                break;\r\n            case 75:\r\n                //AND byte with accumulator, then shift right one bit in accumu-lator.\r\n                //Status flags: N,Z,C\r\n                this._accumulator = this.DecodeOperand() & this._accumulator;\r\n                this.SetFlag(this.SRMasks_CarryMask, (this._accumulator & 1) === 1);\r\n                this._accumulator = this._accumulator >> 1;\r\n                this.SetZNFlags(this._accumulator);\r\n                break;\r\n            case 107:\r\n                //ARR();\r\n                //AND byte with accumulator, then rotate one bit right in accu - mulator and\r\n                //  check bit 5 and 6:\r\n                //If both bits are 1: set C, clear V. 0x30\r\n                //If both bits are 0: clear C and V.\r\n                //If only bit 5 is 1: set V, clear C.\r\n                //If only bit 6 is 1: set C and V.\r\n                //Status flags: N,V,Z,C\r\n                this._accumulator = this.DecodeOperand() & this._accumulator;\r\n                if ((this._statusRegister & 1) === 1) {\r\n                    this._accumulator = (this._accumulator >> 1) | 128;\r\n                }\r\n                else {\r\n                    this._accumulator = (this._accumulator >> 1);\r\n                }\r\n                // original bit 0 shifted to carry\r\n                //            target.SetFlag(CPUStatusBits.Carry, (); \r\n                this.SetFlag(this.SRMasks_CarryMask, (this._accumulator & 1) === 1);\r\n                switch (this._accumulator & 48) {\r\n                    case 48:\r\n                        this.SetFlag(this.SRMasks_CarryMask, true);\r\n                        this.SetFlag(this.SRMasks_InterruptDisableMask, false);\r\n                        break;\r\n                    case 0:\r\n                        this.SetFlag(this.SRMasks_CarryMask, false);\r\n                        this.SetFlag(this.SRMasks_InterruptDisableMask, false);\r\n                        break;\r\n                    case 16:\r\n                        this.SetFlag(this.SRMasks_CarryMask, false);\r\n                        this.SetFlag(this.SRMasks_InterruptDisableMask, true);\r\n                        break;\r\n                    case 32:\r\n                        this.SetFlag(this.SRMasks_CarryMask, true);\r\n                        this.SetFlag(this.SRMasks_InterruptDisableMask, true);\r\n                        break;\r\n                }\r\n                break;\r\n            case 171:\r\n                //ATX();\r\n                //AND byte with accumulator, then transfer accumulator to X register.\r\n                //Status flags: N,Z\r\n                this._indexRegisterX = (this._accumulator = this.DecodeOperand() & this._accumulator);\r\n                this.SetZNFlags(this._indexRegisterX);\r\n                break;\r\n        }\r\n    };\r\n    ChiChiCPPU.prototype.SetZNFlags = function (data) {\r\n        //zeroResult = (data & 0xFF) == 0;\r\n        //negativeResult = (data & 0x80) == 0x80;\r\n        if ((data & 255) === 0) {\r\n            this._statusRegister |= 2;\r\n        }\r\n        else {\r\n            this._statusRegister &= -3;\r\n        } // ((int)CPUStatusMasks.ZeroResultMask);\r\n        if ((data & 128) === 128) {\r\n            this._statusRegister |= 128;\r\n        }\r\n        else {\r\n            this._statusRegister &= -129;\r\n        } // ((int)CPUStatusMasks.NegativeResultMask);\r\n    };\r\n    ChiChiCPPU.prototype.Compare = function (data) {\r\n        this.SetFlag(this.SRMasks_CarryMask, data > 255);\r\n        this.SetZNFlags(data & 255);\r\n    };\r\n    ChiChiCPPU.prototype.Branch = function () {\r\n        this._currentInstruction_ExtraTiming = 1;\r\n        var addr = this._currentInstruction_Parameters0 & 255;\r\n        if ((addr & 128) === 128) {\r\n            addr = addr - 256;\r\n            this._programCounter += addr;\r\n            this._programCounter &= 0xFFFF;\r\n        }\r\n        else {\r\n            this._programCounter += addr;\r\n            this._programCounter &= 0xFFFF;\r\n        }\r\n        if ((this._programCounter & 255) < addr) {\r\n            this._currentInstruction_ExtraTiming = 2;\r\n        }\r\n    };\r\n    ChiChiCPPU.prototype.NMIHandler = function () {\r\n        this._handleNMI = true;\r\n    };\r\n    ChiChiCPPU.prototype.IRQUpdater = function () {\r\n        this._handleIRQ = this.SoundBopper.IRQAsserted || this.Cart.irqRaised;\r\n    };\r\n    ChiChiCPPU.prototype.LoadBytes = function (offset, bytes) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    ChiChiCPPU.prototype.LoadBytes$1 = function (offset, bytes, length) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    ChiChiCPPU.prototype.PushStack = function (data) {\r\n        this.Rams[this._stackPointer + 256] = data;\r\n        this._stackPointer--;\r\n        if (this._stackPointer < 0) {\r\n            this._stackPointer = 255;\r\n        }\r\n    };\r\n    ChiChiCPPU.prototype.PopStack = function () {\r\n        this._stackPointer++;\r\n        if (this._stackPointer > 255) {\r\n            this._stackPointer = 0;\r\n        }\r\n        return this.Rams[this._stackPointer + 256];\r\n    };\r\n    ChiChiCPPU.prototype.GetByte = function (address) {\r\n        var result = 0;\r\n        // check high byte, find appropriate handler\r\n        switch (address & 0xF000) {\r\n            case 0:\r\n            case 0x1000:\r\n                if (address < 2048) {\r\n                    result = this.Rams[address];\r\n                }\r\n                else {\r\n                    result = address >> 8;\r\n                }\r\n                break;\r\n            case 0x2000:\r\n            case 0x3000:\r\n                result = this.ppu.GetByte(this.clock, address);\r\n                break;\r\n            case 0x4000:\r\n                switch (address) {\r\n                    case 16406:\r\n                        result = this._padOne.GetByte(this.clock, address);\r\n                        break;\r\n                    case 16407:\r\n                        result = this._padTwo.GetByte(this.clock, address);\r\n                        break;\r\n                    case 16405:\r\n                        result = this.SoundBopper.GetByte(this.clock, address);\r\n                        break;\r\n                    default:\r\n                        if (this.Cart.mapsBelow6000)\r\n                            result = this.Cart.GetByte(this.clock, address);\r\n                        else\r\n                            result = address >> 8;\r\n                        break;\r\n                }\r\n                break;\r\n            case 20480:\r\n                // ??\r\n                result = address >> 8;\r\n                break;\r\n            case 24576:\r\n            case 28672:\r\n            case 32768:\r\n            case 36864:\r\n            case 40960:\r\n            case 45056:\r\n            case 49152:\r\n            case 53248:\r\n            case 57344:\r\n            case 61440:\r\n                // cart \r\n                result = this.Cart.GetByte(this.clock, address);\r\n                break;\r\n            default:\r\n                throw new Error(\"Bullshit!\");\r\n        }\r\n        if (this.cheating) {\r\n            var patch = this.genieCodes.find(function (v) { return v.address == address; });\r\n            if (patch && patch.active && patch.address == address) {\r\n                if (patch.compare > -1) {\r\n                    return (patch.compare == result ? patch.data : result) & 0xFF;\r\n                }\r\n                else {\r\n                    return patch.data;\r\n                }\r\n            }\r\n        }\r\n        return result & 255;\r\n    };\r\n    ChiChiCPPU.prototype.PeekByte = function (address) {\r\n        var result = 0;\r\n        // check high byte, find appropriate handler\r\n        switch (address & 61440) {\r\n            case 0:\r\n            case 4096:\r\n                if (address < 2048) {\r\n                    result = this.Rams[address];\r\n                }\r\n                else {\r\n                    result = address >> 8;\r\n                }\r\n                break;\r\n            case 8192:\r\n            case 12288:\r\n                result = 0;\r\n                //result = this.PPU_GetByte(this.clock, address);\r\n                break;\r\n            case 16384:\r\n                switch (address) {\r\n                    case 16406:\r\n                        result = this._padOne.GetByte(this.clock, address);\r\n                        break;\r\n                    case 16407:\r\n                        result = this._padTwo.GetByte(this.clock, address);\r\n                        break;\r\n                    case 16405:\r\n                        result = this.SoundBopper.GetByte(this.clock, address);\r\n                        break;\r\n                    default:\r\n                        // return open bus?\r\n                        result = address >> 8;\r\n                        break;\r\n                }\r\n                break;\r\n            case 20480:\r\n                // ??\r\n                result = address >> 8;\r\n                break;\r\n            case 24576:\r\n            case 28672:\r\n            case 32768:\r\n            case 36864:\r\n            case 40960:\r\n            case 45056:\r\n            case 49152:\r\n            case 53248:\r\n            case 57344:\r\n            case 61440:\r\n                // cart \r\n                result = 0;\r\n                //result = this.Cart.GetByte(this.clock, address);\r\n                break;\r\n            default:\r\n                throw new Error(\"Bullshit!\");\r\n        }\r\n        //if (_cheating && memoryPatches.ContainsKey(address))\r\n        //{\r\n        //    return memoryPatches[address].Activated ? memoryPatches[address].GetData(result) & 0xFF : result & 0xFF;\r\n        //}\r\n        return result & 255;\r\n    };\r\n    ChiChiCPPU.prototype.PeekBytes = function (start, finish) {\r\n        var array = new Array();\r\n        for (var i = 0; i < finish; ++i) {\r\n            if (i < this.Rams.length)\r\n                array.push(this.Rams[i]);\r\n        }\r\n        return array;\r\n    };\r\n    ChiChiCPPU.prototype.SetByte = function (address, data) {\r\n        // check high byte, find appropriate handler\r\n        if (address < 2048) {\r\n            this.Rams[address & 2047] = data;\r\n            return;\r\n        }\r\n        switch (address & 61440) {\r\n            case 0:\r\n            case 4096:\r\n                // nes sram\r\n                this.Rams[address & 2047] = data;\r\n                break;\r\n            case 20480:\r\n                this.Cart.SetByte(this.clock, address, data);\r\n                break;\r\n            case 24576:\r\n            case 28672:\r\n            case 32768:\r\n            case 36864:\r\n            case 40960:\r\n            case 45056:\r\n            case 49152:\r\n            case 53248:\r\n            case 57344:\r\n            case 61440:\r\n                // cart rom banks\r\n                this.Cart.SetByte(this.clock, address, data);\r\n                break;\r\n            case 8192:\r\n            case 12288:\r\n                this.ppu.SetByte(this.clock, address, data);\r\n                break;\r\n            case 16384:\r\n                switch (address) {\r\n                    case 16384:\r\n                    case 16385:\r\n                    case 16386:\r\n                    case 16387:\r\n                    case 16388:\r\n                    case 16389:\r\n                    case 16390:\r\n                    case 16391:\r\n                    case 16392:\r\n                    case 16393:\r\n                    case 16394:\r\n                    case 16395:\r\n                    case 16396:\r\n                    case 16397:\r\n                    case 16398:\r\n                    case 16399:\r\n                    case 16405:\r\n                    case 16407:\r\n                        this.SoundBopper.SetByte(this.clock, address, data);\r\n                        break;\r\n                    case 16404:\r\n                        this.ppu.CopySprites(data * 256);\r\n                        this._currentInstruction_ExtraTiming = this._currentInstruction_ExtraTiming + 512;\r\n                        break;\r\n                    case 16406:\r\n                        this._padOne.SetByte(this.clock, address, data & 1);\r\n                        this._padTwo.SetByte(this.clock, address, data & 1);\r\n                        break;\r\n                    default:\r\n                        if (this.Cart.mapsBelow6000)\r\n                            this.Cart.SetByte(this.clock, address, data);\r\n                }\r\n                break;\r\n        }\r\n    };\r\n    ChiChiCPPU.prototype.FindNextEvent = function () {\r\n        // it'll either be the ppu's NMI, or an irq from either the apu or the cart\r\n        this.nextEvent = 0;\r\n        ; //this.clock + this.ppu.NextEventAt | this.Cart.nextEventAt;\r\n    };\r\n    ChiChiCPPU.prototype.HandleNextEvent = function () {\r\n        // this.ppu.HandleEvent(this.clock);\r\n        // this.FindNextEvent();\r\n    };\r\n    ChiChiCPPU.prototype.ResetInstructionHistory = function () {\r\n        //_instructionHistory = new Instruction[0x100];\r\n        this.instructionHistoryPointer = 0xFF;\r\n    };\r\n    ChiChiCPPU.prototype.WriteInstructionHistoryAndUsage = function () {\r\n        var inst = new ChiChiTypes_1.ChiChiInstruction();\r\n        inst.time = this.systemClock;\r\n        inst.A = this._accumulator;\r\n        inst.X = this._indexRegisterX;\r\n        inst.Y = this._indexRegisterY;\r\n        inst.SR = this._statusRegister;\r\n        inst.SP = this._stackPointer;\r\n        inst.frame = this.clock;\r\n        inst.OpCode = this._currentInstruction_OpCode;\r\n        inst.Parameters0 = this._currentInstruction_Parameters0;\r\n        inst.Parameters1 = this._currentInstruction_Parameters1;\r\n        inst.Address = this._currentInstruction_Address;\r\n        inst.AddressingMode = this._currentInstruction_AddressingMode;\r\n        inst.ExtraTiming = this._currentInstruction_ExtraTiming;\r\n        this._instructionHistory[(this.instructionHistoryPointer--) & 255] = inst;\r\n        this.instructionUsage[this._currentInstruction_OpCode]++;\r\n        if ((this.instructionHistoryPointer & 255) === 255) {\r\n            this.FireDebugEvent(\"instructionHistoryFull\");\r\n        }\r\n    };\r\n    ChiChiCPPU.prototype.FireDebugEvent = function (s) {\r\n        for (var i = 0; i < this.debugEvents.length; ++i) {\r\n            this.debugEvents[i].call(this, s);\r\n        }\r\n        //throw new Error('Method not implemented.');\r\n    };\r\n    ChiChiCPPU.prototype.PeekInstruction = function (address) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    ChiChiCPPU.prototype.GetStatus = function () {\r\n        return {\r\n            PC: this._programCounter,\r\n            A: this._accumulator,\r\n            X: this._indexRegisterX,\r\n            Y: this._indexRegisterY,\r\n            SP: this._stackPointer,\r\n            SR: this._statusRegister\r\n        };\r\n    };\r\n    // statics\r\n    ChiChiCPPU.cpuTiming = [7, 6, 0, 0, 3, 2, 5, 0, 3, 2, 2, 0, 6, 4, 6, 0, 2, 5, 0, 0, 3, 3, 6, 0, 2, 4, 2, 0, 6, 4, 7, 0, 6, 6, 0, 0, 3, 2, 5, 0, 3, 2, 2, 0, 4, 4, 6, 0, 2, 5, 0, 0, 3, 3, 6, 0, 2, 4, 2, 0, 6, 4, 7, 0, 6, 6, 0, 0, 3, 2, 5, 0, 3, 2, 2, 0, 3, 4, 6, 0, 2, 5, 0, 0, 0, 3, 6, 0, 2, 4, 2, 0, 6, 4, 6, 0, 6, 6, 0, 0, 3, 3, 5, 0, 3, 2, 2, 0, 5, 4, 6, 0, 2, 5, 0, 0, 0, 4, 6, 0, 2, 4, 2, 0, 6, 4, 7, 0, 3, 6, 3, 0, 3, 3, 3, 0, 2, 3, 2, 0, 4, 4, 4, 0, 2, 6, 0, 0, 4, 4, 4, 0, 2, 5, 2, 0, 0, 5, 0, 0, 2, 6, 2, 0, 3, 3, 3, 0, 2, 2, 2, 0, 4, 4, 4, 0, 2, 5, 0, 0, 4, 4, 4, 0, 2, 4, 2, 0, 4, 4, 4, 0, 2, 6, 3, 0, 3, 2, 5, 0, 2, 2, 2, 0, 4, 4, 6, 0, 2, 5, 0, 0, 3, 4, 6, 0, 2, 4, 2, 0, 6, 4, 7, 0, 2, 6, 3, 0, 3, 3, 5, 0, 2, 2, 2, 0, 4, 4, 6, 0, 2, 5, 0, 0, 3, 4, 6, 0, 2, 4, 2, 0, 6, 4, 7, 0];\r\n    ChiChiCPPU.addressModes = [1, 12, 1, 0, 0, 4, 4, 0, 1, 3, 2, 3, 8, 8, 8, 1, 7, 13, 14, 1, 4, 5, 5, 1, 1, 10, 1, 1, 8, 9, 9, 1, 8, 12, 1, 1, 4, 4, 4, 1, 1, 3, 2, 3, 8, 8, 8, 1, 7, 13, 14, 1, 5, 5, 5, 1, 1, 10, 1, 1, 9, 9, 9, 1, 1, 12, 1, 1, 1, 4, 4, 1, 1, 3, 2, 3, 8, 8, 8, 1, 7, 13, 14, 1, 1, 5, 5, 1, 1, 10, 1, 1, 1, 9, 9, 1, 1, 12, 1, 1, 4, 4, 4, 1, 1, 3, 2, 3, 11, 8, 8, 1, 7, 13, 14, 1, 5, 5, 5, 1, 1, 10, 1, 1, 15, 9, 9, 1, 7, 12, 3, 1, 4, 4, 4, 1, 1, 3, 1, 1, 8, 8, 8, 1, 7, 13, 14, 1, 5, 5, 6, 1, 1, 10, 1, 1, 8, 9, 9, 1, 3, 12, 3, 1, 4, 4, 4, 1, 1, 3, 1, 3, 8, 8, 8, 1, 7, 13, 14, 1, 5, 5, 6, 1, 1, 10, 1, 1, 9, 9, 10, 1, 3, 12, 3, 1, 4, 4, 4, 1, 1, 3, 1, 3, 8, 8, 8, 1, 7, 13, 14, 1, 1, 5, 5, 1, 1, 10, 1, 1, 1, 9, 9, 1, 3, 12, 3, 1, 4, 4, 4, 1, 1, 3, 1, 3, 8, 8, 8, 1, 7, 13, 14, 1, 1, 5, 5, 1, 1, 10, 1, 1, 1, 9, 9, 1];\r\n    return ChiChiCPPU;\r\n}());\r\nexports.ChiChiCPPU = ChiChiCPPU;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Buffer) {\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BaseCart_1 = __webpack_require__(1);\r\nvar Discrete = __webpack_require__(16);\r\nvar Multi = __webpack_require__(17);\r\nvar MMC1 = __webpack_require__(18);\r\nvar MMC2 = __webpack_require__(19);\r\nvar MMC3 = __webpack_require__(20);\r\nvar M068 = __webpack_require__(21);\r\nvar Nsf = __webpack_require__(22);\r\nvar Smb2j = __webpack_require__(23);\r\nvar crc = __webpack_require__(24);\r\nvar VS = __webpack_require__(36);\r\nvar VRC = __webpack_require__(37);\r\nvar MapperFactory = /** @class */ (function () {\r\n    function MapperFactory() {\r\n        this[0] = Discrete.NesCart;\r\n        this[1] = MMC1.MMC1Cart;\r\n        this[2] = Discrete.UxROMCart;\r\n        this[3] = Discrete.CNROMCart;\r\n        this[4] = MMC3.MMC3Cart;\r\n        this[7] = Discrete.AxROMCart;\r\n        this[9] = MMC2.MMC2Cart;\r\n        this[10] = MMC2.MMC4Cart;\r\n        this[11] = Discrete.ColorDreams;\r\n        this[13] = Discrete.Mapper013Cart;\r\n        this[30] = Discrete.Mapper030Cart;\r\n        this[31] = Nsf.Mapper031Cart;\r\n        this[34] = Discrete.BNROMCart;\r\n        this[38] = Discrete.BitCorp038Cart;\r\n        this[40] = Smb2j.Smb2jCart;\r\n        this[51] = Multi.Mapper051Cart;\r\n        this[58] = Multi.Mapper058Cart;\r\n        this[66] = Discrete.MHROMCart;\r\n        this[68] = M068.Mapper068Cart;\r\n        this[70] = Discrete.Mapper070Cart;\r\n        this[71] = Discrete.Mapper071Cart;\r\n        this[75] = VRC.KonamiVRC1Cart;\r\n        this[77] = Discrete.Mapper077Cart;\r\n        this[81] = Discrete.Mapper081Cart;\r\n        this[87] = Discrete.Mapper087Cart;\r\n        this[93] = Discrete.Mapper093Cart;\r\n        this[97] = Discrete.Irem097Cart;\r\n        this[99] = VS.VSCart;\r\n        this[140] = Discrete.JF1xCart;\r\n        this[145] = Discrete.Mapper145Cart;\r\n        this[152] = Discrete.Mapper152Cart;\r\n        this[151] = VRC.KonamiVRC1Cart;\r\n        this[180] = Discrete.NesCart;\r\n        this[190] = Discrete.Mapper190Cart;\r\n        this[202] = Multi.Mapper202Cart;\r\n        this[212] = Multi.Mapper212Cart;\r\n    }\r\n    MapperFactory.prototype.createCart = function (mapper) {\r\n        if (this[mapper]) {\r\n            return new this[mapper]();\r\n        }\r\n        else {\r\n            return new BaseCart_1.UnsupportedCart();\r\n        }\r\n    };\r\n    return MapperFactory;\r\n}());\r\nvar iNESFileHandler = /** @class */ (function () {\r\n    function iNESFileHandler() {\r\n    }\r\n    iNESFileHandler.LoadROM = function (cpu, thefile) {\r\n        var _cart = null;\r\n        var mf = new MapperFactory();\r\n        var iNesHeader = thefile.slice(0, 16);\r\n        var bytesRead = 16;\r\n        /*\r\n        .NES file format\r\n        ---------------------------------------------------------------------------\r\n        0-3      String \"NES^Z\" used to recognize .NES files.\r\n        4        Number of 16kB ROM banks.\r\n        5        Number of 8kB VROM banks.\r\n        6        bit 0     1 for vertical mirroring, 0 for horizontal mirroring\r\n        bit 1     1 for battery-backed RAM at $6000-$7FFF\r\n        bit 2     1 for a 512-byte trainer at $7000-$71FF\r\n        bit 3     1 for a four-screen VRAM layout\r\n        bit 4-7   Four lower bits of ROM Mapper Type.\r\n        7        bit 0-3   Reserved, must be zeroes!\r\n        bit 4-7   Four higher bits of ROM Mapper Type.\r\n        8-15     Reserved, must be zeroes!\r\n        16-...   ROM banks, in ascending order. If a trainer is present, its\r\n        512 bytes precede the ROM bank contents.\r\n        ...-EOF  VROM banks, in ascending order.\r\n        ---------------------------------------------------------------------------\r\n        */\r\n        var mapperId = (iNesHeader[6] & 240);\r\n        mapperId = mapperId >> 4;\r\n        mapperId = mapperId | (iNesHeader[7] & 0xF0);\r\n        // byte 7  lower bits PC10/VSUNI, xxPV \r\n        var isPC10 = (iNesHeader[7] & 0x2) == 0x2;\r\n        var isVS = (iNesHeader[7] & 0x1) == 0x01;\r\n        // NES2.0 stuff \r\n        mapperId |= (iNesHeader[8] & 0xF) << 8;\r\n        var submapperId = iNesHeader[8] >> 4;\r\n        // Byte 9 (Upper bits of ROM size)\r\n        var upperPrgRomSize = iNesHeader[9] & 0xF;\r\n        console.log('upperprgrom ' + upperPrgRomSize);\r\n        var upperChrRomSize = (iNesHeader[9] & 0xF0) >> 4;\r\n        console.log('upperChrRom ' + upperChrRomSize);\r\n        // byte 10 (RAM Size) \r\n        var prgRamBanks = iNesHeader[10] & 0xF;\r\n        var prgRamBanks_batteryBacked = (iNesHeader[10] >> 4) & 0xF;\r\n        // byte 11 (video RAM size) \r\n        var chrRamBanks = iNesHeader[11] & 0xF;\r\n        var chrRamBanks_batteryBacked = (iNesHeader[11] >> 4) & 0xF;\r\n        // byte 12 (video RAM size) \r\n        var prgRomCount = iNesHeader[4]; // | (upperPrgRomSize << 8);\r\n        var chrRomCount = iNesHeader[5]; // | (upperChrRomSize << 8);\r\n        var prgRomLength = prgRomCount * 16384;\r\n        var chrRomLength = chrRomCount * 8192;\r\n        var theRom = new Uint8Array(prgRomLength);\r\n        // System.Array.init(Bridge.Int.mul(prgRomCount, 16384), 0, System.Byte);\r\n        theRom.fill(0);\r\n        var chrRom = new Uint8Array(chrRomLength);\r\n        chrRom.fill(0);\r\n        // var chrRom = new Uint8Array(thefile.slice(16 + prgRomLength, 16 + prgRomLength + chrRomLength)); //System.Array.init(Bridge.Int.mul(chrRomCount, 16384), 0, System.Byte);\r\n        // chrRom.fill(0);\r\n        var chrOffset = 0;\r\n        // create cart\r\n        // bytesRead = zipStream.Read(theRom, 0, theRom.Length);\r\n        BaseCart_1.BaseCart.arrayCopy(thefile, 16, theRom, 0, theRom.length);\r\n        chrOffset = (16 + theRom.length) | 0;\r\n        var len = chrRom.length;\r\n        if (((chrOffset + chrRom.length) | 0) > thefile.length) {\r\n            len = (thefile.length - chrOffset) | 0;\r\n        }\r\n        BaseCart_1.BaseCart.arrayCopy(thefile, chrOffset, chrRom, 0, len);\r\n        _cart = mf.createCart(mapperId);\r\n        _cart.submapperId = submapperId;\r\n        if (_cart != null) {\r\n            _cart.Whizzler = cpu.ppu;\r\n            _cart.CPU = cpu;\r\n            cpu.Cart = _cart;\r\n            cpu.ppu.ChrRomHandler = _cart;\r\n            _cart.ROMHashFunction = crc.crc32(new Buffer(thefile.slice(16, thefile.length))).toString(16).toUpperCase(); //Hashers.HashFunction;\r\n            _cart.LoadiNESCart(iNesHeader, prgRomCount, chrRomCount, theRom, chrRom, chrOffset);\r\n        }\r\n        return _cart;\r\n    };\r\n    return iNESFileHandler;\r\n}());\r\nexports.iNESFileHandler = iNESFileHandler;\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0).Buffer))\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ChiChiTypes_1 = __webpack_require__(4);\r\nvar DMCChannel_1 = __webpack_require__(38);\r\nvar CommonAudio_1 = __webpack_require__(5);\r\nvar NoiseChannel = /** @class */ (function () {\r\n    function NoiseChannel(bleeper, chan) {\r\n        this._bleeper = null;\r\n        this._chan = 0;\r\n        this.NoisePeriods = [4, 8, 16, 32, 64, 96, 128, 160, 202, 254, 380, 508, 762, 1016, 2034, 4068];\r\n        this.LengthCounts = [10, 254, 20, 2, 40, 4, 80, 6, 160, 8, 60, 10, 14, 12, 26, 14, 12, 16, 24, 18, 48, 20, 96, 22, 192, 24, 72, 26, 16, 28, 32, 30];\r\n        this._length = 0;\r\n        this._period = 0;\r\n        this._volume = 0;\r\n        this._time = 0;\r\n        this._envConstantVolume = false;\r\n        this._envVolume = 0;\r\n        this._looping = false;\r\n        this._enabled = false;\r\n        this.amplitude = 0;\r\n        this._phase = 0;\r\n        this.gain = 0;\r\n        this._envTimer = 0;\r\n        this._envStart = false;\r\n        this._bleeper = bleeper;\r\n        this._chan = chan;\r\n        this._enabled = true;\r\n        this._phase = 1;\r\n        this._envTimer = 15;\r\n    }\r\n    Object.defineProperty(NoiseChannel.prototype, \"Period\", {\r\n        get: function () {\r\n            return this._period;\r\n        },\r\n        set: function (value) {\r\n            this._period = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NoiseChannel.prototype, \"Volume\", {\r\n        get: function () {\r\n            return this._volume;\r\n        },\r\n        set: function (value) {\r\n            this._volume = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NoiseChannel.prototype, \"Time\", {\r\n        get: function () {\r\n            return this._time;\r\n        },\r\n        set: function (value) {\r\n            this._time = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NoiseChannel.prototype, \"Looping\", {\r\n        get: function () {\r\n            return this._looping;\r\n        },\r\n        set: function (value) {\r\n            this._looping = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NoiseChannel.prototype, \"Enabled\", {\r\n        get: function () {\r\n            return this._enabled;\r\n        },\r\n        set: function (value) {\r\n            this._enabled = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NoiseChannel.prototype, \"Gain\", {\r\n        get: function () {\r\n            return this.gain;\r\n        },\r\n        set: function (value) {\r\n            this.gain = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    NoiseChannel.prototype.WriteRegister = function (register, data, time) {\r\n        // Run(time);\r\n        switch (register) {\r\n            case 0:\r\n                this._envConstantVolume = (data & 16) === 16;\r\n                this._volume = data & 15;\r\n                this._looping = (data & 128) === 128;\r\n                break;\r\n            case 1:\r\n                break;\r\n            case 2:\r\n                this._period = this.NoisePeriods[data & 15];\r\n                // _period |= data;\r\n                break;\r\n            case 3:\r\n                // setup length\r\n                if (this._enabled) {\r\n                    this._length = this.LengthCounts[(data >> 3) & 31];\r\n                }\r\n                this._envStart = true;\r\n                break;\r\n            case 4:\r\n                this._enabled = (data !== 0);\r\n                if (!this._enabled) {\r\n                    this._length = 0;\r\n                }\r\n                break;\r\n        }\r\n    };\r\n    NoiseChannel.prototype.Run = function (end_time) {\r\n        var volume = this._envConstantVolume ? this._volume : this._envVolume;\r\n        if (this._length === 0) {\r\n            volume = 0;\r\n        }\r\n        if (this._period === 0) {\r\n            this._time = end_time;\r\n            this.UpdateAmplitude(0);\r\n            return;\r\n        }\r\n        if (this._phase === 0) {\r\n            this._phase = 1;\r\n        }\r\n        for (; this._time < end_time; this._time += this._period) {\r\n            var new15;\r\n            if (this._looping) {\r\n                new15 = ((this._phase & 1) ^ ((this._phase >> 6) & 1));\r\n            }\r\n            else {\r\n                new15 = ((this._phase & 1) ^ ((this._phase >> 1) & 1));\r\n            }\r\n            this.UpdateAmplitude(this._phase & 1 * volume);\r\n            this._phase = ((this._phase >> 1) | (new15 << 14)) & 65535;\r\n        }\r\n    };\r\n    NoiseChannel.prototype.UpdateAmplitude = function (amp) {\r\n        var delta = amp * this.gain - this.amplitude;\r\n        this.amplitude += delta;\r\n        this._bleeper.blip_add_delta(this._time, delta);\r\n    };\r\n    NoiseChannel.prototype.EndFrame = function (time) {\r\n        this.Run(time);\r\n        this._time = 0;\r\n    };\r\n    NoiseChannel.prototype.FrameClock = function (time, step) {\r\n        this.Run(time);\r\n        if (!this._envStart) {\r\n            this._envTimer--;\r\n            if (this._envTimer === 0) {\r\n                this._envTimer = this._volume + 1;\r\n                if (this._envVolume > 0) {\r\n                    this._envVolume--;\r\n                }\r\n                else {\r\n                    this._envVolume = this._looping ? 15 : 0;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._envStart = false;\r\n            this._envTimer = this._volume + 1;\r\n            this._envVolume = 15;\r\n        }\r\n        switch (step) {\r\n            case 1:\r\n            case 2:\r\n                if (!this._looping && this._length > 0) {\r\n                    this._length--;\r\n                }\r\n                break;\r\n        }\r\n    };\r\n    return NoiseChannel;\r\n}());\r\nvar TriangleChannel = /** @class */ (function () {\r\n    function TriangleChannel(bleeper, chan) {\r\n        this._chan = 0;\r\n        this.LengthCounts = new Uint8Array([\r\n            0x0A, 0xFE,\r\n            0x14, 0x02,\r\n            0x28, 0x04,\r\n            0x50, 0x06,\r\n            0xA0, 0x08,\r\n            0x3C, 0x0A,\r\n            0x0E, 0x0C,\r\n            0x1A, 0x0E,\r\n            0x0C, 0x10,\r\n            0x18, 0x12,\r\n            0x30, 0x14,\r\n            0x60, 0x16,\r\n            0xC0, 0x18,\r\n            0x48, 0x1A,\r\n            0x10, 0x1C,\r\n            0x20, 0x1E\r\n        ]);\r\n        this._length = 0;\r\n        this._period = 0;\r\n        this._time = 0;\r\n        this._envelope = 0;\r\n        this._looping = false;\r\n        this._enabled = false;\r\n        this._amplitude = 0;\r\n        this._gain = 0;\r\n        this._linCtr = 0;\r\n        this._phase = 0;\r\n        this._linVal = 0;\r\n        this._linStart = false;\r\n        this._bleeper = bleeper;\r\n        this._chan = chan;\r\n        this._enabled = true;\r\n    }\r\n    Object.defineProperty(TriangleChannel.prototype, \"Period\", {\r\n        get: function () {\r\n            return this._period;\r\n        },\r\n        set: function (value) {\r\n            this._period = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TriangleChannel.prototype, \"Time\", {\r\n        get: function () {\r\n            return this._time;\r\n        },\r\n        set: function (value) {\r\n            this._time = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TriangleChannel.prototype, \"Envelope\", {\r\n        get: function () {\r\n            return this._envelope;\r\n        },\r\n        set: function (value) {\r\n            this._envelope = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TriangleChannel.prototype, \"Looping\", {\r\n        get: function () {\r\n            return this._looping;\r\n        },\r\n        set: function (value) {\r\n            this._looping = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TriangleChannel.prototype, \"Enabled\", {\r\n        get: function () {\r\n            return this._enabled;\r\n        },\r\n        set: function (value) {\r\n            this._enabled = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TriangleChannel.prototype, \"Gain\", {\r\n        get: function () {\r\n            return this._gain;\r\n        },\r\n        set: function (value) {\r\n            this._gain = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TriangleChannel.prototype, \"Amplitude\", {\r\n        get: function () {\r\n            return this._amplitude;\r\n        },\r\n        set: function (value) {\r\n            this._amplitude = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TriangleChannel.prototype, \"Length\", {\r\n        get: function () {\r\n            return this._length;\r\n        },\r\n        set: function (value) {\r\n            this._length = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TriangleChannel.prototype.WriteRegister = function (register, data, time) {\r\n        //Run(time);\r\n        switch (register) {\r\n            case 0:\r\n                this._looping = (data & 0x80) === 0x80;\r\n                this._linVal = data & 0x7F;\r\n                break;\r\n            case 1:\r\n                break;\r\n            case 2:\r\n                this._period &= 0x700;\r\n                this._period |= data;\r\n                break;\r\n            case 3:\r\n                this._period &= 0xFF;\r\n                this._period |= (data & 7) << 8;\r\n                // setup lengthhave\r\n                if (this._enabled) {\r\n                    this._length = this.LengthCounts[(data >> 3) & 0x1f];\r\n                }\r\n                this._linStart = true;\r\n                break;\r\n            case 4:\r\n                this._enabled = (data !== 0);\r\n                if (!this._enabled) {\r\n                    this._length = 0;\r\n                }\r\n                break;\r\n        }\r\n    };\r\n    TriangleChannel.prototype.Run = function (end_time) {\r\n        var period = this._period + 1;\r\n        if (this._linCtr === 0 || this._length === 0 || this._period < 4) {\r\n            // leave it at it's current phase\r\n            this._time = end_time;\r\n            return;\r\n        }\r\n        for (; this._time < end_time; this._time += period, this._phase = (this._phase + 1) % 32) {\r\n            this.UpdateAmplitude(this._phase < 16 ? this._phase : 31 - this._phase);\r\n        }\r\n    };\r\n    TriangleChannel.prototype.UpdateAmplitude = function (new_amp) {\r\n        var delta = new_amp * this._gain - this._amplitude;\r\n        this._amplitude += delta;\r\n        this._bleeper.blip_add_delta(this._time, delta);\r\n    };\r\n    TriangleChannel.prototype.EndFrame = function (time) {\r\n        this.Run(time);\r\n        this._time = 0;\r\n    };\r\n    TriangleChannel.prototype.FrameClock = function (time, step) {\r\n        this.Run(time);\r\n        if (this._linStart) {\r\n            this._linCtr = this._linVal;\r\n        }\r\n        else {\r\n            if (this._linCtr > 0) {\r\n                this._linCtr--;\r\n            }\r\n        }\r\n        if (!this._looping) {\r\n            this._linStart = false;\r\n        }\r\n        switch (step) {\r\n            case 1:\r\n            case 3:\r\n                if (this._length > 0 && !this._looping) {\r\n                    this._length--;\r\n                }\r\n                break;\r\n        }\r\n    };\r\n    return TriangleChannel;\r\n}());\r\nvar SquareChannel = /** @class */ (function () {\r\n    function SquareChannel(bleeper, chan) {\r\n        this._chan = 0;\r\n        this._bleeper = null;\r\n        this.LengthCounts = new Uint8Array([\r\n            0x0A, 0xFE,\r\n            0x14, 0x02,\r\n            0x28, 0x04,\r\n            0x50, 0x06,\r\n            0xA0, 0x08,\r\n            0x3C, 0x0A,\r\n            0x0E, 0x0C,\r\n            0x1A, 0x0E,\r\n            0x0C, 0x10,\r\n            0x18, 0x12,\r\n            0x30, 0x14,\r\n            0x60, 0x16,\r\n            0xC0, 0x18,\r\n            0x48, 0x1A,\r\n            0x10, 0x1C,\r\n            0x20, 0x1E\r\n        ]);\r\n        this._dutyCycle = 0;\r\n        this._length = 0;\r\n        this._timer = 0;\r\n        this._rawTimer = 0;\r\n        this._volume = 0;\r\n        this._time = 0;\r\n        this._envelope = 0;\r\n        this._looping = false;\r\n        this._enabled = false;\r\n        this._amplitude = 0;\r\n        this.doodies = [2, 6, 30, 249];\r\n        this._sweepShift = 0;\r\n        this._sweepCounter = 0;\r\n        this._sweepDivider = 0;\r\n        this._sweepNegateFlag = false;\r\n        this._sweepEnabled = false;\r\n        this._startSweep = false;\r\n        this._sweepInvalid = false;\r\n        this._phase = 0;\r\n        this._gain = 0;\r\n        this._envTimer = 0;\r\n        this._envStart = false;\r\n        this._envConstantVolume = false;\r\n        this._envVolume = 0;\r\n        this._sweepComplement = false;\r\n        this._bleeper = bleeper;\r\n        this._chan = chan;\r\n        this._enabled = true;\r\n        this._sweepDivider = 1;\r\n        this._envTimer = 15;\r\n    }\r\n    Object.defineProperty(SquareChannel.prototype, \"DutyCycle\", {\r\n        // properties\r\n        get: function () {\r\n            return this._dutyCycle;\r\n        },\r\n        set: function (value) {\r\n            this._dutyCycle = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SquareChannel.prototype, \"Period\", {\r\n        get: function () {\r\n            return this._timer;\r\n        },\r\n        set: function (value) {\r\n            this._timer = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SquareChannel.prototype, \"Volume\", {\r\n        get: function () {\r\n            return this._volume;\r\n        },\r\n        set: function (value) {\r\n            this._volume = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SquareChannel.prototype, \"Time\", {\r\n        get: function () {\r\n            return this._time;\r\n        },\r\n        set: function (value) {\r\n            this._time = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SquareChannel.prototype, \"Envelope\", {\r\n        get: function () {\r\n            return this._envelope;\r\n        },\r\n        set: function (value) {\r\n            this._envelope = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SquareChannel.prototype, \"Looping\", {\r\n        get: function () {\r\n            return this._looping;\r\n        },\r\n        set: function (value) {\r\n            this._looping = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SquareChannel.prototype, \"Enabled\", {\r\n        get: function () {\r\n            return this._enabled;\r\n        },\r\n        set: function (value) {\r\n            this._enabled = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SquareChannel.prototype, \"Gain\", {\r\n        get: function () {\r\n            return this._gain;\r\n        },\r\n        set: function (value) {\r\n            this._gain = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SquareChannel.prototype, \"SweepComplement\", {\r\n        get: function () {\r\n            return this._sweepComplement;\r\n        },\r\n        set: function (value) {\r\n            this._sweepComplement = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    // functions\r\n    SquareChannel.prototype.WriteRegister = function (register, data, time) {\r\n        switch (register) {\r\n            case 0:\r\n                this._envConstantVolume = (data & 0x10) === 0x10;\r\n                this._volume = data & 15;\r\n                this._dutyCycle = this.doodies[(data >> 6) & 0x3];\r\n                this._looping = (data & 0x20) === 0x20;\r\n                this._sweepInvalid = false;\r\n                break;\r\n            case 1:\r\n                this._sweepShift = data & 7;\r\n                this._sweepNegateFlag = (data & 8) === 8;\r\n                this._sweepDivider = (data >> 4) & 7;\r\n                this._sweepEnabled = (data & 0x80) === 0x80;\r\n                this._startSweep = true;\r\n                this._sweepInvalid = false;\r\n                break;\r\n            case 2:\r\n                this._timer &= 0x700;\r\n                this._timer |= data;\r\n                this._rawTimer = this._timer;\r\n                break;\r\n            case 3:\r\n                this._timer &= 0xFF;\r\n                this._timer |= (data & 7) << 8;\r\n                this._rawTimer = this._timer;\r\n                this._phase = 0;\r\n                // setup length\r\n                if (this._enabled) {\r\n                    this._length = this.LengthCounts[(data >> 3) & 0x1f];\r\n                }\r\n                this._envStart = true;\r\n                break;\r\n            case 4:\r\n                this._enabled = (data !== 0);\r\n                if (!this._enabled) {\r\n                    this._length = 0;\r\n                }\r\n                break;\r\n        }\r\n    };\r\n    SquareChannel.prototype.Run = function (end_time) {\r\n        var period = this._sweepEnabled ? ((this._timer + 1) & 0x7FF) << 1 : ((this._rawTimer + 1) & 0x7FF) << 1;\r\n        if (period === 0) {\r\n            this._time = end_time;\r\n            this.UpdateAmplitude(0);\r\n            return;\r\n        }\r\n        var volume = this._envConstantVolume ? this._volume : this._envVolume;\r\n        if (this._length === 0 || volume === 0 || this._sweepInvalid) {\r\n            this._phase += ((end_time - this._time) / period) & 7;\r\n            this._time = end_time;\r\n            this.UpdateAmplitude(0);\r\n            return;\r\n        }\r\n        for (; this._time < end_time; this._time += period, this._phase++) {\r\n            this.UpdateAmplitude((this._dutyCycle >> (this._phase & 7) & 1) * volume);\r\n        }\r\n        this._phase &= 7;\r\n    };\r\n    SquareChannel.prototype.UpdateAmplitude = function (new_amp) {\r\n        var delta = new_amp * this._gain - this._amplitude;\r\n        this._amplitude += delta;\r\n        this._bleeper.blip_add_delta(this._time, delta);\r\n    };\r\n    SquareChannel.prototype.EndFrame = function (time) {\r\n        this.Run(time);\r\n        this._time = 0;\r\n    };\r\n    SquareChannel.prototype.FrameClock = function (time, step) {\r\n        this.Run(time);\r\n        if (!this._envStart) {\r\n            this._envTimer--;\r\n            if (this._envTimer === 0) {\r\n                this._envTimer = this._volume + 1;\r\n                if (this._envVolume > 0) {\r\n                    this._envVolume--;\r\n                }\r\n                else {\r\n                    this._envVolume = this._looping ? 15 : 0;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._envStart = false;\r\n            this._envTimer = this._volume + 1;\r\n            this._envVolume = 15;\r\n        }\r\n        switch (step) {\r\n            case 1:\r\n            case 3:\r\n                --this._sweepCounter;\r\n                if (this._sweepCounter === 0) {\r\n                    this._sweepCounter = this._sweepDivider + 1;\r\n                    if (this._sweepEnabled && this._sweepShift > 0) {\r\n                        var sweep = this._timer >> this._sweepShift;\r\n                        if (this._sweepComplement) {\r\n                            this._timer += this._sweepNegateFlag ? ~sweep : sweep;\r\n                        }\r\n                        else {\r\n                            this._timer += this._sweepNegateFlag ? ~sweep + 1 : sweep;\r\n                        }\r\n                        this._sweepInvalid = (this._rawTimer < 8 || (this._timer & 2048) === 2048);\r\n                        //if (_sweepInvalid)\r\n                        //{\r\n                        //    _sweepInvalid = true;\r\n                        //}\r\n                    }\r\n                }\r\n                if (this._startSweep) {\r\n                    this._startSweep = false;\r\n                    this._sweepCounter = this._sweepDivider + 1;\r\n                }\r\n                if (!this._looping && this._length > 0) {\r\n                    this._length--;\r\n                }\r\n                break;\r\n        }\r\n    };\r\n    return SquareChannel;\r\n}());\r\nvar ChiChiBopper = /** @class */ (function () {\r\n    function ChiChiBopper(writer) {\r\n        this.writer = writer;\r\n        this.throwingIRQs = false;\r\n        this.reg15 = 0;\r\n        this.master_vol = 4369;\r\n        this.registers = new CommonAudio_1.QueuedPort();\r\n        this._sampleRate = 44100;\r\n        this.square0Gain = 873;\r\n        this.square1Gain = 873;\r\n        this.triangleGain = 1004;\r\n        this.noiseGain = 567;\r\n        this.muted = false;\r\n        this.lastFrameHit = 0;\r\n        this.RebuildSound();\r\n    }\r\n    Object.defineProperty(ChiChiBopper.prototype, \"audioSettings\", {\r\n        get: function () {\r\n            var settings = new ChiChiTypes_1.AudioSettings();\r\n            settings.sampleRate = this._sampleRate;\r\n            settings.enableNoise = this.EnableNoise;\r\n            settings.enableSquare0 = this.EnableSquare0;\r\n            settings.enableSquare1 = this.EnableSquare1;\r\n            settings.enableTriangle = this.enableTriangle;\r\n            return settings;\r\n        },\r\n        set: function (value) {\r\n            this.EnableNoise = value.enableNoise;\r\n            this.EnableSquare0 = value.enableSquare0;\r\n            this.EnableSquare1 = value.enableSquare1;\r\n            this.enableTriangle = value.enableTriangle;\r\n            if (value.sampleRate != this._sampleRate) {\r\n                this._sampleRate = value.sampleRate;\r\n                this.RebuildSound();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChiChiBopper.prototype, \"SampleRate\", {\r\n        get: function () {\r\n            return this._sampleRate;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChiChiBopper.prototype, \"sampleRate\", {\r\n        set: function (value) {\r\n            this._sampleRate = value;\r\n            this.RebuildSound();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChiChiBopper.prototype, \"EnableSquare0\", {\r\n        get: function () {\r\n            return this.square0.Gain > 0;\r\n        },\r\n        set: function (value) {\r\n            this.square0.Gain = value ? this.square0Gain : 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChiChiBopper.prototype, \"EnableSquare1\", {\r\n        get: function () {\r\n            return this.square1.Gain > 0;\r\n        },\r\n        set: function (value) {\r\n            this.square1.Gain = value ? this.square1Gain : 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChiChiBopper.prototype, \"enableTriangle\", {\r\n        get: function () {\r\n            return this.triangle.Gain > 0;\r\n        },\r\n        set: function (value) {\r\n            this.triangle.Gain = value ? this.triangleGain : 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChiChiBopper.prototype, \"EnableNoise\", {\r\n        get: function () {\r\n            return this.noise.Gain > 0;\r\n        },\r\n        set: function (value) {\r\n            this.noise.Gain = value ? this.noiseGain : 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChiChiBopper.prototype.RebuildSound = function () {\r\n        this.myBlipper = new CommonAudio_1.Blip(this._sampleRate / 5);\r\n        this.myBlipper.blip_set_rates(ChiChiBopper.clock_rate, this._sampleRate);\r\n        //this.writer = new ChiChiNES.BeepsBoops.WavSharer();\r\n        this.writer.audioBytesWritten = 0;\r\n        this.registers.clear();\r\n        this.InterruptRaised = false;\r\n        this.square0Gain = 873;\r\n        this.square1Gain = 873;\r\n        this.triangleGain = 1004;\r\n        this.noiseGain = 567;\r\n        this.square0 = new SquareChannel(this.myBlipper, 0);\r\n        this.square0.Gain = this.square0Gain;\r\n        this.square0.Period = 10;\r\n        this.square0.SweepComplement = true;\r\n        this.square1 = new SquareChannel(this.myBlipper, 0);\r\n        this.square1.Gain = this.square1Gain;\r\n        this.square1.Period = 10;\r\n        this.square1.SweepComplement = false;\r\n        this.triangle = new TriangleChannel(this.myBlipper, 2);\r\n        this.triangle.Gain = this.triangleGain;\r\n        this.triangle.Period = 0;\r\n        this.noise = new NoiseChannel(this.myBlipper, 3);\r\n        this.noise.Gain = this.noiseGain;\r\n        this.noise.Period = 0;\r\n        this.dmc = new DMCChannel_1.DMCChannel(this.myBlipper, 4);\r\n        this.dmc.Gain = 873;\r\n        this.dmc.Period = 10;\r\n    };\r\n    ChiChiBopper.prototype.GetByte = function (Clock, address) {\r\n        if (address === 16384) {\r\n            this.InterruptRaised = false;\r\n        }\r\n        if (address === 16405) {\r\n            return this.ReadStatus();\r\n        }\r\n        else {\r\n            return 66;\r\n        }\r\n    };\r\n    ChiChiBopper.prototype.ReadStatus = function () {\r\n        return ((this.square0.Length > 0) ? 1 : 0) | ((this.square1.Length > 0) ? 2 : 0) | ((this.triangle.Length > 0) ? 4 : 0) | ((this.square0.Length > 0) ? 8 : 0) | (this.InterruptRaised ? 64 : 0);\r\n    };\r\n    ChiChiBopper.prototype.SetByte = function (Clock, address, data) {\r\n        if (address === 16384) {\r\n            this.InterruptRaised = false;\r\n        }\r\n        this.DoSetByte(Clock, address, data);\r\n        this.registers.enqueue(new CommonAudio_1.PortWriteEntry(Clock, address, data));\r\n    };\r\n    ChiChiBopper.prototype.DoSetByte = function (Clock, address, data) {\r\n        switch (address) {\r\n            case 16384:\r\n            case 16385:\r\n            case 16386:\r\n            case 16387:\r\n                this.square0.WriteRegister(address - 16384, data, Clock);\r\n                break;\r\n            case 16388:\r\n            case 16389:\r\n            case 16390:\r\n            case 16391:\r\n                this.square1.WriteRegister(address - 16388, data, Clock);\r\n                break;\r\n            case 16392:\r\n            case 16393:\r\n            case 16394:\r\n            case 16395:\r\n                this.triangle.WriteRegister(address - 16392, data, Clock);\r\n                break;\r\n            case 16396:\r\n            case 16397:\r\n            case 16398:\r\n            case 16399:\r\n                this.noise.WriteRegister(address - 16396, data, Clock);\r\n                break;\r\n            case 16400:\r\n            case 16401:\r\n            case 16402:\r\n            case 16403:\r\n                // dmc.WriteRegister(address - 0x40010, data, Clock);\r\n                break;\r\n            case 16405:\r\n                this.reg15 = data;\r\n                this.square0.WriteRegister(4, data & 1, Clock);\r\n                this.square1.WriteRegister(4, data & 2, Clock);\r\n                this.triangle.WriteRegister(4, data & 4, Clock);\r\n                this.noise.WriteRegister(4, data & 8, Clock);\r\n                break;\r\n            case 16407:\r\n                this.throwingIRQs = ((data & 64) !== 64);\r\n                this.lastFrameHit = 0;\r\n                break;\r\n        }\r\n    };\r\n    ChiChiBopper.prototype.UpdateFrame = function (time) {\r\n        if (this.muted) {\r\n            return;\r\n        }\r\n        this.RunFrameEvents(time, this.lastFrameHit);\r\n        if (this.lastFrameHit === 3) {\r\n            if (this.throwingIRQs) {\r\n                this.InterruptRaised = true;\r\n            }\r\n            this.lastFrameHit = 0;\r\n            //EndFrame(time);\r\n        }\r\n        else {\r\n            this.lastFrameHit++;\r\n        }\r\n    };\r\n    ChiChiBopper.prototype.RunFrameEvents = function (time, step) {\r\n        this.triangle.FrameClock(time, step);\r\n        this.noise.FrameClock(time, step);\r\n        this.square0.FrameClock(time, step);\r\n        this.square1.FrameClock(time, step);\r\n    };\r\n    ChiChiBopper.prototype.EndFrame = function (time) {\r\n        this.square0.EndFrame(time);\r\n        this.square1.EndFrame(time);\r\n        this.triangle.EndFrame(time);\r\n        this.noise.EndFrame(time);\r\n        if (!this.muted) {\r\n            this.myBlipper.blip_end_frame(time);\r\n        }\r\n        //var count = this.myBlipper.ReadBytes(this.writer.SharedBuffer, this.writer.SharedBuffer.length / 2, 0);\r\n        // const startPos = this.writer.sharedAudioBufferPos;\r\n        this.myBlipper.ReadElementsLoop(this.writer);\r\n        //this.writer.audioBytesWritten += count;\r\n        //this.writer.sharedAudioBufferPos += count;\r\n        //this.writer.WavesWritten(count);\r\n    };\r\n    ChiChiBopper.prototype.FlushFrame = function (time) {\r\n        var currentClock = 0;\r\n        var frameClocker = 0;\r\n        var currentEntry;\r\n        while (this.registers.Count > 0) {\r\n            currentEntry = this.registers.dequeue();\r\n            if (frameClocker > 7445) {\r\n                frameClocker -= 7445;\r\n                this.UpdateFrame(7445);\r\n            }\r\n            this.DoSetByte(currentEntry.time, currentEntry.address, currentEntry.data);\r\n            currentClock = currentEntry.time;\r\n            frameClocker = currentEntry.time;\r\n        }\r\n        // hit the latest frame boundary, maybe too much math for too little reward\r\n        var clockDelta = currentClock % 7445;\r\n        if (this.lastFrameHit === 0) {\r\n            this.UpdateFrame(7445);\r\n        }\r\n        while (this.lastFrameHit > 0) {\r\n            this.UpdateFrame(7445 * (this.lastFrameHit + 1));\r\n        }\r\n    };\r\n    ChiChiBopper.prototype.HandleEvent = function (Clock) {\r\n        this.UpdateFrame(Clock);\r\n        this.lastClock = Clock;\r\n        if (Clock > 29780) {\r\n            this.writer;\r\n            {\r\n                this.EndFrame(Clock);\r\n            }\r\n        }\r\n    };\r\n    ChiChiBopper.prototype.ResetClock = function (Clock) {\r\n        this.lastClock = Clock;\r\n    };\r\n    ChiChiBopper.clock_rate = 1789772.727;\r\n    return ChiChiBopper;\r\n}());\r\nexports.ChiChiBopper = ChiChiBopper;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//input classes\r\nvar ChiChiInputHandler = /** @class */ (function () {\r\n    function ChiChiInputHandler() {\r\n        this.ControlPad = new ChiChiControlPad();\r\n    }\r\n    ChiChiInputHandler.prototype.controlPad_NextControlByteSet = function (sender, e) {\r\n        // throw new Error(\"Method not implemented.\");\r\n    };\r\n    ChiChiInputHandler.prototype.GetByte = function (clock, address) {\r\n        return this.ControlPad.getByte(clock);\r\n    };\r\n    ChiChiInputHandler.prototype.SetByte = function (clock, address, data) {\r\n        return this.ControlPad.setByte(clock, data);\r\n    };\r\n    ChiChiInputHandler.prototype.SetNextControlByte = function (data) {\r\n    };\r\n    ChiChiInputHandler.prototype.HandleEvent = function (Clock) {\r\n    };\r\n    ChiChiInputHandler.prototype.ResetClock = function (Clock) {\r\n    };\r\n    return ChiChiInputHandler;\r\n}());\r\nexports.ChiChiInputHandler = ChiChiInputHandler;\r\nvar ChiChiControlPad = /** @class */ (function () {\r\n    function ChiChiControlPad() {\r\n        this.currentByte = 0;\r\n        this.readNumber = 0;\r\n        this.padOneState = 0;\r\n        this.CurrentByte = 0;\r\n    }\r\n    ChiChiControlPad.prototype.refresh = function () {\r\n    };\r\n    ChiChiControlPad.prototype.getByte = function (clock) {\r\n        var result = (this.currentByte >> this.readNumber) & 0x01;\r\n        this.readNumber = (this.readNumber + 1) & 7;\r\n        return (result | 0x40) & 0xFF;\r\n    };\r\n    ChiChiControlPad.prototype.setByte = function (clock, data) {\r\n        if ((data & 1) == 1) {\r\n            this.currentByte = this.padOneState;\r\n            // if im pushing up, i cant be pushing down\r\n            if ((this.currentByte & 16) == 16)\r\n                this.currentByte = this.currentByte & ~32;\r\n            // if im pushign left, i cant be pushing right.. seriously, the nes will glitch\r\n            if ((this.currentByte & 64) == 64)\r\n                this.currentByte = this.currentByte & ~128;\r\n            this.readNumber = 0;\r\n        }\r\n    };\r\n    return ChiChiControlPad;\r\n}());\r\nexports.ChiChiControlPad = ChiChiControlPad;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ChiChiMachine_1 = __webpack_require__(7);\r\nexports.ChiChiCPPU = ChiChiMachine_1.ChiChiCPPU;\r\nexports.ChiChiMachine = ChiChiMachine_1.ChiChiMachine;\r\nvar ChiChiNsfMachine_1 = __webpack_require__(39);\r\nexports.ChiChiNsfCPPU = ChiChiNsfMachine_1.ChiChiNsfCPPU;\r\nexports.ChiChiNsfMachine = ChiChiNsfMachine_1.ChiChiNsfMachine;\r\nvar BaseCart_1 = __webpack_require__(1);\r\nexports.BaseCart = BaseCart_1.BaseCart;\r\nvar ChiChiCarts_1 = __webpack_require__(8);\r\nexports.iNESFileHandler = ChiChiCarts_1.iNESFileHandler;\r\nvar ChiChiControl_1 = __webpack_require__(10);\r\nexports.ChiChiInputHandler = ChiChiControl_1.ChiChiInputHandler;\r\nvar ChiChiAudio_1 = __webpack_require__(9);\r\nexports.ChiChiBopper = ChiChiAudio_1.ChiChiBopper;\r\nvar CommonAudio_1 = __webpack_require__(5);\r\nexports.WavSharer = CommonAudio_1.WavSharer;\r\nvar ChiChiPPU_1 = __webpack_require__(6);\r\nexports.ChiChiPPU = ChiChiPPU_1.ChiChiPPU;\r\nvar ChiChiTypes_1 = __webpack_require__(4);\r\nexports.RunningStatuses = ChiChiTypes_1.RunningStatuses;\r\nexports.ChiChiCPPU_AddressingModes = ChiChiTypes_1.ChiChiCPPU_AddressingModes;\r\nexports.CpuStatus = ChiChiTypes_1.CpuStatus;\r\nexports.PpuStatus = ChiChiTypes_1.PpuStatus;\r\nexports.ChiChiInstruction = ChiChiTypes_1.ChiChiInstruction;\r\nexports.ChiChiSprite = ChiChiTypes_1.ChiChiSprite;\r\nexports.AudioSettings = ChiChiTypes_1.AudioSettings;\r\nvar ChiChiCheats_1 = __webpack_require__(40);\r\nexports.GameGenieCode = ChiChiCheats_1.GameGenieCode;\r\nexports.ChiChiCheats = ChiChiCheats_1.ChiChiCheats;\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\nvar g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BaseCart_1 = __webpack_require__(1);\r\n//  Simple discrete logic mappers\r\nvar NesCart = /** @class */ (function (_super) {\r\n    __extends(NesCart, _super);\r\n    function NesCart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    // prevBSSrc = new Uint8Array(8);\r\n    NesCart.prototype.InitializeCart = function () {\r\n        //for (var i = 0; i < 8; i = (i + 1) | 0) {\r\n        //    this.prevBSSrc[i] = -1;\r\n        //}\r\n        //SRAMEnabled = SRAMCanSave;\r\n        switch (this.mapperId) {\r\n            case 0:\r\n                this.mapperName = 'NROM';\r\n                break;\r\n            case 180:\r\n                this.mapperName = 'UNROM (Crazy Climber?)';\r\n                break;\r\n        }\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks(0, 0, 0, 1);\r\n        }\r\n        this.SetupBankStarts(0, 1, (this.prgRomCount * 2) - 2, (this.prgRomCount * 2) - 1);\r\n    };\r\n    NesCart.prototype.SetByte = function (clock, address, val) {\r\n        if (address >= 24576 && address <= 32767) {\r\n            if (this.SRAMEnabled) {\r\n                this.prgRomBank6[address & 8191] = val & 255;\r\n            }\r\n            return;\r\n        }\r\n        if (this.mapperId === 3 && address >= 0x8000) {\r\n            this.CopyBanks(clock, 0, val, 1);\r\n        }\r\n        if (this.mapperId === 180 && address >= 32768) {\r\n            var newbankC1 = 0;\r\n            newbankC1 = val * 2;\r\n            // keep two LOW banks, swap high banks\r\n            // SetupBanks(newbank8, newbank8 + 1, currentC, currentE);\r\n            this.SetupBankStarts(this.current8, this.currentA, newbankC1, ((newbankC1 + 1) | 0));\r\n        }\r\n    };\r\n    return NesCart;\r\n}(BaseCart_1.BaseCart));\r\nexports.NesCart = NesCart;\r\nvar UxROMCart = /** @class */ (function (_super) {\r\n    __extends(UxROMCart, _super);\r\n    function UxROMCart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    UxROMCart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'UxROM';\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks(0, 0, 0, 1);\r\n        }\r\n        this.SetupBankStarts(0, 1, (this.prgRomCount * 2) - 2, (this.prgRomCount * 2) - 1);\r\n    };\r\n    UxROMCart.prototype.SetByte = function (clock, address, val) {\r\n        if (address >= 0x8000) {\r\n            var newbank81 = 0;\r\n            newbank81 = val << 1;\r\n            this.SetupBankStarts(newbank81, ((newbank81 + 1) | 0), this.currentC, this.currentE);\r\n        }\r\n    };\r\n    return UxROMCart;\r\n}(BaseCart_1.BaseCart));\r\nexports.UxROMCart = UxROMCart;\r\nvar Mapper081Cart = /** @class */ (function (_super) {\r\n    __extends(Mapper081Cart, _super);\r\n    function Mapper081Cart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Mapper081Cart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'Super Gun';\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks(0, 0, 0, 1);\r\n        }\r\n        this.SetupBankStarts(0, 1, (this.prgRomCount * 2) - 2, (this.prgRomCount * 2) - 1);\r\n    };\r\n    Mapper081Cart.prototype.SetByte = function (clock, address, val) {\r\n        if (address >= 0x8000) {\r\n            var newbank81 = 0;\r\n            newbank81 = ((val >> 2) & 3) << 1;\r\n            this.SetupBankStarts(newbank81, ((newbank81 + 1) | 0), this.currentC, this.currentE);\r\n            var chrBank = val & 3;\r\n            this.Whizzler.DrawTo(clock);\r\n            this.CopyBanks(clock, 0, chrBank, 1);\r\n        }\r\n    };\r\n    return Mapper081Cart;\r\n}(BaseCart_1.BaseCart));\r\nexports.Mapper081Cart = Mapper081Cart;\r\nvar Mapper030Cart = /** @class */ (function (_super) {\r\n    __extends(Mapper030Cart, _super);\r\n    function Mapper030Cart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Mapper030Cart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'UNROM-512';\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks(0, 0, 0, 1);\r\n        }\r\n        this.SetupBankStarts(0, 1, (this.prgRomCount * 2) - 2, (this.prgRomCount * 2) - 1);\r\n    };\r\n    Mapper030Cart.prototype.SetByte = function (clock, address, val) {\r\n        if (address >= 0x8000) {\r\n            var newbank81 = 0;\r\n            newbank81 = (val & 0x1F) << 1;\r\n            this.SetupBankStarts(newbank81, ((newbank81 + 1) | 0), this.currentC, this.currentE);\r\n            var chrBank = (val >> 5) & 3;\r\n            this.Whizzler.DrawTo(clock);\r\n            this.Mirror(0, (val >> 7) & 0x1);\r\n            this.CopyBanks(clock, 0, chrBank, 1);\r\n        }\r\n    };\r\n    return Mapper030Cart;\r\n}(BaseCart_1.BaseCart));\r\nexports.Mapper030Cart = Mapper030Cart;\r\nvar Mapper071Cart = /** @class */ (function (_super) {\r\n    __extends(Mapper071Cart, _super);\r\n    function Mapper071Cart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Mapper071Cart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'Camerica UNROM';\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks(0, 0, 0, 1);\r\n        }\r\n        this.SetupBankStarts(0, 1, (this.prgRomCount * 2) - 2, (this.prgRomCount * 2) - 1);\r\n    };\r\n    Mapper071Cart.prototype.SetByte = function (clock, address, val) {\r\n        if (address >= 0x8000) {\r\n            var newbank81 = 0;\r\n            newbank81 = val << 1;\r\n            this.SetupBankStarts(newbank81, ((newbank81 + 1) | 0), this.currentC, this.currentE);\r\n        }\r\n    };\r\n    return Mapper071Cart;\r\n}(BaseCart_1.BaseCart));\r\nexports.Mapper071Cart = Mapper071Cart;\r\nvar Mapper013Cart = /** @class */ (function (_super) {\r\n    __extends(Mapper013Cart, _super);\r\n    function Mapper013Cart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    //SRAMEnabled = SRAMCanSave;\r\n    Mapper013Cart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'NES-CPROM';\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks4k(0, 0, 0, 1);\r\n            this.CopyBanks4k(0, 1, 1, 1);\r\n        }\r\n        // one 32k prg rom\r\n        this.SetupBankStarts(0, 1, 2, 3);\r\n        this.Mirror(0, 2);\r\n    };\r\n    Mapper013Cart.prototype.SetByte = function (clock, address, val) {\r\n        if (address >= 0x8000) {\r\n            this.Whizzler.DrawTo(clock);\r\n            this.CopyBanks4k(clock, 1, (val & 3), 1);\r\n        }\r\n    };\r\n    return Mapper013Cart;\r\n}(BaseCart_1.BaseCart));\r\nexports.Mapper013Cart = Mapper013Cart;\r\nvar CNROMCart = /** @class */ (function (_super) {\r\n    __extends(CNROMCart, _super);\r\n    function CNROMCart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    //for (var i = 0; i < 8; i = (i + 1) | 0) {\r\n    //    this.prevBSSrc[i] = -1;\r\n    //}\r\n    //SRAMEnabled = SRAMCanSave;\r\n    CNROMCart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'CNROM';\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks(0, 0, 0, 1);\r\n        }\r\n        this.SetupBankStarts(0, 1, (this.prgRomCount * 2) - 2, (this.prgRomCount * 2) - 1);\r\n    };\r\n    CNROMCart.prototype.SetByte = function (clock, address, val) {\r\n        if (address >= 0x8000) {\r\n            this.Whizzler.DrawTo(clock);\r\n            this.CopyBanks(clock, 0, val, 1);\r\n        }\r\n    };\r\n    return CNROMCart;\r\n}(BaseCart_1.BaseCart));\r\nexports.CNROMCart = CNROMCart;\r\nvar Mapper185Cart = /** @class */ (function (_super) {\r\n    __extends(Mapper185Cart, _super);\r\n    function Mapper185Cart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    //for (var i = 0; i < 8; i = (i + 1) | 0) {\r\n    //    this.prevBSSrc[i] = -1;\r\n    //}\r\n    //SRAMEnabled = SRAMCanSave;\r\n    Mapper185Cart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'CNROM + CP';\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks(0, 0, 0, 1);\r\n        }\r\n        this.SetupBankStarts(0, 1, (this.prgRomCount * 2) - 2, (this.prgRomCount * 2) - 1);\r\n    };\r\n    Mapper185Cart.prototype.SetByte = function (clock, address, val) {\r\n        if (address >= 0x8000) {\r\n            this.Whizzler.DrawTo(clock);\r\n            this.CopyBanks(clock, 0, val, 1);\r\n        }\r\n    };\r\n    return Mapper185Cart;\r\n}(BaseCart_1.BaseCart));\r\nexports.Mapper185Cart = Mapper185Cart;\r\nvar Mapper190Cart = /** @class */ (function (_super) {\r\n    __extends(Mapper190Cart, _super);\r\n    function Mapper190Cart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    //for (var i = 0; i < 8; i = (i + 1) | 0) {\r\n    //    this.prevBSSrc[i] = -1;\r\n    //}\r\n    //SRAMEnabled = SRAMCanSave;\r\n    Mapper190Cart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'MKGGROM';\r\n        this.CopyBanks(0, 0, 0, 1);\r\n        this.SetupBankStarts(0, 1, 0, 1);\r\n    };\r\n    Mapper190Cart.prototype.SetByte = function (clock, address, val) {\r\n        if (address >= 0x6000 && address <= 0x7FFF) {\r\n            this.prgRomBank6[address & 8191] = val & 255;\r\n        }\r\n        // prgBank = A14, D2, D1, D0\r\n        if (address >= 0x8000 && address <= 0x9FFF) {\r\n            var prgBank = (val & 7) << 1;\r\n            this.SetupBankStarts(prgBank, prgBank + 1, this.currentC, this.currentE);\r\n        }\r\n        if (address >= 0xC000 && address <= 0xDFFF) {\r\n            var prgBank = ((val & 7) + 8) << 1;\r\n            this.SetupBankStarts(prgBank, prgBank + 1, this.currentC, this.currentE);\r\n        }\r\n        if (address >= 0xA000 && address <= 0xBFFF) {\r\n            this.CopyBanks2k(clock, address & 3, val, 1);\r\n        }\r\n    };\r\n    return Mapper190Cart;\r\n}(BaseCart_1.BaseCart));\r\nexports.Mapper190Cart = Mapper190Cart;\r\nvar Mapper087Cart = /** @class */ (function (_super) {\r\n    __extends(Mapper087Cart, _super);\r\n    function Mapper087Cart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    //for (var i = 0; i < 8; i = (i + 1) | 0) {\r\n    //    this.prevBSSrc[i] = -1;\r\n    //}\r\n    //SRAMEnabled = SRAMCanSave;\r\n    Mapper087Cart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'CNROM Clone';\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks(0, 0, 0, 1);\r\n        }\r\n        this.SetupBankStarts(0, 1, (this.prgRomCount * 2) - 2, (this.prgRomCount * 2) - 1);\r\n    };\r\n    Mapper087Cart.prototype.SetByte = function (clock, address, val) {\r\n        if (address >= 0x6000 && address <= 0x7FFF) {\r\n            var chrbank = ((val & 0x1) << 1) | ((val & 0x2) >> 1);\r\n            this.Whizzler.DrawTo(clock);\r\n            this.CopyBanks(clock, 0, chrbank, 1);\r\n        }\r\n    };\r\n    return Mapper087Cart;\r\n}(BaseCart_1.BaseCart));\r\nexports.Mapper087Cart = Mapper087Cart;\r\nvar Mapper145Cart = /** @class */ (function (_super) {\r\n    __extends(Mapper145Cart, _super);\r\n    function Mapper145Cart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    //for (var i = 0; i < 8; i = (i + 1) | 0) {\r\n    //    this.prevBSSrc[i] = -1;\r\n    //}\r\n    //SRAMEnabled = SRAMCanSave;\r\n    Mapper145Cart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'Sachen Sidewinder';\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks(0, 0, 0, 1);\r\n        }\r\n        this.SetupBankStarts(0, 1, 2, 3);\r\n    };\r\n    Mapper145Cart.prototype.SetByte = function (clock, address, val) {\r\n        if ((address & 0xE100) == 0x4100) {\r\n            var chrbank = val;\r\n            this.Whizzler.DrawTo(clock);\r\n            this.CopyBanks(clock, 0, chrbank, 1);\r\n        }\r\n    };\r\n    return Mapper145Cart;\r\n}(BaseCart_1.BaseCart));\r\nexports.Mapper145Cart = Mapper145Cart;\r\nvar ColorDreams = /** @class */ (function (_super) {\r\n    __extends(ColorDreams, _super);\r\n    function ColorDreams() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    // https://wiki.nesdev.com/w/index.php/Color_Dreams\r\n    ColorDreams.prototype.InitializeCart = function () {\r\n        this.mapperName = 'Color Dreams';\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks(0, 0, 0, 1);\r\n        }\r\n        this.SetupBankStarts(0, 1, 2, 3);\r\n    };\r\n    ColorDreams.prototype.SetByte = function (clock, address, val) {\r\n        if (address >= 0x8000 && address <= 0xFFFF) {\r\n            var prgbank = (val & 0x3) << 2;\r\n            var chrbank = ((val >> 4) & 0xf);\r\n            // SetupBanks(newbank8, newbank8 + 1, currentC, currentE);\r\n            this.SetupBankStarts(prgbank, prgbank + 1, prgbank + 2, prgbank + 3);\r\n            // two high bits set mirroring\r\n            this.Whizzler.DrawTo(clock);\r\n            this.CopyBanks(clock, 0, chrbank, 1);\r\n        }\r\n        //         %00 = 1ScA\r\n        //         %01 = Horz\r\n        //         %10 = Vert\r\n        //         %11 = 1ScB\r\n        //this.Mirror(clock,(val >> 6));\r\n    };\r\n    return ColorDreams;\r\n}(BaseCart_1.BaseCart));\r\nexports.ColorDreams = ColorDreams;\r\nvar MHROMCart = /** @class */ (function (_super) {\r\n    __extends(MHROMCart, _super);\r\n    function MHROMCart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MHROMCart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'GxROM';\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks(0, 0, 0, 1);\r\n        }\r\n        this.SetupBankStarts(0, 1, 2, 3);\r\n    };\r\n    MHROMCart.prototype.SetByte = function (clock, address, val) {\r\n        if (address >= 0x8000 && address <= 0xFFFF) {\r\n            var newbank81 = 0;\r\n            var chrbank = (val) & 0x3;\r\n            var prgbank = ((val >> 4) & 0x3) << 2;\r\n            this.SetupBankStarts(prgbank, prgbank + 1, prgbank + 2, prgbank + 3);\r\n            this.Whizzler.DrawTo(clock);\r\n            this.CopyBanks(clock, 0, chrbank, 1);\r\n        }\r\n    };\r\n    return MHROMCart;\r\n}(BaseCart_1.BaseCart));\r\nexports.MHROMCart = MHROMCart;\r\nvar Mapper070Cart = /** @class */ (function (_super) {\r\n    __extends(Mapper070Cart, _super);\r\n    function Mapper070Cart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Mapper070Cart.prototype.InitializeCart = function () {\r\n        this.mapperName = '~Family Trainer';\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks(0, 0, 0, 1);\r\n        }\r\n        this.SetupBankStarts(0, 1, (this.prgRomCount * 2) - 2, (this.prgRomCount * 2) - 1);\r\n    };\r\n    Mapper070Cart.prototype.SetByte = function (clock, address, val) {\r\n        if (address >= 0x8000 && address <= 0xFFFF) {\r\n            var newbank81 = 0;\r\n            var chrbank = (val) & 0xF;\r\n            var prgbank = ((val >> 4) & 0xF) << 1;\r\n            this.SetupBankStarts(prgbank, prgbank + 1, this.currentC, this.currentE);\r\n            this.Whizzler.DrawTo(clock);\r\n            this.CopyBanks(clock, 0, chrbank, 1);\r\n        }\r\n    };\r\n    return Mapper070Cart;\r\n}(BaseCart_1.BaseCart));\r\nexports.Mapper070Cart = Mapper070Cart;\r\nvar Mapper077Cart = /** @class */ (function (_super) {\r\n    __extends(Mapper077Cart, _super);\r\n    function Mapper077Cart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Mapper077Cart.prototype.InitializeCart = function () {\r\n        this.mapperName = '~Mapper 077';\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks(0, 0, 0, 1);\r\n        }\r\n        this.SetupBankStarts(0, 1, (this.prgRomCount * 2) - 2, (this.prgRomCount * 2) - 1);\r\n    };\r\n    Mapper077Cart.prototype.SetByte = function (clock, address, val) {\r\n        if (address >= 0x8000 && address <= 0xFFFF) {\r\n            var prgbank = (val & 0xF) << 2;\r\n            var chrbank = ((val >> 4) & 0xF);\r\n            this.SetupBankStarts(prgbank, prgbank + 1, prgbank + 2, prgbank + 3);\r\n            this.Whizzler.DrawTo(clock);\r\n            this.CopyBanks2k(clock, 0, chrbank, 1);\r\n        }\r\n    };\r\n    return Mapper077Cart;\r\n}(BaseCart_1.BaseCart));\r\nexports.Mapper077Cart = Mapper077Cart;\r\nvar Mapper093Cart = /** @class */ (function (_super) {\r\n    __extends(Mapper093Cart, _super);\r\n    function Mapper093Cart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Mapper093Cart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'Sunsoft-2';\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks(0, 0, 0, 1);\r\n        }\r\n        this.SetupBankStarts(0, 1, (this.prgRomCount * 2) - 2, (this.prgRomCount * 2) - 1);\r\n    };\r\n    Mapper093Cart.prototype.SetByte = function (clock, address, val) {\r\n        if (address >= 0x8000 && address <= 0xFFFF) {\r\n            var prgbank = ((val >> 4) & 0x7) << 1;\r\n            this.SetupBankStarts(prgbank, prgbank + 1, this.currentC, this.currentE);\r\n        }\r\n    };\r\n    return Mapper093Cart;\r\n}(BaseCart_1.BaseCart));\r\nexports.Mapper093Cart = Mapper093Cart;\r\nvar Mapper152Cart = /** @class */ (function (_super) {\r\n    __extends(Mapper152Cart, _super);\r\n    function Mapper152Cart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Mapper152Cart.prototype.InitializeCart = function () {\r\n        this.mapperName = '~FT + mirroring';\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks(0, 0, 0, 1);\r\n        }\r\n        this.SetupBankStarts(0, 1, (this.prgRomCount * 2) - 2, (this.prgRomCount * 2) - 1);\r\n    };\r\n    Mapper152Cart.prototype.SetByte = function (clock, address, val) {\r\n        if (address >= 0x8000 && address <= 0xFFFF) {\r\n            var newbank81 = 0;\r\n            var chrbank = (val) & 0xF;\r\n            var prgbank = ((val >> 4) & 0x31) << 1;\r\n            this.SetupBankStarts(prgbank, prgbank + 1, this.currentC, this.currentE);\r\n            this.Whizzler.DrawTo(clock);\r\n            this.CopyBanks(clock, 0, chrbank, 1);\r\n            this.oneScreenOffset = (val >> 7) == 1 ? 1024 : 0;\r\n            this.Mirror(clock, 0);\r\n        }\r\n    };\r\n    return Mapper152Cart;\r\n}(BaseCart_1.BaseCart));\r\nexports.Mapper152Cart = Mapper152Cart;\r\nvar JF1xCart = /** @class */ (function (_super) {\r\n    __extends(JF1xCart, _super);\r\n    function JF1xCart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    JF1xCart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'Jaleco JF-11, JF-14';\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks(0, 0, 0, 1);\r\n        }\r\n        this.SetupBankStarts(0, 1, 2, 3);\r\n    };\r\n    JF1xCart.prototype.SetByte = function (clock, address, val) {\r\n        if (address >= 0x6000 && address <= 0x7FFF) {\r\n            var newbank81 = 0;\r\n            var chrbank = (val) & 0xF;\r\n            var prgbank = ((val >> 4) & 0x3) << 2;\r\n            this.SetupBankStarts(prgbank, prgbank + 1, prgbank + 2, prgbank + 3);\r\n            this.Whizzler.DrawTo(clock);\r\n            this.CopyBanks(clock, 0, chrbank, 1);\r\n        }\r\n    };\r\n    return JF1xCart;\r\n}(BaseCart_1.BaseCart));\r\nexports.JF1xCart = JF1xCart;\r\nvar Irem097Cart = /** @class */ (function (_super) {\r\n    __extends(Irem097Cart, _super);\r\n    function Irem097Cart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Irem097Cart.prototype.InitializeCart = function () {\r\n        this.mapperName = '~Irem TAM-S1 IC';\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks(0, 0, 0, 1);\r\n        }\r\n        this.SetupBankStarts((this.prgRomCount * 2) - 2, (this.prgRomCount * 2) - 1, 0, 1);\r\n    };\r\n    Irem097Cart.prototype.SetByte = function (clock, address, val) {\r\n        if (address >= 24576 && address <= 32767) {\r\n            if (this.SRAMEnabled) {\r\n                this.prgRomBank6[address & 8191] = val & 255;\r\n            }\r\n            return;\r\n        }\r\n        var newbankC1 = 0;\r\n        newbankC1 = (val & 0xF) * 2;\r\n        // keep two LOW banks, swap high banks\r\n        // SetupBanks(newbank8, newbank8 + 1, currentC, currentE);\r\n        this.SetupBankStarts(this.current8, this.currentA, newbankC1, ((newbankC1 + 1) | 0));\r\n        // two high bits set mirroring\r\n        this.Whizzler.DrawTo(clock);\r\n        //         %00 = 1ScA\r\n        //         %01 = Horz\r\n        //         %10 = Vert\r\n        //         %11 = 1ScB\r\n        this.Mirror(clock, (val >> 6));\r\n    };\r\n    return Irem097Cart;\r\n}(BaseCart_1.BaseCart));\r\nexports.Irem097Cart = Irem097Cart;\r\nvar BitCorp038Cart = /** @class */ (function (_super) {\r\n    __extends(BitCorp038Cart, _super);\r\n    function BitCorp038Cart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BitCorp038Cart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'Bit Corp Crime Busters';\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks(0, 0, 0, 1);\r\n        }\r\n        this.SetupBankStarts(0, 1, 2, 3);\r\n    };\r\n    BitCorp038Cart.prototype.SetByte = function (clock, address, val) {\r\n        if (address >= 0x7000 && address <= 0x7FFF) {\r\n            var newbank81 = 0;\r\n            var prgbank = (val & 0x3) << 2;\r\n            var chrbank = ((val >> 2) & 0x3);\r\n            this.SetupBankStarts(prgbank, prgbank + 1, prgbank + 2, prgbank + 3);\r\n            this.Whizzler.DrawTo(clock);\r\n            this.CopyBanks(clock, 0, chrbank, 1);\r\n        }\r\n    };\r\n    return BitCorp038Cart;\r\n}(BaseCart_1.BaseCart));\r\nexports.BitCorp038Cart = BitCorp038Cart;\r\n//  Mapper 7 and derivatives 34\r\nvar AxROMCart = /** @class */ (function (_super) {\r\n    __extends(AxROMCart, _super);\r\n    function AxROMCart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    // prevBSSrc = new Uint8Array(8);\r\n    AxROMCart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'AxROM';\r\n        this.SetupBankStarts(0, 1, 2, 3);\r\n        this.Mirror(0, 0);\r\n    };\r\n    AxROMCart.prototype.SetByte = function (clock, address, val) {\r\n        if (address < 0x5000)\r\n            return;\r\n        if (address >= 24576 && address <= 32767) {\r\n            if (this.SRAMEnabled) {\r\n                this.prgRomBank6[address & 8191] = val & 255;\r\n            }\r\n            return;\r\n        }\r\n        // val selects which bank to swap, 32k at a time\r\n        var newbank8 = 0;\r\n        newbank8 = (val & 15) << 2;\r\n        this.SetupBankStarts(newbank8, newbank8 + 1, newbank8 + 2, newbank8 + 3);\r\n        // whizzler.DrawTo(clock);\r\n        if ((val & 16) === 16) {\r\n            this.oneScreenOffset = 1024;\r\n        }\r\n        else {\r\n            this.oneScreenOffset = 0;\r\n        }\r\n        this.Whizzler.DrawTo(clock);\r\n        this.Mirror(clock, 0);\r\n    };\r\n    return AxROMCart;\r\n}(BaseCart_1.BaseCart));\r\nexports.AxROMCart = AxROMCart;\r\n// BNROM (34)\r\nvar BNROMCart = /** @class */ (function (_super) {\r\n    __extends(BNROMCart, _super);\r\n    function BNROMCart() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.isNina = false;\r\n        return _this;\r\n    }\r\n    BNROMCart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'BNROM';\r\n        if (this.chrRomCount > 1) {\r\n            this.mapperName = 'NINA-001';\r\n            this.isNina = true;\r\n            this.SetByte = this.SetByteNina;\r\n        }\r\n        this.SetupBankStarts(0, 1, 2, 3);\r\n        //this.Mirror(0, 0);\r\n    };\r\n    BNROMCart.prototype.SetByte = function (clock, address, val) {\r\n        if (address < 0x5000)\r\n            return;\r\n        if (address >= 24576 && address <= 32767) {\r\n            if (this.SRAMEnabled) {\r\n                this.prgRomBank6[address & 8191] = val & 255;\r\n            }\r\n            return;\r\n        }\r\n        // val selects which bank to swap, 32k at a time\r\n        var newbank8 = 0;\r\n        newbank8 = (val & 15) << 2;\r\n        this.Whizzler.DrawTo(clock);\r\n        this.SetupBankStarts(newbank8, newbank8 + 1, newbank8 + 2, newbank8 + 3);\r\n        // whizzler.DrawTo(clock);\r\n    };\r\n    BNROMCart.prototype.SetByteNina = function (clock, address, val) {\r\n        if (address >= 24576 && address <= 32767) {\r\n            if (this.SRAMEnabled) {\r\n                this.prgRomBank6[address & 8191] = val & 255;\r\n            }\r\n            return;\r\n        }\r\n        switch (address) {\r\n            case 0x7FFD:\r\n                // val selects which bank to swap, 32k at a time\r\n                var newbank8 = 0;\r\n                newbank8 = (val & 1) << 2;\r\n                this.SetupBankStarts(newbank8, newbank8 + 1, newbank8 + 2, newbank8 + 3);\r\n                break;\r\n            case 0x7FFE:\r\n                // Select 4 KB CHR ROM bank for PPU $0000-$0FFF\r\n                this.CopyBanks4k(clock, 0, val & 0xf, 1);\r\n                break;\r\n            case 0x7FFF:\r\n                // Select 4 KB CHR ROM bank for PPU $1000-$1FFF\r\n                this.CopyBanks4k(clock, 1, val & 0xf, 1);\r\n                break;\r\n        }\r\n    };\r\n    return BNROMCart;\r\n}(AxROMCart));\r\nexports.BNROMCart = BNROMCart;\r\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BaseCart_1 = __webpack_require__(1);\r\n// simple discrete logic multi-carts, various pirate xxxxx-in-1s\r\nvar Mapper051Cart = /** @class */ (function (_super) {\r\n    __extends(Mapper051Cart, _super);\r\n    function Mapper051Cart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Mapper051Cart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'Charlie Multi-Cart';\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks(0, 0, 0, 1);\r\n        }\r\n        this.SetupBankStarts(0, 1, 2, 3);\r\n    };\r\n    Mapper051Cart.prototype.SetByte = function (clock, address, val) {\r\n        if (address >= 0x8000) {\r\n            var mode = (val >> 6) & 0x01;\r\n            if (mode) {\r\n                // 16k banks \r\n                var newbank81 = (val) << 1;\r\n                this.SetupBankStarts(newbank81, newbank81 + 1, newbank81, newbank81 + 1);\r\n            }\r\n            else {\r\n                // 32k banks \r\n                var newbank81 = 0;\r\n                newbank81 = (val) << 2;\r\n                this.SetupBankStarts(newbank81, newbank81 + 1, newbank81 + 2, newbank81 + 3);\r\n            }\r\n            this.Whizzler.DrawTo(clock);\r\n            this.Mirror(clock, ((val >> 7) & 0x1) + 1);\r\n            this.CopyBanks(clock, 0, (val >> 3) & 7, 1);\r\n        }\r\n    };\r\n    return Mapper051Cart;\r\n}(BaseCart_1.BaseCart));\r\nexports.Mapper051Cart = Mapper051Cart;\r\nvar Mapper058Cart = /** @class */ (function (_super) {\r\n    __extends(Mapper058Cart, _super);\r\n    function Mapper058Cart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Mapper058Cart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'Charlie Multi-Cart';\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks(0, 0, 0, 1);\r\n        }\r\n        this.SetupBankStarts(0, 1, 2, 3);\r\n    };\r\n    Mapper058Cart.prototype.SetByte = function (clock, address, val) {\r\n        if (address >= 0x8000) {\r\n            var mode = (address >> 6) & 0x01;\r\n            if (mode) {\r\n                // 16k banks \r\n                var newbank81 = (address & 7) << 1;\r\n                this.SetupBankStarts(newbank81, newbank81 + 1, newbank81, newbank81 + 1);\r\n            }\r\n            else {\r\n                // 32k banks \r\n                var newbank81 = 0;\r\n                newbank81 = (address & 7) << 2;\r\n                this.SetupBankStarts(newbank81, newbank81 + 1, newbank81 + 2, newbank81 + 3);\r\n            }\r\n            this.Whizzler.DrawTo(clock);\r\n            this.Mirror(clock, ((address >> 7) & 0x1) + 1);\r\n            this.CopyBanks(clock, 0, (address >> 3) & 7, 1);\r\n        }\r\n    };\r\n    return Mapper058Cart;\r\n}(BaseCart_1.BaseCart));\r\nexports.Mapper058Cart = Mapper058Cart;\r\nvar Mapper202Cart = /** @class */ (function (_super) {\r\n    __extends(Mapper202Cart, _super);\r\n    function Mapper202Cart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Mapper202Cart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'Multi-Cart';\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks(0, 0, 0, 1);\r\n        }\r\n        this.SetupBankStarts(0, 1, 0, 1);\r\n    };\r\n    Mapper202Cart.prototype.SetByte = function (clock, address, val) {\r\n        if (address >= 0x8000) {\r\n            //let mode = ((address >> 14) & 0x01)==0x01;\r\n            var bank = (address >> 1) & 7;\r\n            if ((address & 1) | ((address >> 2) & 2)) {\r\n                var newbank81 = (bank >> 1) << 2;\r\n                this.SetupBankStarts(newbank81, newbank81 + 1, newbank81 + 2, newbank81 + 3);\r\n            }\r\n            else {\r\n                var newbank81 = (bank >> 1) << 1;\r\n                this.SetupBankStarts(newbank81, newbank81 + 1, newbank81, newbank81 + 1);\r\n            }\r\n            this.Whizzler.DrawTo(clock);\r\n            this.Mirror(clock, ((address) & 0x1) + 1);\r\n            this.CopyBanks(clock, 0, bank, 1);\r\n        }\r\n    };\r\n    return Mapper202Cart;\r\n}(BaseCart_1.BaseCart));\r\nexports.Mapper202Cart = Mapper202Cart;\r\nvar Mapper212Cart = /** @class */ (function (_super) {\r\n    __extends(Mapper212Cart, _super);\r\n    function Mapper212Cart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Mapper212Cart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'Multi-Cart212';\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks(0, 0, 0, 2);\r\n        }\r\n        this.SetupBankStarts(0, 1, 3, 4);\r\n    };\r\n    Mapper212Cart.prototype.GetByte = function (clock, address) {\r\n        var bank = 0;\r\n        // if (address & 0xE010) {\r\n        //     return (address & 0xFF) | 0xA;\r\n        // }\r\n        switch (address & 0xE000) {\r\n            case 0x6000:\r\n                return (address >> 8) & 0xFF | 0xA;\r\n            case 0x8000:\r\n                bank = this.bank8start;\r\n                break;\r\n            case 0xA000:\r\n                bank = this.bankAstart;\r\n                break;\r\n            case 0xC000:\r\n                bank = this.bankCstart;\r\n                break;\r\n            case 0xE000:\r\n                bank = this.bankEstart;\r\n                break;\r\n        }\r\n        return this.nesCart[bank + (address & 0x1FFF)];\r\n    };\r\n    Mapper212Cart.prototype.SetByte = function (clock, address, val) {\r\n        if (address >= 0x8000 && address <= 0xFFFF) {\r\n            var mode = ((address >> 14) & 0x01) == 0x01;\r\n            var bank = address & 7;\r\n            // Write $8000-$FFFF:\r\n            // A~[1o.. .... .... MBBb]\r\n            if (mode) {\r\n                // When it's 1, BB is 32 KiB PRG bank at CPU $8000.\r\n                var newbank81 = (address & 6) << 2;\r\n                this.SetupBankStarts(newbank81, newbank81 + 1, newbank81 + 2, newbank81 + 3);\r\n            }\r\n            else {\r\n                // When Banking style is 0, BBb specifies a 16 KiB PRG bank at both CPU $8000 and $C000. \r\n                var newbank81 = bank << 1;\r\n                this.SetupBankStarts(newbank81, newbank81 + 1, newbank81, newbank81 + 1);\r\n            }\r\n            this.Whizzler.DrawTo(clock);\r\n            this.Mirror(clock, ((address >> 3) & 0x1) + 1);\r\n            this.CopyBanks(clock, 0, bank, 1);\r\n        }\r\n    };\r\n    return Mapper212Cart;\r\n}(BaseCart_1.BaseCart));\r\nexports.Mapper212Cart = Mapper212Cart;\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BaseCart_1 = __webpack_require__(1);\r\n// MMC \r\nvar MMC1Cart = /** @class */ (function (_super) {\r\n    __extends(MMC1Cart, _super);\r\n    function MMC1Cart() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.chrRomBankMode = 0;\r\n        _this.prgRomBankMode = 0;\r\n        _this.lastClock = 0;\r\n        _this.sequence = 0;\r\n        _this.accumulator = 0;\r\n        _this.bank_select = 0;\r\n        _this._registers = new Array(4);\r\n        _this.lastwriteAddress = 0;\r\n        return _this;\r\n    }\r\n    MMC1Cart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'MMC1';\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks(0, 0, 0, 2);\r\n        }\r\n        this._registers[0] = 12;\r\n        this._registers[1] = 0;\r\n        this._registers[2] = 0;\r\n        this._registers[3] = 0;\r\n        this.SetupBankStarts(0, 1, this.prgRomCount * 2 - 2, this.prgRomCount * 2 - 1);\r\n        this.sequence = 0;\r\n        this.accumulator = 0;\r\n    };\r\n    MMC1Cart.prototype.SetByte = function (clock, address, val) {\r\n        // if write is to a different register, reset\r\n        this.lastClock = clock;\r\n        switch (address & 0xF000) {\r\n            case 0x6000:\r\n            case 0x7000:\r\n                this.prgRomBank6[address & 8191] = val & 255;\r\n                break;\r\n            default:\r\n                this.lastwriteAddress = address;\r\n                if ((val & 128) === 128) {\r\n                    this._registers[0] = this._registers[0] | 12;\r\n                    this.accumulator = 0; // _registers[(address / 0x2000) & 3];\r\n                    this.sequence = 0;\r\n                }\r\n                else {\r\n                    if ((val & 1) === 1) {\r\n                        this.accumulator = this.accumulator | (1 << this.sequence);\r\n                    }\r\n                    this.sequence = (this.sequence + 1) | 0;\r\n                }\r\n                if (this.sequence === 5) {\r\n                    var regnum = (address & 32767) >> 13;\r\n                    this._registers[(address & 32767) >> 13] = this.accumulator;\r\n                    this.sequence = 0;\r\n                    this.accumulator = 0;\r\n                    switch (regnum) {\r\n                        case 0:\r\n                            // 4bit0\r\n                            // -----\r\n                            // CPPMM\r\n                            // |||||\r\n                            // |||++- Mirroring (0: one-screen, lower bank; 1: one-screen, upper bank;\r\n                            // |||               2: vertical; 3: horizontal)\r\n                            // |++--- PRG ROM bank mode (0, 1: switch 32 KB at $8000, ignoring low bit of bank number;\r\n                            // |                         2: fix first bank at $8000 and switch 16 KB bank at $C000;\r\n                            // |                         3: fix last bank at $C000 and switch 16 KB bank at $8000)\r\n                            // +----- CHR ROM bank mode (0: switch 8 KB at a time; 1: switch two separate 4 KB banks)\r\n                            this.setMMC1Mirroring(clock);\r\n                            this.prgRomBankMode = (this._registers[0] >> 2) & 0x3;\r\n                            this.chrRomBankMode = (this._registers[0] >> 4) & 0x1;\r\n                            break;\r\n                        case 1:\r\n                        case 2:\r\n                            this.setMMC1ChrBanking(clock);\r\n                            break;\r\n                        case 3:\r\n                            this.setMMC1PrgBanking();\r\n                            break;\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    };\r\n    MMC1Cart.prototype.setMMC1ChrBanking = function (clock) {\r\n        //\tbit 4 - sets 8KB or 4KB CHRROM switching mode\r\n        // 0 = 8KB CHRROM banks, 1 = 4KB CHRROM banks\r\n        this.Whizzler.DrawTo(clock);\r\n        //if ((this._registers[0] & 16) === 16) {\r\n        if (this.chrRomBankMode === 1) {\r\n            this.CopyBanks4k(0, 0, this._registers[1], 1);\r\n            this.CopyBanks4k(0, 1, this._registers[2], 1);\r\n        }\r\n        else {\r\n            //CopyBanks(0, _registers[1], 2);\r\n            this.CopyBanks4k(0, 0, this._registers[1], 1);\r\n            this.CopyBanks4k(0, 1, ((this._registers[1] + 1) | 0), 1);\r\n        }\r\n        this.bankSwitchesChanged = true;\r\n        this.Whizzler.UpdatePixelInfo();\r\n    };\r\n    MMC1Cart.prototype.setMMC1PrgBanking = function () {\r\n        var reg = 0;\r\n        if (this.prgRomCount === 32) {\r\n            this.bank_select = (this._registers[1] & 16) << 1;\r\n        }\r\n        else {\r\n            this.bank_select = 0;\r\n        }\r\n        // |++--- PRG ROM bank mode (0, 1: switch 32 KB at $8000, ignoring low bit of bank number;\r\n        // |                         2: fix first bank at $8000 and switch 16 KB bank at $C000;\r\n        // |                         3: fix last bank at $C000 and switch 16 KB bank at $8000)\r\n        switch (this.prgRomBankMode) {\r\n            case 0:\r\n            case 1:\r\n                reg = (4 * ((this._registers[3] >> 1) & 0xF) + this.bank_select) | 0;\r\n                this.SetupBankStarts(reg, reg + 1, reg + 2, reg + 3);\r\n                break;\r\n            case 2:\r\n                reg = (2 * (this._registers[3]) + this.bank_select) | 0;\r\n                this.SetupBankStarts(0, 1, reg, reg + 1);\r\n                break;\r\n            case 3:\r\n                reg = (2 * (this._registers[3]) + this.bank_select) | 0;\r\n                this.SetupBankStarts(reg, reg + 1, (this.prgRomCount << 1) - 2, (this.prgRomCount << 1) - 1);\r\n                break;\r\n        }\r\n    };\r\n    MMC1Cart.prototype.setMMC1Mirroring = function (clock) {\r\n        //bit 1 - toggles between H/V and \"one-screen\" mirroring\r\n        //0 = one-screen mirroring, 1 = H/V mirroring\r\n        this.Whizzler.DrawTo(clock);\r\n        switch (this._registers[0] & 3) {\r\n            case 0:\r\n                this.oneScreenOffset = 0;\r\n                this.Mirror(clock, 0);\r\n                break;\r\n            case 1:\r\n                this.oneScreenOffset = 1024;\r\n                this.Mirror(clock, 0);\r\n                break;\r\n            case 2:\r\n                this.Mirror(clock, 1); // vertical\r\n                break;\r\n            case 3:\r\n                this.Mirror(clock, 2); // horizontal\r\n                break;\r\n        }\r\n        this.bankSwitchesChanged = true;\r\n        this.Whizzler.UpdatePixelInfo();\r\n    };\r\n    return MMC1Cart;\r\n}(BaseCart_1.BaseCart));\r\nexports.MMC1Cart = MMC1Cart;\r\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n// MMC2 and MMC4\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BaseCart_1 = __webpack_require__(1);\r\nvar MMC2Cart = /** @class */ (function (_super) {\r\n    __extends(MMC2Cart, _super);\r\n    function MMC2Cart() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.selector = [0, 0];\r\n        _this.banks = [0, 0, 0, 0];\r\n        return _this;\r\n    }\r\n    MMC2Cart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'MMC2';\r\n        this.selector[0] = 1;\r\n        this.selector[1] = 2;\r\n        this.banks[0] = 0;\r\n        this.banks[1] = 0;\r\n        this.banks[2] = 0;\r\n        this.banks[3] = 0;\r\n        this.SetupBankStarts(0, (this.prgRomCount * 2) - 3, (this.prgRomCount * 2) - 2, (this.prgRomCount * 2) - 1);\r\n        this.CopyBanks(0, 0, this.banks[this.selector[0]], 1);\r\n        this.CopyBanks(0, 1, this.banks[this.selector[1]], 1);\r\n    };\r\n    MMC2Cart.prototype.CopyBanks = function (clock, dest, src, numberOf4kBanks) {\r\n        if (dest >= this.chrRomCount) {\r\n            dest = (this.chrRomCount - 1) | 0;\r\n        }\r\n        var oneKsrc = src << 2;\r\n        var oneKdest = dest << 2;\r\n        for (var i = 0; i < (numberOf4kBanks << 2); i++) {\r\n            this.ppuBankStarts[((oneKdest + i) | 0)] = (oneKsrc + i) * 1024;\r\n        }\r\n        this.UpdateBankStartCache();\r\n    };\r\n    MMC2Cart.prototype.GetPPUByte = function (clock, address) {\r\n        var bank = 0;\r\n        if (address == 0xFD8) {\r\n            bank = (address >> 11) & 0x2;\r\n            this.selector[0] = bank;\r\n            this.Whizzler.DrawTo(clock);\r\n            this.CopyBanks(clock, 0, this.banks[this.selector[0]], 1);\r\n        }\r\n        else if (address == 0xFE8) {\r\n            bank = ((address >> 11) & 0x2) | 0x1;\r\n            this.selector[0] = bank;\r\n            this.Whizzler.DrawTo(clock);\r\n            this.CopyBanks(clock, 0, this.banks[this.selector[0]], 1);\r\n        }\r\n        else if (address >= 0x1FD8 && address <= 0x1FDF) {\r\n            bank = (address >> 11) & 0x2;\r\n            this.selector[1] = bank;\r\n            this.Whizzler.DrawTo(clock);\r\n            this.CopyBanks(clock, 1, this.banks[this.selector[1]], 1);\r\n        }\r\n        else if (address >= 0x1FE8 && address <= 0x1FEF) {\r\n            bank = ((address >> 11) & 0x2) | 0x1;\r\n            this.selector[1] = bank;\r\n            this.Whizzler.DrawTo(clock);\r\n            this.CopyBanks(clock, 1, this.banks[this.selector[1]], 1);\r\n        }\r\n        bank = address >> 10;\r\n        var newAddress = this.ppuBankStarts[bank] + (address & 1023);\r\n        var data = this.chrRom[newAddress];\r\n        return data;\r\n    };\r\n    MMC2Cart.prototype.SetByte = function (clock, address, val) {\r\n        this.Whizzler.DrawTo(clock);\r\n        switch (address >> 12) {\r\n            case 0x6:\r\n            case 0x7:\r\n                if (this.SRAMEnabled && this.SRAMCanWrite) {\r\n                    this.prgRomBank6[address & 8191] = val & 255;\r\n                }\r\n                break;\r\n            case 0xA:\r\n                this.SetupBankStarts((val & 0xF), this.currentA, this.currentC, this.currentE);\r\n                break;\r\n            case 0xB:\r\n            case 0xC:\r\n                this.banks[(address - 0xB000) >> 12] = val & 0x1f;\r\n                //this.CopyBanks(clock,0,this.banks[this.selector[0]], 1);\r\n                this.Whizzler.DrawTo(clock);\r\n                this.CopyBanks(clock, 0, this.banks[this.selector[0]], 1);\r\n                this.Whizzler.UnpackSprites();\r\n                break;\r\n            case 0xD:\r\n            case 0xE:\r\n                this.banks[(address - 0xB000) >> 12] = val & 0x1f;\r\n                //this.CopyBanks(clock,0,this.banks[this.selector[0]], 1);\r\n                this.Whizzler.DrawTo(clock);\r\n                this.CopyBanks(clock, 1, this.banks[this.selector[1]], 1);\r\n                break;\r\n            case 0xF:\r\n                this.Mirror(clock, (val & 0x1) + 1);\r\n                break;\r\n        }\r\n        // this.SetupBankStarts()\r\n        //chr.SwapBanks<SIZE_4K,0x0000>( banks[selector[0]], banks[selector[1]] );\r\n    };\r\n    return MMC2Cart;\r\n}(BaseCart_1.BaseCart));\r\nexports.MMC2Cart = MMC2Cart;\r\nvar MMC4Cart = /** @class */ (function (_super) {\r\n    __extends(MMC4Cart, _super);\r\n    function MMC4Cart() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.selector = [0, 0];\r\n        _this.banks = [0, 0, 0, 0];\r\n        return _this;\r\n    }\r\n    MMC4Cart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'MMC4';\r\n        this.selector[0] = 1;\r\n        this.selector[1] = 2;\r\n        this.banks[0] = 0;\r\n        this.banks[1] = 0;\r\n        this.banks[2] = 0;\r\n        this.banks[3] = 0;\r\n        this.SetupBankStarts(0, 1, (this.prgRomCount * 2) - 2, (this.prgRomCount * 2) - 1);\r\n        this.CopyBanks(0, 0, this.banks[this.selector[0]], 1);\r\n        this.CopyBanks(0, 1, this.banks[this.selector[1]], 1);\r\n    };\r\n    MMC4Cart.prototype.CopyBanks = function (clock, dest, src, numberOf4kBanks) {\r\n        if (dest >= this.chrRomCount) {\r\n            dest = (this.chrRomCount - 1) | 0;\r\n        }\r\n        var oneKsrc = src << 2;\r\n        var oneKdest = dest << 2;\r\n        for (var i = 0; i < (numberOf4kBanks << 2); i++) {\r\n            this.ppuBankStarts[((oneKdest + i) | 0)] = (oneKsrc + i) * 1024;\r\n        }\r\n        this.UpdateBankStartCache();\r\n    };\r\n    MMC4Cart.prototype.GetPPUByte = function (clock, address) {\r\n        var bank = 0;\r\n        if (address >= 0xFD8 && address <= 0xFDF) {\r\n            bank = (address >> 11) & 0x2;\r\n            this.selector[0] = bank;\r\n            this.Whizzler.DrawTo(clock);\r\n            this.CopyBanks(clock, 0, this.banks[this.selector[0]], 1);\r\n        }\r\n        else if (address >= 0xFE8 && address <= 0xFEF) {\r\n            bank = ((address >> 11) & 0x2) | 0x1;\r\n            this.selector[0] = bank;\r\n            this.Whizzler.DrawTo(clock);\r\n            this.CopyBanks(clock, 0, this.banks[this.selector[0]], 1);\r\n        }\r\n        else if (address >= 0x1FD8 && address <= 0x1FDF) {\r\n            bank = (address >> 11) & 0x2;\r\n            this.selector[1] = bank;\r\n            this.Whizzler.DrawTo(clock);\r\n            this.CopyBanks(clock, 1, this.banks[this.selector[1]], 1);\r\n        }\r\n        else if (address >= 0x1FE8 && address <= 0x1FEF) {\r\n            bank = ((address >> 11) & 0x2) | 0x1;\r\n            this.selector[1] = bank;\r\n            this.Whizzler.DrawTo(clock);\r\n            this.CopyBanks(clock, 1, this.banks[this.selector[1]], 1);\r\n        }\r\n        bank = address >> 10;\r\n        var newAddress = this.ppuBankStarts[bank] + (address & 1023);\r\n        var data = this.chrRom[newAddress];\r\n        return data;\r\n    };\r\n    MMC4Cart.prototype.SetByte = function (clock, address, val) {\r\n        this.Whizzler.DrawTo(clock);\r\n        switch (address >> 12) {\r\n            case 0x6:\r\n            case 0x7:\r\n                if (this.SRAMEnabled && this.SRAMCanWrite) {\r\n                    this.prgRomBank6[address & 8191] = val & 255;\r\n                }\r\n                break;\r\n            case 0xA:\r\n                var bank8 = (val & 0xF) << 1;\r\n                this.SetupBankStarts(bank8, bank8 + 1, this.currentC, this.currentE);\r\n                break;\r\n            case 0xB:\r\n            case 0xC:\r\n                this.banks[(address - 0xB000) >> 12] = val & 0x1f;\r\n                //this.CopyBanks(clock,0,this.banks[this.selector[0]], 1);\r\n                this.Whizzler.DrawTo(clock);\r\n                this.CopyBanks(clock, 0, this.banks[this.selector[0]], 1);\r\n                this.Whizzler.UnpackSprites();\r\n                break;\r\n            case 0xD:\r\n            case 0xE:\r\n                this.banks[(address - 0xB000) >> 12] = val & 0x1f;\r\n                //this.CopyBanks(clock,0,this.banks[this.selector[0]], 1);\r\n                this.Whizzler.DrawTo(clock);\r\n                this.CopyBanks(clock, 1, this.banks[this.selector[1]], 1);\r\n                break;\r\n            case 0xF:\r\n                this.Mirror(clock, (val & 0x1) + 1);\r\n                break;\r\n        }\r\n    };\r\n    return MMC4Cart;\r\n}(BaseCart_1.BaseCart));\r\nexports.MMC4Cart = MMC4Cart;\r\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BaseCart_1 = __webpack_require__(1);\r\nvar MMC3Cart = /** @class */ (function (_super) {\r\n    __extends(MMC3Cart, _super);\r\n    function MMC3Cart() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._registers = new Uint8Array(4);\r\n        _this.chr2kBank0 = 0;\r\n        _this.chr2kBank1 = 1;\r\n        _this.chr1kBank0 = 0;\r\n        _this.chr1kBank1 = 0;\r\n        _this.chr1kBank2 = 0;\r\n        _this.chr1kBank3 = 0;\r\n        _this.prgSwap = 0;\r\n        _this.prgSwitch1 = 0;\r\n        _this.prgSwitch2 = 0;\r\n        _this.prevBSSrc = new Uint8Array(8);\r\n        _this._mmc3Command = 0;\r\n        _this._mmc3ChrAddr = 0;\r\n        _this._mmc3IrqVal = 0;\r\n        _this._mmc3TmpVal = 0;\r\n        _this.scanlineCounter = 0;\r\n        _this._mmc3IrcOn = false;\r\n        _this.ppuBankSwap = false;\r\n        _this.PPUBanks = new Uint32Array(8);\r\n        return _this;\r\n    }\r\n    MMC3Cart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'MMC3';\r\n        this._registers.fill(0);\r\n        this.PPUBanks.fill(0);\r\n        this.prevBSSrc.fill(0);\r\n        this.prgSwap = 1;\r\n        //SetupBanks(0, 1, 0xFE, 0xFF);\r\n        this.prgSwitch1 = 0;\r\n        this.prgSwitch2 = 1;\r\n        this.SwapPrgRomBanks();\r\n        this._mmc3IrqVal = 0;\r\n        this._mmc3IrcOn = false;\r\n        this._mmc3TmpVal = 0;\r\n        this.chr2kBank0 = 0;\r\n        this.chr2kBank1 = 0;\r\n        this.chr1kBank0 = 0;\r\n        this.chr1kBank1 = 0;\r\n        this.chr1kBank2 = 0;\r\n        this.chr1kBank3 = 0;\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks(0, 0, 8);\r\n        }\r\n    };\r\n    MMC3Cart.prototype.MaskBankAddress = function (bank) {\r\n        if (bank >= this.prgRomCount * 2) {\r\n            var i = 255;\r\n            while ((bank & i) >= this.prgRomCount * 2) {\r\n                i = i >> 1;\r\n            }\r\n            return (bank & i);\r\n        }\r\n        else {\r\n            return bank;\r\n        }\r\n    };\r\n    MMC3Cart.prototype.CopyBanks = function (dest, src, numberOf1kBanks) {\r\n        var $t;\r\n        if (this.chrRomCount > 0) {\r\n            for (var i = 0; i < numberOf1kBanks; i = (i + 1) | 0) {\r\n                this.ppuBankStarts[((dest + i) | 0)] = (src + i) * 1024;\r\n            }\r\n            this.bankSwitchesChanged = true;\r\n            //Array.Copy(chrRom, src * 0x400, whizzler.cartCopyVidRAM, dest * 0x400, numberOf1kBanks * 0x400);\r\n        }\r\n    };\r\n    MMC3Cart.prototype.SetByte = function (clock, address, val) {\r\n        if (address >= 24576 && address < 32768) {\r\n            if (this.SRAMEnabled && this.SRAMCanWrite) {\r\n                this.prgRomBank6[address & 8191] = val & 255;\r\n            }\r\n            return;\r\n        }\r\n        //Bank select ($8000-$9FFE, even)\r\n        //7  bit  0\r\n        //---- ----\r\n        //CPxx xRRR\r\n        //||    |||\r\n        //||    +++- Specify which bank register to update on next write to Bank Data register\r\n        //_mmc3Command\r\n        //||         0: Select 2 KB CHR bank at PPU $0000-$07FF (or $1000-$17FF);\r\n        //||         1: Select 2 KB CHR bank at PPU $0800-$0FFF (or $1800-$1FFF);\r\n        //||         2: Select 1 KB CHR bank at PPU $1000-$13FF (or $0000-$03FF);\r\n        //||         3: Select 1 KB CHR bank at PPU $1400-$17FF (or $0400-$07FF);\r\n        //||         4: Select 1 KB CHR bank at PPU $1800-$1BFF (or $0800-$0BFF);\r\n        //||         5: Select 1 KB CHR bank at PPU $1C00-$1FFF (or $0C00-$0FFF);\r\n        //||         6: Select 8 KB PRG bank at $8000-$9FFF (or $C000-$DFFF);\r\n        //||         7: Select 8 KB PRG bank at $A000-$BFFF\r\n        //|+-------- PRG ROM bank configuration (0: $8000-$9FFF swappable, $C000-$DFFF fixed to second-last bank;\r\n        //|                                      1: $C000-$DFFF swappable, $8000-$9FFF fixed to second-last bank)\r\n        //+--------- CHR ROM bank configuration (0: two 2 KB banks at $0000-$0FFF, four 1 KB banks at $1000-$1FFF;\r\n        //                                       1: four 1 KB banks at $0000-$0FFF, two 2 KB banks at $1000-$1FFF)\r\n        switch (address & 57345) {\r\n            case 32768:\r\n                this._mmc3Command = val & 7;\r\n                if ((val & 128) === 128) {\r\n                    this.ppuBankSwap = true;\r\n                    this._mmc3ChrAddr = 4096;\r\n                }\r\n                else {\r\n                    this.ppuBankSwap = false;\r\n                    this._mmc3ChrAddr = 0;\r\n                }\r\n                if ((val & 64) === 64) {\r\n                    this.prgSwap = 1;\r\n                }\r\n                else {\r\n                    this.prgSwap = 0;\r\n                }\r\n                this.SwapPrgRomBanks();\r\n                break;\r\n            case 32769:\r\n                switch (this._mmc3Command) {\r\n                    case 0:\r\n                        this.chr2kBank0 = val;\r\n                        this.SwapChrBanks();\r\n                        // CopyBanks(0, val, 1);\r\n                        // CopyBanks(1, val + 1, 1);\r\n                        break;\r\n                    case 1:\r\n                        this.chr2kBank1 = val;\r\n                        this.SwapChrBanks();\r\n                        // CopyBanks(2, val, 1);\r\n                        // CopyBanks(3, val + 1, 1);\r\n                        break;\r\n                    case 2:\r\n                        this.chr1kBank0 = val;\r\n                        this.SwapChrBanks();\r\n                        //CopyBanks(4, val, 1);\r\n                        break;\r\n                    case 3:\r\n                        this.chr1kBank1 = val;\r\n                        this.SwapChrBanks();\r\n                        //CopyBanks(5, val, 1);\r\n                        break;\r\n                    case 4:\r\n                        this.chr1kBank2 = val;\r\n                        this.SwapChrBanks();\r\n                        //CopyBanks(6, val, 1);\r\n                        break;\r\n                    case 5:\r\n                        this.chr1kBank3 = val;\r\n                        this.SwapChrBanks();\r\n                        //CopyBanks(7, val, 1);\r\n                        break;\r\n                    case 6:\r\n                        this.prgSwitch1 = val;\r\n                        this.SwapPrgRomBanks();\r\n                        break;\r\n                    case 7:\r\n                        this.prgSwitch2 = val;\r\n                        this.SwapPrgRomBanks();\r\n                        break;\r\n                }\r\n                break;\r\n            case 40960:\r\n                if ((val & 1) === 1) {\r\n                    this.Mirror(clock, 2);\r\n                }\r\n                else {\r\n                    this.Mirror(clock, 1);\r\n                }\r\n                break;\r\n            case 40961:\r\n                //PRG RAM protect ($A001-$BFFF, odd)\r\n                //7  bit  0\r\n                //---- ----\r\n                //RWxx xxxx\r\n                //||\r\n                //|+-------- Write protection (0: allow writes; 1: deny writes)\r\n                //+--------- Chip enable (0: disable chip; 1: enable chip)\r\n                this.SRAMCanWrite = ((val & 64) === 0);\r\n                this.SRAMEnabled = ((val & 128) === 128);\r\n                break;\r\n            case 49152:\r\n                this._mmc3IrqVal = val;\r\n                if (val === 0) {\r\n                    // special treatment for one-time irq handling\r\n                    this.scanlineCounter = 0;\r\n                }\r\n                break;\r\n            case 49153:\r\n                this._mmc3TmpVal = this._mmc3IrqVal;\r\n                break;\r\n            case 57344:\r\n                this._mmc3IrcOn = false;\r\n                this._mmc3IrqVal = this._mmc3TmpVal;\r\n                this.irqRaised = false;\r\n                if (this.updateIRQ) {\r\n                    this.updateIRQ();\r\n                }\r\n                break;\r\n            case 57345:\r\n                this._mmc3IrcOn = true;\r\n                break;\r\n        }\r\n    };\r\n    MMC3Cart.prototype.SwapChrBanks = function () {\r\n        if (this.ppuBankSwap) {\r\n            this.CopyBanks(0, this.chr1kBank0, 1);\r\n            this.CopyBanks(1, this.chr1kBank1, 1);\r\n            this.CopyBanks(2, this.chr1kBank2, 1);\r\n            this.CopyBanks(3, this.chr1kBank3, 1);\r\n            this.CopyBanks(4, this.chr2kBank0, 2);\r\n            this.CopyBanks(6, this.chr2kBank1, 2);\r\n        }\r\n        else {\r\n            this.CopyBanks(4, this.chr1kBank0, 1);\r\n            this.CopyBanks(5, this.chr1kBank1, 1);\r\n            this.CopyBanks(6, this.chr1kBank2, 1);\r\n            this.CopyBanks(7, this.chr1kBank3, 1);\r\n            this.CopyBanks(0, this.chr2kBank0, 2);\r\n            this.CopyBanks(2, this.chr2kBank1, 2);\r\n        }\r\n    };\r\n    MMC3Cart.prototype.SwapPrgRomBanks = function () {\r\n        //|+-------- PRG ROM bank configuration (0: $8000-$9FFF swappable, $C000-$DFFF fixed to second-last bank;\r\n        //|                                      1: $C000-$DFFF swappable, $8000-$9FFF fixed to second-last bank)\r\n        if (this.prgSwap === 1) {\r\n            this.SetupBankStarts(((this.prgRomCount * 2 - 2) | 0), this.prgSwitch2, this.prgSwitch1, ((this.prgRomCount * 2 - 1) | 0));\r\n        }\r\n        else {\r\n            this.SetupBankStarts(this.prgSwitch1, this.prgSwitch2, ((this.prgRomCount * 2 - 2) | 0), ((this.prgRomCount * 2 - 1) | 0));\r\n        }\r\n    };\r\n    MMC3Cart.prototype.UpdateScanlineCounter = function () {\r\n        //if (scanlineCounter == -1) return;\r\n        if (this.scanlineCounter === 0) {\r\n            this.scanlineCounter = this._mmc3IrqVal;\r\n            //Writing $00 to $C000 will result in a single IRQ being generated on the next rising edge of PPU A12. \r\n            //No more IRQs will be generated until $C000 is changed to a non-zero value, upon which the \r\n            // counter will start counting from the new value, generating an IRQ once it reaches zero. \r\n            if (this._mmc3IrqVal === 0) {\r\n                if (this._mmc3IrcOn) {\r\n                    this.irqRaised = true;\r\n                    this.updateIRQ();\r\n                }\r\n                this.scanlineCounter = -1;\r\n                return;\r\n            }\r\n        }\r\n        if (this._mmc3TmpVal !== 0) {\r\n            this.scanlineCounter = this._mmc3TmpVal;\r\n            this._mmc3TmpVal = 0;\r\n        }\r\n        else {\r\n            this.scanlineCounter = (((this.scanlineCounter - 1) | 0)) & 255;\r\n        }\r\n        if (this.scanlineCounter === 0) {\r\n            if (this._mmc3IrcOn) {\r\n                this.irqRaised = true;\r\n                if (this.updateIRQ) {\r\n                    this.updateIRQ();\r\n                }\r\n            }\r\n            if (this._mmc3IrqVal > 0) {\r\n                this.scanlineCounter = this._mmc3IrqVal;\r\n            }\r\n        }\r\n    };\r\n    return MMC3Cart;\r\n}(BaseCart_1.BaseCart));\r\nexports.MMC3Cart = MMC3Cart;\r\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BaseCart_1 = __webpack_require__(1);\r\n// BNROM (34)\r\nvar Mapper068Cart = /** @class */ (function (_super) {\r\n    __extends(Mapper068Cart, _super);\r\n    function Mapper068Cart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Mapper068Cart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'Sunsoft-4';\r\n        this.SetupBankStarts(0, 1, (this.prgRomCount * 2) - 2, (this.prgRomCount * 2) - 1);\r\n        //this.Mirror(0, 0);\r\n    };\r\n    Mapper068Cart.prototype.SetByte = function (clock, address, val) {\r\n        if (address < 0x5000)\r\n            return;\r\n        if (address >= 24576 && address <= 32767) {\r\n            if (this.SRAMEnabled) {\r\n                this.prgRomBank6[address & 8191] = val & 255;\r\n            }\r\n            return;\r\n        }\r\n        switch (address & 0xF000) {\r\n            case 0xF000:\r\n                var newbank8 = (val * 0xF) << 1;\r\n                this.SetupBankStarts(newbank8, newbank8 + 1, this.currentC, this.currentE);\r\n                break;\r\n            case 0x8000:\r\n                //Map a 2 KiB CHR ROM bank into PPU $0000.    \r\n                this.CopyBanks2k(clock, 0, val, 1);\r\n                break;\r\n            case 0x9000:\r\n                // Map a 2 KiB CHR ROM bank into PPU $0800.  \r\n                this.CopyBanks2k(clock, 1, val, 1);\r\n                break;\r\n            case 0xA000:\r\n                // Map a 2 KiB CHR ROM bank into PPU $1000.  \r\n                this.CopyBanks2k(clock, 2, val, 1);\r\n                break;\r\n            case 0xB000:\r\n                // Map a 2 KiB CHR ROM bank into PPU $1800.   \r\n                this.CopyBanks2k(clock, 3, val, 1);\r\n                break;\r\n            case 0xC000:\r\n                // Map a 1 KiB CHR ROM bank in place of the lower nametable (CIRAM $000-$3FF). Only D6-D0 are used; D7 is ignored and treated as 1, so nametables must be in the last 128 KiB of CHR ROM.   \r\n                this.CopyBanks1k(clock, 8, val | 0x80, 1);\r\n                break;\r\n            case 0xD000:\r\n                // Map a 1 KiB CHR ROM bank in place of the upper nametable (CIRAM $400-$7FF). Only D6-D0 are used; D7 is ignored and treated as 1.  \r\n                this.CopyBanks1k(clock, 9, val | 0x80, 1);\r\n                break;\r\n            case 0xE000:\r\n                this.Whizzler.DrawTo(clock);\r\n                this.Mirror(clock, val & 0x3);\r\n                var useCRAM = (val & 0x10) == 0x10;\r\n                break;\r\n        }\r\n        // this.Whizzler.DrawTo(clock);\r\n        // whizzler.DrawTo(clock);\r\n    };\r\n    return Mapper068Cart;\r\n}(BaseCart_1.BaseCart));\r\nexports.Mapper068Cart = Mapper068Cart;\r\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BaseCart_1 = __webpack_require__(1);\r\n// simple discrete logic multi-carts, various pirate xxxxx-in-1s\r\nvar Mapper031Cart = /** @class */ (function (_super) {\r\n    __extends(Mapper031Cart, _super);\r\n    function Mapper031Cart() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.registers = [0, 0, 0, 0, 0, 0, 0, 0xFF];\r\n        return _this;\r\n    }\r\n    Mapper031Cart.prototype.InitializeCart = function () {\r\n        this.mapsBelow6000 = true;\r\n        this.mapperName = 'NSF Compilation';\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks(0, 0, 0, 1);\r\n        }\r\n        this.SetupBankStarts(this.registers[0], this.registers[1], this.registers[2], this.registers[3], this.registers[4], this.registers[5], this.registers[6], this.registers[7]);\r\n        //         this.SetupBankStarts(0, 0, 0, 0,  (this.prgRomCount * 4) - 4,  (this.prgRomCount * 4) - 3, (this.prgRomCount * 4) - 2, (this.prgRomCount * 4) - 1);\r\n    };\r\n    Mapper031Cart.prototype.SetByte = function (clock, address, val) {\r\n        if (address >= 0x6000 && address <= 0x7FFF) {\r\n            this.prgRomBank6[address & 8191] = val & 255;\r\n        }\r\n        if ((address & 0xFFF0) === 0x5FF0) {\r\n            this.registers[address & 0x7] = val;\r\n            this.SetupBankStarts(this.registers[0], this.registers[1], this.registers[2], this.registers[3], this.registers[4], this.registers[5], this.registers[6], this.registers[7]);\r\n        }\r\n        // switch (address) {\r\n        //     case 0x5FF8:\r\n        //         this.registers[address & 0x7] = val;\r\n        //     //AAA  PPPP PPPP\r\n        //         this.SetupBankStarts(val, this.current9,  this.currentA, this.currentB, this.currentC, this.currentD, this.currentE , this.currentF);\r\n        //         break;\r\n        //     case 0x5FF9:\r\n        //         this.registers[address & 0x7] = val;\r\n        //         this.SetupBankStarts(this.current8, val,  this.currentA, this.currentB, this.currentC, this.currentD, this.currentE , this.currentF);\r\n        //         break;\r\n        //     case 0x5FFA:\r\n        //         this.registers[address & 0x7] = val;\r\n        //         this.SetupBankStarts(this.current8, this.current9,  val, this.currentB, this.currentC, this.currentD, this.currentE , this.currentF);\r\n        //         break;\r\n        //     case 0x5FFB:\r\n        //         this.registers[address & 0x7] = val;\r\n        //         this.SetupBankStarts(this.current8, this.current9,  this.currentA, val, this.currentC, this.currentD, this.currentE , this.currentF);\r\n        //         break;\r\n        //     case 0x5FFC:\r\n        //         this.registers[address & 0x7] = val;\r\n        //         this.SetupBankStarts(this.current8, this.current9,  this.currentA, this.currentB, val, this.currentD, this.currentE , this.currentF);\r\n        //         break;\r\n        //     case 0x5FFD:\r\n        //         this.registers[address & 0x7] = val;\r\n        //         this.SetupBankStarts(this.current8, this.current9,  this.currentA, this.currentB, this.currentC, val, this.currentE , this.currentF);\r\n        //         break;\r\n        //     case 0x5FFE:\r\n        //         this.registers[address & 0x7] = val;\r\n        //         this.SetupBankStarts(this.current8, this.current9,  this.currentA, this.currentB, this.currentC, this.currentD, val , this.currentF);\r\n        //         break;\r\n        //     case 0x5FFF:\r\n        //         this.registers[address & 0x7] = val;\r\n        //         this.SetupBankStarts(this.current8, this.current9,  this.currentA, this.currentB, this.currentC, this.currentD, this.currentE , val);\r\n        //         break;\r\n        //     } \r\n    };\r\n    Mapper031Cart.prototype.GetByte = function (clock, address) {\r\n        var bank = 0;\r\n        switch (address & 0xF000) {\r\n            // case 0x5000: \r\n            //     return this.registers[address & 0x7];\r\n            case 0x6000:\r\n            case 0x7000:\r\n                return this.prgRomBank6[address & 0x1FFF];\r\n            case 0x8000:\r\n                bank = this.bank8start;\r\n                break;\r\n            case 0x9000:\r\n                bank = this.bank9start;\r\n                break;\r\n            case 0xA000:\r\n                bank = this.bankAstart;\r\n                break;\r\n            case 0xB000:\r\n                bank = this.bankBstart;\r\n                break;\r\n            case 0xC000:\r\n                bank = this.bankCstart;\r\n                break;\r\n            case 0xD000:\r\n                bank = this.bankDstart;\r\n                break;\r\n            case 0xE000:\r\n                bank = this.bankEstart;\r\n                break;\r\n            case 0xF000:\r\n                bank = this.bankFstart;\r\n                break;\r\n        }\r\n        return this.nesCart[bank + (address & 0xFFF)];\r\n    };\r\n    return Mapper031Cart;\r\n}(BaseCart_1.BaseCart4k));\r\nexports.Mapper031Cart = Mapper031Cart;\r\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BaseCart_1 = __webpack_require__(1);\r\nvar Smb2jCart = /** @class */ (function (_super) {\r\n    __extends(Smb2jCart, _super);\r\n    function Smb2jCart() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.irqEnabled = false;\r\n        _this.irqCounter = 0;\r\n        _this.bank6start = 0;\r\n        _this.current6 = 0;\r\n        return _this;\r\n    }\r\n    Smb2jCart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'Smb2j';\r\n        this.Setup6BankStarts(6, 4, 5, 1, 7);\r\n        this.CopyBanks(0, 0, 0, 1);\r\n    };\r\n    Smb2jCart.prototype.handleNextEvent = function (clock) {\r\n        // if (this.nextEventAt <= clock) {\r\n        //     if (this.irqEnabled) {\r\n        //         this.CPU._handleIRQ = true;\r\n        //         this.irqEnabled = false;\r\n        //         this.nextEventAt = 0;\r\n        //     }\r\n        // }\r\n    };\r\n    ;\r\n    Smb2jCart.prototype.advanceClock = function (value) {\r\n        if (this.irqEnabled) {\r\n            this.irqCounter -= value;\r\n            if (this.irqCounter <= 0) {\r\n                this.irqCounter = 0;\r\n                this.Whizzler.DrawTo(this.CPU.clock);\r\n                this.CPU._handleIRQ = true;\r\n                this.irqEnabled = false;\r\n            }\r\n        }\r\n    };\r\n    Smb2jCart.prototype.Setup6BankStarts = function (reg6, reg8, regA, regC, regE) {\r\n        this.current6 = reg6 = this.MaskBankAddress(reg6);\r\n        this.current8 = reg8 = this.MaskBankAddress(reg8);\r\n        this.currentA = regA = this.MaskBankAddress(regA);\r\n        this.currentC = regC = this.MaskBankAddress(regC);\r\n        this.currentE = regE = this.MaskBankAddress(regE);\r\n        this.bank6start = reg6 * 8192;\r\n        this.bank8start = reg8 * 8192;\r\n        this.bankAstart = regA * 8192;\r\n        this.bankCstart = regC * 8192;\r\n        this.bankEstart = regE * 8192;\r\n    };\r\n    Smb2jCart.prototype.GetByte = function (clock, address) {\r\n        var bank = 0;\r\n        switch (address & 0xE000) {\r\n            case 0x6000:\r\n                bank = this.bank6start;\r\n                break;\r\n            case 0x8000:\r\n                bank = this.bank8start;\r\n                break;\r\n            case 0xA000:\r\n                bank = this.bankAstart;\r\n                break;\r\n            case 0xC000:\r\n                bank = this.bankCstart;\r\n                break;\r\n            case 0xE000:\r\n                bank = this.bankEstart;\r\n                break;\r\n        }\r\n        return this.nesCart[bank + (address & 0x1FFF)];\r\n    };\r\n    Smb2jCart.prototype.SetByte = function (clock, address, data) {\r\n        switch (address & 0xE000) {\r\n            case 0x8000:\r\n                this.irqRaised = false;\r\n                this.irqEnabled = false;\r\n                break;\r\n            case 0xA000:\r\n                this.irqEnabled = true;\r\n                this.irqCounter = 4096;\r\n                this.nextEventAt = clock + 4096;\r\n                break;\r\n            case 0xE000:\r\n                this.Setup6BankStarts(this.current6, this.current8, this.currentA, data, this.currentE);\r\n                break;\r\n        }\r\n    };\r\n    return Smb2jCart;\r\n}(BaseCart_1.BaseCart));\r\nexports.Smb2jCart = Smb2jCart;\r\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {\n  crc1: __webpack_require__(25),\n  crc8: __webpack_require__(26),\n  crc81wire: __webpack_require__(27),\n  crc16: __webpack_require__(28),\n  crc16ccitt: __webpack_require__(29),\n  crc16modbus: __webpack_require__(30),\n  crc16xmodem: __webpack_require__(31),\n  crc16kermit: __webpack_require__(32),\n  crc24: __webpack_require__(33),\n  crc32: __webpack_require__(34),\n  crcjam: __webpack_require__(35)\n};\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _buffer = __webpack_require__(0);\n\nvar _create_buffer = __webpack_require__(2);\n\nvar _create_buffer2 = _interopRequireDefault(_create_buffer);\n\nvar _define_crc = __webpack_require__(3);\n\nvar _define_crc2 = _interopRequireDefault(_define_crc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = (0, _define_crc2.default)('crc1', function (buf, previous) {\n  if (!_buffer.Buffer.isBuffer(buf)) buf = (0, _create_buffer2.default)(buf);\n\n  var crc = ~~previous;\n  var accum = 0;\n\n  for (var index = 0; index < buf.length; index++) {\n    var byte = buf[index];\n    accum += byte;\n  }\n\n  crc += accum % 256;\n  return crc % 256;\n});\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _buffer = __webpack_require__(0);\n\nvar _create_buffer = __webpack_require__(2);\n\nvar _create_buffer2 = _interopRequireDefault(_create_buffer);\n\nvar _define_crc = __webpack_require__(3);\n\nvar _define_crc2 = _interopRequireDefault(_define_crc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=crc-8 --generate=c`\nvar TABLE = [0x00, 0x07, 0x0e, 0x09, 0x1c, 0x1b, 0x12, 0x15, 0x38, 0x3f, 0x36, 0x31, 0x24, 0x23, 0x2a, 0x2d, 0x70, 0x77, 0x7e, 0x79, 0x6c, 0x6b, 0x62, 0x65, 0x48, 0x4f, 0x46, 0x41, 0x54, 0x53, 0x5a, 0x5d, 0xe0, 0xe7, 0xee, 0xe9, 0xfc, 0xfb, 0xf2, 0xf5, 0xd8, 0xdf, 0xd6, 0xd1, 0xc4, 0xc3, 0xca, 0xcd, 0x90, 0x97, 0x9e, 0x99, 0x8c, 0x8b, 0x82, 0x85, 0xa8, 0xaf, 0xa6, 0xa1, 0xb4, 0xb3, 0xba, 0xbd, 0xc7, 0xc0, 0xc9, 0xce, 0xdb, 0xdc, 0xd5, 0xd2, 0xff, 0xf8, 0xf1, 0xf6, 0xe3, 0xe4, 0xed, 0xea, 0xb7, 0xb0, 0xb9, 0xbe, 0xab, 0xac, 0xa5, 0xa2, 0x8f, 0x88, 0x81, 0x86, 0x93, 0x94, 0x9d, 0x9a, 0x27, 0x20, 0x29, 0x2e, 0x3b, 0x3c, 0x35, 0x32, 0x1f, 0x18, 0x11, 0x16, 0x03, 0x04, 0x0d, 0x0a, 0x57, 0x50, 0x59, 0x5e, 0x4b, 0x4c, 0x45, 0x42, 0x6f, 0x68, 0x61, 0x66, 0x73, 0x74, 0x7d, 0x7a, 0x89, 0x8e, 0x87, 0x80, 0x95, 0x92, 0x9b, 0x9c, 0xb1, 0xb6, 0xbf, 0xb8, 0xad, 0xaa, 0xa3, 0xa4, 0xf9, 0xfe, 0xf7, 0xf0, 0xe5, 0xe2, 0xeb, 0xec, 0xc1, 0xc6, 0xcf, 0xc8, 0xdd, 0xda, 0xd3, 0xd4, 0x69, 0x6e, 0x67, 0x60, 0x75, 0x72, 0x7b, 0x7c, 0x51, 0x56, 0x5f, 0x58, 0x4d, 0x4a, 0x43, 0x44, 0x19, 0x1e, 0x17, 0x10, 0x05, 0x02, 0x0b, 0x0c, 0x21, 0x26, 0x2f, 0x28, 0x3d, 0x3a, 0x33, 0x34, 0x4e, 0x49, 0x40, 0x47, 0x52, 0x55, 0x5c, 0x5b, 0x76, 0x71, 0x78, 0x7f, 0x6a, 0x6d, 0x64, 0x63, 0x3e, 0x39, 0x30, 0x37, 0x22, 0x25, 0x2c, 0x2b, 0x06, 0x01, 0x08, 0x0f, 0x1a, 0x1d, 0x14, 0x13, 0xae, 0xa9, 0xa0, 0xa7, 0xb2, 0xb5, 0xbc, 0xbb, 0x96, 0x91, 0x98, 0x9f, 0x8a, 0x8d, 0x84, 0x83, 0xde, 0xd9, 0xd0, 0xd7, 0xc2, 0xc5, 0xcc, 0xcb, 0xe6, 0xe1, 0xe8, 0xef, 0xfa, 0xfd, 0xf4, 0xf3];\n\nif (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);\n\nmodule.exports = (0, _define_crc2.default)('crc-8', function (buf, previous) {\n  if (!_buffer.Buffer.isBuffer(buf)) buf = (0, _create_buffer2.default)(buf);\n\n  var crc = ~~previous;\n\n  for (var index = 0; index < buf.length; index++) {\n    var byte = buf[index];\n    crc = TABLE[(crc ^ byte) & 0xff] & 0xff;\n  }\n\n  return crc;\n});\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _buffer = __webpack_require__(0);\n\nvar _create_buffer = __webpack_require__(2);\n\nvar _create_buffer2 = _interopRequireDefault(_create_buffer);\n\nvar _define_crc = __webpack_require__(3);\n\nvar _define_crc2 = _interopRequireDefault(_define_crc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=dallas-1-wire --generate=c`\nvar TABLE = [0x00, 0x5e, 0xbc, 0xe2, 0x61, 0x3f, 0xdd, 0x83, 0xc2, 0x9c, 0x7e, 0x20, 0xa3, 0xfd, 0x1f, 0x41, 0x9d, 0xc3, 0x21, 0x7f, 0xfc, 0xa2, 0x40, 0x1e, 0x5f, 0x01, 0xe3, 0xbd, 0x3e, 0x60, 0x82, 0xdc, 0x23, 0x7d, 0x9f, 0xc1, 0x42, 0x1c, 0xfe, 0xa0, 0xe1, 0xbf, 0x5d, 0x03, 0x80, 0xde, 0x3c, 0x62, 0xbe, 0xe0, 0x02, 0x5c, 0xdf, 0x81, 0x63, 0x3d, 0x7c, 0x22, 0xc0, 0x9e, 0x1d, 0x43, 0xa1, 0xff, 0x46, 0x18, 0xfa, 0xa4, 0x27, 0x79, 0x9b, 0xc5, 0x84, 0xda, 0x38, 0x66, 0xe5, 0xbb, 0x59, 0x07, 0xdb, 0x85, 0x67, 0x39, 0xba, 0xe4, 0x06, 0x58, 0x19, 0x47, 0xa5, 0xfb, 0x78, 0x26, 0xc4, 0x9a, 0x65, 0x3b, 0xd9, 0x87, 0x04, 0x5a, 0xb8, 0xe6, 0xa7, 0xf9, 0x1b, 0x45, 0xc6, 0x98, 0x7a, 0x24, 0xf8, 0xa6, 0x44, 0x1a, 0x99, 0xc7, 0x25, 0x7b, 0x3a, 0x64, 0x86, 0xd8, 0x5b, 0x05, 0xe7, 0xb9, 0x8c, 0xd2, 0x30, 0x6e, 0xed, 0xb3, 0x51, 0x0f, 0x4e, 0x10, 0xf2, 0xac, 0x2f, 0x71, 0x93, 0xcd, 0x11, 0x4f, 0xad, 0xf3, 0x70, 0x2e, 0xcc, 0x92, 0xd3, 0x8d, 0x6f, 0x31, 0xb2, 0xec, 0x0e, 0x50, 0xaf, 0xf1, 0x13, 0x4d, 0xce, 0x90, 0x72, 0x2c, 0x6d, 0x33, 0xd1, 0x8f, 0x0c, 0x52, 0xb0, 0xee, 0x32, 0x6c, 0x8e, 0xd0, 0x53, 0x0d, 0xef, 0xb1, 0xf0, 0xae, 0x4c, 0x12, 0x91, 0xcf, 0x2d, 0x73, 0xca, 0x94, 0x76, 0x28, 0xab, 0xf5, 0x17, 0x49, 0x08, 0x56, 0xb4, 0xea, 0x69, 0x37, 0xd5, 0x8b, 0x57, 0x09, 0xeb, 0xb5, 0x36, 0x68, 0x8a, 0xd4, 0x95, 0xcb, 0x29, 0x77, 0xf4, 0xaa, 0x48, 0x16, 0xe9, 0xb7, 0x55, 0x0b, 0x88, 0xd6, 0x34, 0x6a, 0x2b, 0x75, 0x97, 0xc9, 0x4a, 0x14, 0xf6, 0xa8, 0x74, 0x2a, 0xc8, 0x96, 0x15, 0x4b, 0xa9, 0xf7, 0xb6, 0xe8, 0x0a, 0x54, 0xd7, 0x89, 0x6b, 0x35];\n\nif (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);\n\nmodule.exports = (0, _define_crc2.default)('dallas-1-wire', function (buf, previous) {\n  if (!_buffer.Buffer.isBuffer(buf)) buf = (0, _create_buffer2.default)(buf);\n\n  var crc = ~~previous;\n\n  for (var index = 0; index < buf.length; index++) {\n    var byte = buf[index];\n    crc = TABLE[(crc ^ byte) & 0xff] & 0xff;\n  }\n\n  return crc;\n});\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _buffer = __webpack_require__(0);\n\nvar _create_buffer = __webpack_require__(2);\n\nvar _create_buffer2 = _interopRequireDefault(_create_buffer);\n\nvar _define_crc = __webpack_require__(3);\n\nvar _define_crc2 = _interopRequireDefault(_define_crc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=crc-16 --generate=c`\nvar TABLE = [0x0000, 0xc0c1, 0xc181, 0x0140, 0xc301, 0x03c0, 0x0280, 0xc241, 0xc601, 0x06c0, 0x0780, 0xc741, 0x0500, 0xc5c1, 0xc481, 0x0440, 0xcc01, 0x0cc0, 0x0d80, 0xcd41, 0x0f00, 0xcfc1, 0xce81, 0x0e40, 0x0a00, 0xcac1, 0xcb81, 0x0b40, 0xc901, 0x09c0, 0x0880, 0xc841, 0xd801, 0x18c0, 0x1980, 0xd941, 0x1b00, 0xdbc1, 0xda81, 0x1a40, 0x1e00, 0xdec1, 0xdf81, 0x1f40, 0xdd01, 0x1dc0, 0x1c80, 0xdc41, 0x1400, 0xd4c1, 0xd581, 0x1540, 0xd701, 0x17c0, 0x1680, 0xd641, 0xd201, 0x12c0, 0x1380, 0xd341, 0x1100, 0xd1c1, 0xd081, 0x1040, 0xf001, 0x30c0, 0x3180, 0xf141, 0x3300, 0xf3c1, 0xf281, 0x3240, 0x3600, 0xf6c1, 0xf781, 0x3740, 0xf501, 0x35c0, 0x3480, 0xf441, 0x3c00, 0xfcc1, 0xfd81, 0x3d40, 0xff01, 0x3fc0, 0x3e80, 0xfe41, 0xfa01, 0x3ac0, 0x3b80, 0xfb41, 0x3900, 0xf9c1, 0xf881, 0x3840, 0x2800, 0xe8c1, 0xe981, 0x2940, 0xeb01, 0x2bc0, 0x2a80, 0xea41, 0xee01, 0x2ec0, 0x2f80, 0xef41, 0x2d00, 0xedc1, 0xec81, 0x2c40, 0xe401, 0x24c0, 0x2580, 0xe541, 0x2700, 0xe7c1, 0xe681, 0x2640, 0x2200, 0xe2c1, 0xe381, 0x2340, 0xe101, 0x21c0, 0x2080, 0xe041, 0xa001, 0x60c0, 0x6180, 0xa141, 0x6300, 0xa3c1, 0xa281, 0x6240, 0x6600, 0xa6c1, 0xa781, 0x6740, 0xa501, 0x65c0, 0x6480, 0xa441, 0x6c00, 0xacc1, 0xad81, 0x6d40, 0xaf01, 0x6fc0, 0x6e80, 0xae41, 0xaa01, 0x6ac0, 0x6b80, 0xab41, 0x6900, 0xa9c1, 0xa881, 0x6840, 0x7800, 0xb8c1, 0xb981, 0x7940, 0xbb01, 0x7bc0, 0x7a80, 0xba41, 0xbe01, 0x7ec0, 0x7f80, 0xbf41, 0x7d00, 0xbdc1, 0xbc81, 0x7c40, 0xb401, 0x74c0, 0x7580, 0xb541, 0x7700, 0xb7c1, 0xb681, 0x7640, 0x7200, 0xb2c1, 0xb381, 0x7340, 0xb101, 0x71c0, 0x7080, 0xb041, 0x5000, 0x90c1, 0x9181, 0x5140, 0x9301, 0x53c0, 0x5280, 0x9241, 0x9601, 0x56c0, 0x5780, 0x9741, 0x5500, 0x95c1, 0x9481, 0x5440, 0x9c01, 0x5cc0, 0x5d80, 0x9d41, 0x5f00, 0x9fc1, 0x9e81, 0x5e40, 0x5a00, 0x9ac1, 0x9b81, 0x5b40, 0x9901, 0x59c0, 0x5880, 0x9841, 0x8801, 0x48c0, 0x4980, 0x8941, 0x4b00, 0x8bc1, 0x8a81, 0x4a40, 0x4e00, 0x8ec1, 0x8f81, 0x4f40, 0x8d01, 0x4dc0, 0x4c80, 0x8c41, 0x4400, 0x84c1, 0x8581, 0x4540, 0x8701, 0x47c0, 0x4680, 0x8641, 0x8201, 0x42c0, 0x4380, 0x8341, 0x4100, 0x81c1, 0x8081, 0x4040];\n\nif (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);\n\nmodule.exports = (0, _define_crc2.default)('crc-16', function (buf, previous) {\n  if (!_buffer.Buffer.isBuffer(buf)) buf = (0, _create_buffer2.default)(buf);\n\n  var crc = ~~previous;\n\n  for (var index = 0; index < buf.length; index++) {\n    var byte = buf[index];\n    crc = (TABLE[(crc ^ byte) & 0xff] ^ crc >> 8) & 0xffff;\n  }\n\n  return crc;\n});\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _buffer = __webpack_require__(0);\n\nvar _create_buffer = __webpack_require__(2);\n\nvar _create_buffer2 = _interopRequireDefault(_create_buffer);\n\nvar _define_crc = __webpack_require__(3);\n\nvar _define_crc2 = _interopRequireDefault(_define_crc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=ccitt --generate=c`\nvar TABLE = [0x0000, 0x1021, 0x2042, 0x3063, 0x4084, 0x50a5, 0x60c6, 0x70e7, 0x8108, 0x9129, 0xa14a, 0xb16b, 0xc18c, 0xd1ad, 0xe1ce, 0xf1ef, 0x1231, 0x0210, 0x3273, 0x2252, 0x52b5, 0x4294, 0x72f7, 0x62d6, 0x9339, 0x8318, 0xb37b, 0xa35a, 0xd3bd, 0xc39c, 0xf3ff, 0xe3de, 0x2462, 0x3443, 0x0420, 0x1401, 0x64e6, 0x74c7, 0x44a4, 0x5485, 0xa56a, 0xb54b, 0x8528, 0x9509, 0xe5ee, 0xf5cf, 0xc5ac, 0xd58d, 0x3653, 0x2672, 0x1611, 0x0630, 0x76d7, 0x66f6, 0x5695, 0x46b4, 0xb75b, 0xa77a, 0x9719, 0x8738, 0xf7df, 0xe7fe, 0xd79d, 0xc7bc, 0x48c4, 0x58e5, 0x6886, 0x78a7, 0x0840, 0x1861, 0x2802, 0x3823, 0xc9cc, 0xd9ed, 0xe98e, 0xf9af, 0x8948, 0x9969, 0xa90a, 0xb92b, 0x5af5, 0x4ad4, 0x7ab7, 0x6a96, 0x1a71, 0x0a50, 0x3a33, 0x2a12, 0xdbfd, 0xcbdc, 0xfbbf, 0xeb9e, 0x9b79, 0x8b58, 0xbb3b, 0xab1a, 0x6ca6, 0x7c87, 0x4ce4, 0x5cc5, 0x2c22, 0x3c03, 0x0c60, 0x1c41, 0xedae, 0xfd8f, 0xcdec, 0xddcd, 0xad2a, 0xbd0b, 0x8d68, 0x9d49, 0x7e97, 0x6eb6, 0x5ed5, 0x4ef4, 0x3e13, 0x2e32, 0x1e51, 0x0e70, 0xff9f, 0xefbe, 0xdfdd, 0xcffc, 0xbf1b, 0xaf3a, 0x9f59, 0x8f78, 0x9188, 0x81a9, 0xb1ca, 0xa1eb, 0xd10c, 0xc12d, 0xf14e, 0xe16f, 0x1080, 0x00a1, 0x30c2, 0x20e3, 0x5004, 0x4025, 0x7046, 0x6067, 0x83b9, 0x9398, 0xa3fb, 0xb3da, 0xc33d, 0xd31c, 0xe37f, 0xf35e, 0x02b1, 0x1290, 0x22f3, 0x32d2, 0x4235, 0x5214, 0x6277, 0x7256, 0xb5ea, 0xa5cb, 0x95a8, 0x8589, 0xf56e, 0xe54f, 0xd52c, 0xc50d, 0x34e2, 0x24c3, 0x14a0, 0x0481, 0x7466, 0x6447, 0x5424, 0x4405, 0xa7db, 0xb7fa, 0x8799, 0x97b8, 0xe75f, 0xf77e, 0xc71d, 0xd73c, 0x26d3, 0x36f2, 0x0691, 0x16b0, 0x6657, 0x7676, 0x4615, 0x5634, 0xd94c, 0xc96d, 0xf90e, 0xe92f, 0x99c8, 0x89e9, 0xb98a, 0xa9ab, 0x5844, 0x4865, 0x7806, 0x6827, 0x18c0, 0x08e1, 0x3882, 0x28a3, 0xcb7d, 0xdb5c, 0xeb3f, 0xfb1e, 0x8bf9, 0x9bd8, 0xabbb, 0xbb9a, 0x4a75, 0x5a54, 0x6a37, 0x7a16, 0x0af1, 0x1ad0, 0x2ab3, 0x3a92, 0xfd2e, 0xed0f, 0xdd6c, 0xcd4d, 0xbdaa, 0xad8b, 0x9de8, 0x8dc9, 0x7c26, 0x6c07, 0x5c64, 0x4c45, 0x3ca2, 0x2c83, 0x1ce0, 0x0cc1, 0xef1f, 0xff3e, 0xcf5d, 0xdf7c, 0xaf9b, 0xbfba, 0x8fd9, 0x9ff8, 0x6e17, 0x7e36, 0x4e55, 0x5e74, 0x2e93, 0x3eb2, 0x0ed1, 0x1ef0];\n\nif (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);\n\nmodule.exports = (0, _define_crc2.default)('ccitt', function (buf, previous) {\n  if (!_buffer.Buffer.isBuffer(buf)) buf = (0, _create_buffer2.default)(buf);\n\n  var crc = typeof previous !== 'undefined' ? ~~previous : 0xffff;\n\n  for (var index = 0; index < buf.length; index++) {\n    var byte = buf[index];\n    crc = (TABLE[(crc >> 8 ^ byte) & 0xff] ^ crc << 8) & 0xffff;\n  }\n\n  return crc;\n});\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _buffer = __webpack_require__(0);\n\nvar _create_buffer = __webpack_require__(2);\n\nvar _create_buffer2 = _interopRequireDefault(_create_buffer);\n\nvar _define_crc = __webpack_require__(3);\n\nvar _define_crc2 = _interopRequireDefault(_define_crc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=crc-16-modbus --generate=c`\nvar TABLE = [0x0000, 0xc0c1, 0xc181, 0x0140, 0xc301, 0x03c0, 0x0280, 0xc241, 0xc601, 0x06c0, 0x0780, 0xc741, 0x0500, 0xc5c1, 0xc481, 0x0440, 0xcc01, 0x0cc0, 0x0d80, 0xcd41, 0x0f00, 0xcfc1, 0xce81, 0x0e40, 0x0a00, 0xcac1, 0xcb81, 0x0b40, 0xc901, 0x09c0, 0x0880, 0xc841, 0xd801, 0x18c0, 0x1980, 0xd941, 0x1b00, 0xdbc1, 0xda81, 0x1a40, 0x1e00, 0xdec1, 0xdf81, 0x1f40, 0xdd01, 0x1dc0, 0x1c80, 0xdc41, 0x1400, 0xd4c1, 0xd581, 0x1540, 0xd701, 0x17c0, 0x1680, 0xd641, 0xd201, 0x12c0, 0x1380, 0xd341, 0x1100, 0xd1c1, 0xd081, 0x1040, 0xf001, 0x30c0, 0x3180, 0xf141, 0x3300, 0xf3c1, 0xf281, 0x3240, 0x3600, 0xf6c1, 0xf781, 0x3740, 0xf501, 0x35c0, 0x3480, 0xf441, 0x3c00, 0xfcc1, 0xfd81, 0x3d40, 0xff01, 0x3fc0, 0x3e80, 0xfe41, 0xfa01, 0x3ac0, 0x3b80, 0xfb41, 0x3900, 0xf9c1, 0xf881, 0x3840, 0x2800, 0xe8c1, 0xe981, 0x2940, 0xeb01, 0x2bc0, 0x2a80, 0xea41, 0xee01, 0x2ec0, 0x2f80, 0xef41, 0x2d00, 0xedc1, 0xec81, 0x2c40, 0xe401, 0x24c0, 0x2580, 0xe541, 0x2700, 0xe7c1, 0xe681, 0x2640, 0x2200, 0xe2c1, 0xe381, 0x2340, 0xe101, 0x21c0, 0x2080, 0xe041, 0xa001, 0x60c0, 0x6180, 0xa141, 0x6300, 0xa3c1, 0xa281, 0x6240, 0x6600, 0xa6c1, 0xa781, 0x6740, 0xa501, 0x65c0, 0x6480, 0xa441, 0x6c00, 0xacc1, 0xad81, 0x6d40, 0xaf01, 0x6fc0, 0x6e80, 0xae41, 0xaa01, 0x6ac0, 0x6b80, 0xab41, 0x6900, 0xa9c1, 0xa881, 0x6840, 0x7800, 0xb8c1, 0xb981, 0x7940, 0xbb01, 0x7bc0, 0x7a80, 0xba41, 0xbe01, 0x7ec0, 0x7f80, 0xbf41, 0x7d00, 0xbdc1, 0xbc81, 0x7c40, 0xb401, 0x74c0, 0x7580, 0xb541, 0x7700, 0xb7c1, 0xb681, 0x7640, 0x7200, 0xb2c1, 0xb381, 0x7340, 0xb101, 0x71c0, 0x7080, 0xb041, 0x5000, 0x90c1, 0x9181, 0x5140, 0x9301, 0x53c0, 0x5280, 0x9241, 0x9601, 0x56c0, 0x5780, 0x9741, 0x5500, 0x95c1, 0x9481, 0x5440, 0x9c01, 0x5cc0, 0x5d80, 0x9d41, 0x5f00, 0x9fc1, 0x9e81, 0x5e40, 0x5a00, 0x9ac1, 0x9b81, 0x5b40, 0x9901, 0x59c0, 0x5880, 0x9841, 0x8801, 0x48c0, 0x4980, 0x8941, 0x4b00, 0x8bc1, 0x8a81, 0x4a40, 0x4e00, 0x8ec1, 0x8f81, 0x4f40, 0x8d01, 0x4dc0, 0x4c80, 0x8c41, 0x4400, 0x84c1, 0x8581, 0x4540, 0x8701, 0x47c0, 0x4680, 0x8641, 0x8201, 0x42c0, 0x4380, 0x8341, 0x4100, 0x81c1, 0x8081, 0x4040];\n\nif (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);\n\nmodule.exports = (0, _define_crc2.default)('crc-16-modbus', function (buf, previous) {\n  if (!_buffer.Buffer.isBuffer(buf)) buf = (0, _create_buffer2.default)(buf);\n\n  var crc = typeof previous !== 'undefined' ? ~~previous : 0xffff;\n\n  for (var index = 0; index < buf.length; index++) {\n    var byte = buf[index];\n    crc = (TABLE[(crc ^ byte) & 0xff] ^ crc >> 8) & 0xffff;\n  }\n\n  return crc;\n});\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _buffer = __webpack_require__(0);\n\nvar _create_buffer = __webpack_require__(2);\n\nvar _create_buffer2 = _interopRequireDefault(_create_buffer);\n\nvar _define_crc = __webpack_require__(3);\n\nvar _define_crc2 = _interopRequireDefault(_define_crc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = (0, _define_crc2.default)('xmodem', function (buf, previous) {\n  if (!_buffer.Buffer.isBuffer(buf)) buf = (0, _create_buffer2.default)(buf);\n\n  var crc = typeof previous !== 'undefined' ? ~~previous : 0x0;\n\n  for (var index = 0; index < buf.length; index++) {\n    var byte = buf[index];\n    var code = crc >>> 8 & 0xFF;\n\n    code ^= byte & 0xFF;\n    code ^= code >>> 4;\n    crc = crc << 8 & 0xFFFF;\n    crc ^= code;\n    code = code << 5 & 0xFFFF;\n    crc ^= code;\n    code = code << 7 & 0xFFFF;\n    crc ^= code;\n  }\n\n  return crc;\n});\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _buffer = __webpack_require__(0);\n\nvar _create_buffer = __webpack_require__(2);\n\nvar _create_buffer2 = _interopRequireDefault(_create_buffer);\n\nvar _define_crc = __webpack_require__(3);\n\nvar _define_crc2 = _interopRequireDefault(_define_crc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=kermit --generate=c`\nvar TABLE = [0x0000, 0x1189, 0x2312, 0x329b, 0x4624, 0x57ad, 0x6536, 0x74bf, 0x8c48, 0x9dc1, 0xaf5a, 0xbed3, 0xca6c, 0xdbe5, 0xe97e, 0xf8f7, 0x1081, 0x0108, 0x3393, 0x221a, 0x56a5, 0x472c, 0x75b7, 0x643e, 0x9cc9, 0x8d40, 0xbfdb, 0xae52, 0xdaed, 0xcb64, 0xf9ff, 0xe876, 0x2102, 0x308b, 0x0210, 0x1399, 0x6726, 0x76af, 0x4434, 0x55bd, 0xad4a, 0xbcc3, 0x8e58, 0x9fd1, 0xeb6e, 0xfae7, 0xc87c, 0xd9f5, 0x3183, 0x200a, 0x1291, 0x0318, 0x77a7, 0x662e, 0x54b5, 0x453c, 0xbdcb, 0xac42, 0x9ed9, 0x8f50, 0xfbef, 0xea66, 0xd8fd, 0xc974, 0x4204, 0x538d, 0x6116, 0x709f, 0x0420, 0x15a9, 0x2732, 0x36bb, 0xce4c, 0xdfc5, 0xed5e, 0xfcd7, 0x8868, 0x99e1, 0xab7a, 0xbaf3, 0x5285, 0x430c, 0x7197, 0x601e, 0x14a1, 0x0528, 0x37b3, 0x263a, 0xdecd, 0xcf44, 0xfddf, 0xec56, 0x98e9, 0x8960, 0xbbfb, 0xaa72, 0x6306, 0x728f, 0x4014, 0x519d, 0x2522, 0x34ab, 0x0630, 0x17b9, 0xef4e, 0xfec7, 0xcc5c, 0xddd5, 0xa96a, 0xb8e3, 0x8a78, 0x9bf1, 0x7387, 0x620e, 0x5095, 0x411c, 0x35a3, 0x242a, 0x16b1, 0x0738, 0xffcf, 0xee46, 0xdcdd, 0xcd54, 0xb9eb, 0xa862, 0x9af9, 0x8b70, 0x8408, 0x9581, 0xa71a, 0xb693, 0xc22c, 0xd3a5, 0xe13e, 0xf0b7, 0x0840, 0x19c9, 0x2b52, 0x3adb, 0x4e64, 0x5fed, 0x6d76, 0x7cff, 0x9489, 0x8500, 0xb79b, 0xa612, 0xd2ad, 0xc324, 0xf1bf, 0xe036, 0x18c1, 0x0948, 0x3bd3, 0x2a5a, 0x5ee5, 0x4f6c, 0x7df7, 0x6c7e, 0xa50a, 0xb483, 0x8618, 0x9791, 0xe32e, 0xf2a7, 0xc03c, 0xd1b5, 0x2942, 0x38cb, 0x0a50, 0x1bd9, 0x6f66, 0x7eef, 0x4c74, 0x5dfd, 0xb58b, 0xa402, 0x9699, 0x8710, 0xf3af, 0xe226, 0xd0bd, 0xc134, 0x39c3, 0x284a, 0x1ad1, 0x0b58, 0x7fe7, 0x6e6e, 0x5cf5, 0x4d7c, 0xc60c, 0xd785, 0xe51e, 0xf497, 0x8028, 0x91a1, 0xa33a, 0xb2b3, 0x4a44, 0x5bcd, 0x6956, 0x78df, 0x0c60, 0x1de9, 0x2f72, 0x3efb, 0xd68d, 0xc704, 0xf59f, 0xe416, 0x90a9, 0x8120, 0xb3bb, 0xa232, 0x5ac5, 0x4b4c, 0x79d7, 0x685e, 0x1ce1, 0x0d68, 0x3ff3, 0x2e7a, 0xe70e, 0xf687, 0xc41c, 0xd595, 0xa12a, 0xb0a3, 0x8238, 0x93b1, 0x6b46, 0x7acf, 0x4854, 0x59dd, 0x2d62, 0x3ceb, 0x0e70, 0x1ff9, 0xf78f, 0xe606, 0xd49d, 0xc514, 0xb1ab, 0xa022, 0x92b9, 0x8330, 0x7bc7, 0x6a4e, 0x58d5, 0x495c, 0x3de3, 0x2c6a, 0x1ef1, 0x0f78];\n\nif (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);\n\nmodule.exports = (0, _define_crc2.default)('kermit', function (buf, previous) {\n  if (!_buffer.Buffer.isBuffer(buf)) buf = (0, _create_buffer2.default)(buf);\n\n  var crc = typeof previous !== 'undefined' ? ~~previous : 0x0000;\n\n  for (var index = 0; index < buf.length; index++) {\n    var byte = buf[index];\n    crc = (TABLE[(crc ^ byte) & 0xff] ^ crc >> 8) & 0xffff;\n  }\n\n  return crc;\n});\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _buffer = __webpack_require__(0);\n\nvar _create_buffer = __webpack_require__(2);\n\nvar _create_buffer2 = _interopRequireDefault(_create_buffer);\n\nvar _define_crc = __webpack_require__(3);\n\nvar _define_crc2 = _interopRequireDefault(_define_crc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Generated by `./pycrc.py --algorithm=table-drive --model=crc-24 --generate=c`\nvar TABLE = [0x000000, 0x864cfb, 0x8ad50d, 0x0c99f6, 0x93e6e1, 0x15aa1a, 0x1933ec, 0x9f7f17, 0xa18139, 0x27cdc2, 0x2b5434, 0xad18cf, 0x3267d8, 0xb42b23, 0xb8b2d5, 0x3efe2e, 0xc54e89, 0x430272, 0x4f9b84, 0xc9d77f, 0x56a868, 0xd0e493, 0xdc7d65, 0x5a319e, 0x64cfb0, 0xe2834b, 0xee1abd, 0x685646, 0xf72951, 0x7165aa, 0x7dfc5c, 0xfbb0a7, 0x0cd1e9, 0x8a9d12, 0x8604e4, 0x00481f, 0x9f3708, 0x197bf3, 0x15e205, 0x93aefe, 0xad50d0, 0x2b1c2b, 0x2785dd, 0xa1c926, 0x3eb631, 0xb8faca, 0xb4633c, 0x322fc7, 0xc99f60, 0x4fd39b, 0x434a6d, 0xc50696, 0x5a7981, 0xdc357a, 0xd0ac8c, 0x56e077, 0x681e59, 0xee52a2, 0xe2cb54, 0x6487af, 0xfbf8b8, 0x7db443, 0x712db5, 0xf7614e, 0x19a3d2, 0x9fef29, 0x9376df, 0x153a24, 0x8a4533, 0x0c09c8, 0x00903e, 0x86dcc5, 0xb822eb, 0x3e6e10, 0x32f7e6, 0xb4bb1d, 0x2bc40a, 0xad88f1, 0xa11107, 0x275dfc, 0xdced5b, 0x5aa1a0, 0x563856, 0xd074ad, 0x4f0bba, 0xc94741, 0xc5deb7, 0x43924c, 0x7d6c62, 0xfb2099, 0xf7b96f, 0x71f594, 0xee8a83, 0x68c678, 0x645f8e, 0xe21375, 0x15723b, 0x933ec0, 0x9fa736, 0x19ebcd, 0x8694da, 0x00d821, 0x0c41d7, 0x8a0d2c, 0xb4f302, 0x32bff9, 0x3e260f, 0xb86af4, 0x2715e3, 0xa15918, 0xadc0ee, 0x2b8c15, 0xd03cb2, 0x567049, 0x5ae9bf, 0xdca544, 0x43da53, 0xc596a8, 0xc90f5e, 0x4f43a5, 0x71bd8b, 0xf7f170, 0xfb6886, 0x7d247d, 0xe25b6a, 0x641791, 0x688e67, 0xeec29c, 0x3347a4, 0xb50b5f, 0xb992a9, 0x3fde52, 0xa0a145, 0x26edbe, 0x2a7448, 0xac38b3, 0x92c69d, 0x148a66, 0x181390, 0x9e5f6b, 0x01207c, 0x876c87, 0x8bf571, 0x0db98a, 0xf6092d, 0x7045d6, 0x7cdc20, 0xfa90db, 0x65efcc, 0xe3a337, 0xef3ac1, 0x69763a, 0x578814, 0xd1c4ef, 0xdd5d19, 0x5b11e2, 0xc46ef5, 0x42220e, 0x4ebbf8, 0xc8f703, 0x3f964d, 0xb9dab6, 0xb54340, 0x330fbb, 0xac70ac, 0x2a3c57, 0x26a5a1, 0xa0e95a, 0x9e1774, 0x185b8f, 0x14c279, 0x928e82, 0x0df195, 0x8bbd6e, 0x872498, 0x016863, 0xfad8c4, 0x7c943f, 0x700dc9, 0xf64132, 0x693e25, 0xef72de, 0xe3eb28, 0x65a7d3, 0x5b59fd, 0xdd1506, 0xd18cf0, 0x57c00b, 0xc8bf1c, 0x4ef3e7, 0x426a11, 0xc426ea, 0x2ae476, 0xaca88d, 0xa0317b, 0x267d80, 0xb90297, 0x3f4e6c, 0x33d79a, 0xb59b61, 0x8b654f, 0x0d29b4, 0x01b042, 0x87fcb9, 0x1883ae, 0x9ecf55, 0x9256a3, 0x141a58, 0xefaaff, 0x69e604, 0x657ff2, 0xe33309, 0x7c4c1e, 0xfa00e5, 0xf69913, 0x70d5e8, 0x4e2bc6, 0xc8673d, 0xc4fecb, 0x42b230, 0xddcd27, 0x5b81dc, 0x57182a, 0xd154d1, 0x26359f, 0xa07964, 0xace092, 0x2aac69, 0xb5d37e, 0x339f85, 0x3f0673, 0xb94a88, 0x87b4a6, 0x01f85d, 0x0d61ab, 0x8b2d50, 0x145247, 0x921ebc, 0x9e874a, 0x18cbb1, 0xe37b16, 0x6537ed, 0x69ae1b, 0xefe2e0, 0x709df7, 0xf6d10c, 0xfa48fa, 0x7c0401, 0x42fa2f, 0xc4b6d4, 0xc82f22, 0x4e63d9, 0xd11cce, 0x575035, 0x5bc9c3, 0xdd8538];\n\nif (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);\n\nmodule.exports = (0, _define_crc2.default)('crc-24', function (buf, previous) {\n  if (!_buffer.Buffer.isBuffer(buf)) buf = (0, _create_buffer2.default)(buf);\n\n  var crc = typeof previous !== 'undefined' ? ~~previous : 0xb704ce;\n\n  for (var index = 0; index < buf.length; index++) {\n    var byte = buf[index];\n    crc = (TABLE[(crc >> 16 ^ byte) & 0xff] ^ crc << 8) & 0xffffff;\n  }\n\n  return crc;\n});\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _buffer = __webpack_require__(0);\n\nvar _create_buffer = __webpack_require__(2);\n\nvar _create_buffer2 = _interopRequireDefault(_create_buffer);\n\nvar _define_crc = __webpack_require__(3);\n\nvar _define_crc2 = _interopRequireDefault(_define_crc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=crc-32 --generate=c`\nvar TABLE = [0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3, 0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91, 0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7, 0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b, 0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59, 0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433, 0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01, 0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65, 0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f, 0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683, 0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1, 0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5, 0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b, 0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d, 0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713, 0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21, 0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777, 0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45, 0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9, 0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d];\n\nif (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);\n\nmodule.exports = (0, _define_crc2.default)('crc-32', function (buf, previous) {\n  if (!_buffer.Buffer.isBuffer(buf)) buf = (0, _create_buffer2.default)(buf);\n\n  var crc = previous === 0 ? 0 : ~~previous ^ -1;\n\n  for (var index = 0; index < buf.length; index++) {\n    var byte = buf[index];\n    crc = TABLE[(crc ^ byte) & 0xff] ^ crc >>> 8;\n  }\n\n  return crc ^ -1;\n});\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _buffer = __webpack_require__(0);\n\nvar _create_buffer = __webpack_require__(2);\n\nvar _create_buffer2 = _interopRequireDefault(_create_buffer);\n\nvar _define_crc = __webpack_require__(3);\n\nvar _define_crc2 = _interopRequireDefault(_define_crc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Generated by `./pycrc.py --algorithm=table-driven --model=jam --generate=c`\nvar TABLE = [0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3, 0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91, 0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7, 0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b, 0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59, 0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433, 0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01, 0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65, 0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f, 0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683, 0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1, 0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5, 0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b, 0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d, 0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713, 0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21, 0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777, 0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45, 0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9, 0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d];\n\nif (typeof Int32Array !== 'undefined') TABLE = new Int32Array(TABLE);\n\nmodule.exports = (0, _define_crc2.default)('jam', function (buf) {\n  var previous = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n\n  if (!_buffer.Buffer.isBuffer(buf)) buf = (0, _create_buffer2.default)(buf);\n\n  var crc = previous === 0 ? 0 : ~~previous;\n\n  for (var index = 0; index < buf.length; index++) {\n    var byte = buf[index];\n    crc = TABLE[(crc ^ byte) & 0xff] ^ crc >>> 8;\n  }\n\n  return crc;\n});\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BaseCart_1 = __webpack_require__(1);\r\nvar VSCart = /** @class */ (function (_super) {\r\n    __extends(VSCart, _super);\r\n    function VSCart() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        //for (var i = 0; i < 8; i = (i + 1) | 0) {\r\n        //    this.prevBSSrc[i] = -1;\r\n        //}\r\n        //SRAMEnabled = SRAMCanSave;\r\n        _this.bankSelect = 0;\r\n        return _this;\r\n    }\r\n    VSCart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'VS Unisystem';\r\n        this.mapsBelow6000 = true;\r\n        if (this.chrRomCount > 0) {\r\n            this.CopyBanks(0, 0, 0, 1);\r\n        }\r\n        this.SetupBankStarts(0, (this.prgRomCount * 2) - 3, (this.prgRomCount * 2) - 2, (this.prgRomCount * 2) - 1);\r\n    };\r\n    VSCart.prototype.SetByte = function (clock, address, val) {\r\n        if (address == 0x4016) {\r\n            this.bankSelect = val;\r\n            var chrbank = (val >> 2) & 0x1;\r\n            if (this.prgRomCount > 2) {\r\n                this.SetupBankStarts(chrbank, (this.prgRomCount * 2) - 3, (this.prgRomCount * 2) - 2, (this.prgRomCount * 2) - 1);\r\n            }\r\n            this.Whizzler.DrawTo(clock);\r\n            this.CopyBanks(clock, 0, chrbank, 1);\r\n        }\r\n    };\r\n    return VSCart;\r\n}(BaseCart_1.BaseCart));\r\nexports.VSCart = VSCart;\r\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BaseCart_1 = __webpack_require__(1);\r\nvar KonamiVRC1Cart = /** @class */ (function (_super) {\r\n    __extends(KonamiVRC1Cart, _super);\r\n    function KonamiVRC1Cart() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.chrbank0 = 0;\r\n        _this.chrbank1 = 0;\r\n        return _this;\r\n    }\r\n    KonamiVRC1Cart.prototype.InitializeCart = function () {\r\n        this.mapperName = 'KonamiVRC1';\r\n        if (this.mapperId == 151) {\r\n            this.mapperName = 'KonamiVRC1 (VS)';\r\n        }\r\n        this.SetupBankStarts(0, 0, 0, this.prgRomCount * 2 - 1);\r\n        this.CopyBanks4k(0, 0, 0, 2);\r\n    };\r\n    KonamiVRC1Cart.prototype.SetByte = function (clock, address, data) {\r\n        switch (address & 0xF000) {\r\n            case 0x8000:\r\n                // 8kib prg rom at 8000\r\n                var bank8 = data & 0xF;\r\n                this.SetupBankStarts(bank8, this.currentA, this.currentC, this.currentE);\r\n                break;\r\n            case 0xA000:\r\n                // 8kib prg rom at A000\r\n                var bankA = data & 0xF;\r\n                this.SetupBankStarts(this.current8, bankA, this.currentC, this.currentE);\r\n                break;\r\n            case 0xC000:\r\n                // 8kib prg rom at C000\r\n                var bankC = data & 0xF;\r\n                this.SetupBankStarts(this.current8, this.currentA, bankC, this.currentE);\r\n                break;\r\n            case 0x9000:\r\n                this.Whizzler.DrawTo(clock);\r\n                if (!this.fourScreen) {\r\n                    this.Mirror(clock, (data & 1) + 1);\r\n                }\r\n                this.chrbank0 = (data & 2) << 3;\r\n                this.chrbank1 = (data & 4) << 2;\r\n                // this.CopyBanks4k(clock, 0, this.chrbank0 , 1);\r\n                // this.CopyBanks4k(clock, 1, this.chrbank1 , 1);\r\n                break;\r\n            case 0xE000:\r\n                // 8kib prg rom at 8000\r\n                this.CopyBanks4k(clock, 0, this.chrbank0 | (data & 0xF), 1);\r\n                break;\r\n            case 0xF000:\r\n                // 8kib prg rom at 8000\r\n                this.CopyBanks4k(clock, 1, this.chrbank1 | (data & 0xF), 1);\r\n                break;\r\n        }\r\n    };\r\n    return KonamiVRC1Cart;\r\n}(BaseCart_1.BaseCart));\r\nexports.KonamiVRC1Cart = KonamiVRC1Cart;\r\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DMCChannel = /** @class */ (function () {\r\n    function DMCChannel(bleeper, chan) {\r\n        this.freqs = [\r\n            0x1AC * 12,\r\n            0x17C * 12,\r\n            0x154 * 12,\r\n            0x140 * 12,\r\n            0x11E * 12,\r\n            0x0FE * 12,\r\n            0x0E2 * 12,\r\n            0x0D6 * 12,\r\n            0x0BE * 12,\r\n            0x0A0 * 12,\r\n            0x08E * 12,\r\n            0x080 * 12,\r\n            0x06A * 12,\r\n            0x054 * 12,\r\n            0x048 * 12,\r\n            0x036 * 12\r\n        ];\r\n        this.regs = {\r\n            ctrl: 0,\r\n            address: 0,\r\n            lengthCounter: 0\r\n        };\r\n        this.out = {\r\n            shifter: 0,\r\n            dac: 0,\r\n            buffer: 0,\r\n            active: false\r\n        };\r\n        this.REG0_FREQUENCY = 0x0F;\r\n        this.REG0_LOOP = 0x40;\r\n        this.REG0_IRQ_ENABLE = 0x80;\r\n        this.INP_STEP = 8;\r\n    }\r\n    DMCChannel.prototype.WriteRegister = function (register, data, time) {\r\n        switch (register) {\r\n            case 0:\r\n                this.regs.ctrl = data;\r\n                this.frequency = this.freqs[data & this.REG0_FREQUENCY];\r\n                break;\r\n            case 1:\r\n                this.out.dac = data & 0x7F;\r\n                this.curSample = this.out.dac * this.Volume;\r\n                break;\r\n            case 2:\r\n                this.regs.address = 0xC000 | (data << 6);\r\n                break;\r\n            case 3:\r\n                this.regs.lengthCounter = (data << 4) + 1;\r\n                break;\r\n        }\r\n    };\r\n    DMCChannel.prototype.Run = function (end_time) {\r\n        //throw new Error('Method not implemented.');\r\n    };\r\n    DMCChannel.prototype.UpdateAmplitude = function (new_amp) {\r\n        // throw new Error('Method not implemented.');\r\n    };\r\n    DMCChannel.prototype.EndFrame = function (time) {\r\n        //  throw new Error('Method not implemented.');\r\n    };\r\n    DMCChannel.prototype.FrameClock = function (time, step) {\r\n        //  throw new Error('Method not implemented.');\r\n    };\r\n    return DMCChannel;\r\n}());\r\nexports.DMCChannel = DMCChannel;\r\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ChiChiMachine_1 = __webpack_require__(7);\r\nvar ChiChiPPU_1 = __webpack_require__(6);\r\nvar ChiChiNsfMachine = /** @class */ (function (_super) {\r\n    __extends(ChiChiNsfMachine, _super);\r\n    function ChiChiNsfMachine() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ppu = new ChiChiPPU_1.ChiChiPPU();\r\n        _this.Cpu = new ChiChiNsfCPPU(_this.SoundBopper, _this.ppu);\r\n        _this.Cpu.ppu = _this.ppu;\r\n        _this.Cpu.frameFinished = function () { _this.FrameFinished(); };\r\n        return _this;\r\n    }\r\n    ChiChiNsfMachine.prototype.LoadNsf = function (rom) {\r\n        this.Cpu.LoadNsf(rom);\r\n    };\r\n    return ChiChiNsfMachine;\r\n}(ChiChiMachine_1.ChiChiMachine));\r\nexports.ChiChiNsfMachine = ChiChiNsfMachine;\r\nvar ChiChiNsfCPPU = /** @class */ (function (_super) {\r\n    __extends(ChiChiNsfCPPU, _super);\r\n    function ChiChiNsfCPPU() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.runNsfAt = 0;\r\n        _this.loadNsfAt = 0;\r\n        _this.initNsfAt = 0;\r\n        _this.firstSong = 0;\r\n        _this.songCount = 0;\r\n        return _this;\r\n    }\r\n    ChiChiNsfCPPU.prototype.__SetByte = function (address, data) {\r\n        var bank = 0;\r\n        this.Rams[address] = data;\r\n    };\r\n    ChiChiNsfCPPU.prototype.GetByte = function (address) {\r\n        return this.Rams[address];\r\n    };\r\n    ChiChiNsfCPPU.prototype.LoadNsf = function (nsfFile) {\r\n        var header = nsfFile.slice(0, 16);\r\n        var ramsBuffer = new SharedArrayBuffer(0x10000 * Uint8Array.BYTES_PER_ELEMENT);\r\n        this.Rams = new Uint8Array(ramsBuffer); // System.Array.init(vv, 0, System.Int32);\r\n        this.Rams.fill(0);\r\n        //        $000    5   STRING  'N', 'E', 'S', 'M', $1A(denotes an NES sound format file)\r\n        //        $005    1   BYTE    Version number (currently $01)\r\n        //        $006    1   BYTE    Total songs   (1 = 1 song, 2 = 2 songs, etc)\r\n        //        $007    1   BYTE    Starting song (1 = 1st song, 2 = 2nd song, etc)\r\n        //        $008    2   WORD    (lo, hi) load address of data ($8000 - FFFF)\r\n        //        $00A    2   WORD    (lo, hi) init address of data ($8000 - FFFF)\r\n        //        $00C    2   WORD    (lo, hi) play address of data ($8000 - FFFF)\r\n        //        $00E    32  STRING  The name of the song, null terminated\r\n        //        $02E    32  STRING  The artist, if known, null terminated\r\n        //        $04E    32  STRING  The copyright holder, null terminated\r\n        //        $06E    2   WORD    (lo, hi) Play speed, in 1 / 1000000th sec ticks, NTSC(see text)\r\n        //        $070    8   BYTE    Bankswitch init values (see text, and FDS section)\r\n        //        $078    2   WORD    (lo, hi) Play speed, in 1 / 1000000th sec ticks, PAL(see text)\r\n        //        $07A    1   BYTE    PAL/ NTSC bits\r\n        //        bit 0: if clear, this is an NTSC tune\r\n        //        bit 0: if set, this is a PAL tune\r\n        //        bit 1: if set, this is a dual PAL/ NTSC tune\r\n        //        bits 2- 7: not used.they * must * be 0\r\n        //        $07B    1   BYTE    Extra Sound Chip Support\r\n        //        bit 0: if set, this song uses VRC6 audio\r\n        //        bit 1: if set, this song uses VRC7 audio\r\n        //        bit 2: if set, this song uses FDS audio\r\n        //        bit 3: if set, this song uses MMC5 audio\r\n        //        bit 4: if set, this song uses Namco 163 audio\r\n        //        bit 5: if set, this song uses Sunsoft 5B audio\r\n        //        bits 6, 7: future expansion: they * must * be 0\r\n        //        $07C    1   BYTE    Extra Sound Chip Support (Cont.)\r\n        //        bits 0- 3: future expansion: they * must * be 0\r\n        //        bits 4- 7: unavailable(conflicts with NSF2 backwards compatibility)\r\n        //        $07D    3   ----    3 extra bytes for expansion (must be $00)\r\n        //        $080    nnn ----    The music program/ data follows until end of file\r\n        this.songCount = header[0x06];\r\n        this.firstSong = header[0x07];\r\n        this.loadNsfAt = (header[0x09] << 8) + header[0x08];\r\n        this.initNsfAt = (header[0x0B] << 8) + header[0x0A];\r\n        this.runNsfAt = (header[0x0D] << 8) + header[0x0C];\r\n        this.songName = header.slice(0x0E, 0x0e + 32).map(function (v) { return String.fromCharCode(v); }).join('').trim();\r\n        this.artist = header.slice(0x02E, 0x0e + 32).map(function (v) { return String.fromCharCode(v); }).join('').trim();\r\n        this.copyright = header.slice(0x4E, 0x0e + 32).map(function (v) { return String.fromCharCode(v); }).join('').trim();\r\n        var address = this.loadNsfAt;\r\n        nsfFile = nsfFile.slice(16, nsfFile.length);\r\n        for (var i = 0; i < nsfFile.length - 0x80; ++i) {\r\n            this.__SetByte(address + i, nsfFile[0x80 + i]);\r\n        }\r\n        this.InitNsf();\r\n    };\r\n    ChiChiNsfCPPU.prototype.InitNsf = function () {\r\n        this.SetByte(0x4017, 0x40);\r\n        this._accumulator = this.firstSong;\r\n        this._indexRegisterX = 0;\r\n        this._programCounter = this.initNsfAt;\r\n        debugger;\r\n        while (this._programCounter != this.runNsfAt) {\r\n            this.Step();\r\n        }\r\n        console.log(\"ready to play\");\r\n    };\r\n    return ChiChiNsfCPPU;\r\n}(ChiChiMachine_1.ChiChiCPPU));\r\nexports.ChiChiNsfCPPU = ChiChiNsfCPPU;\r\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar GameGenieCode = /** @class */ (function () {\r\n    function GameGenieCode() {\r\n        this.active = false;\r\n    }\r\n    return GameGenieCode;\r\n}());\r\nexports.GameGenieCode = GameGenieCode;\r\nvar GeniePatch = /** @class */ (function () {\r\n    function GeniePatch() {\r\n        this.address = -1;\r\n        this.data = -1;\r\n        this.compare = -1;\r\n        this.active = true;\r\n    }\r\n    return GeniePatch;\r\n}());\r\nexports.GeniePatch = GeniePatch;\r\nvar ChiChiCheats = /** @class */ (function () {\r\n    function ChiChiCheats() {\r\n    }\r\n    ChiChiCheats.prototype.gameGenieCodeToPatch = function (code) {\r\n        var hexCode = new Uint8Array(code.length);\r\n        var i = 0;\r\n        var patch = null;\r\n        for (var j = 0; j < code.length; ++j) {\r\n            var c = code.charAt(j);\r\n            var digit = 0;\r\n            switch (c) {\r\n                case 'A':\r\n                    digit = 0x0;\r\n                    break;\r\n                case 'P':\r\n                    digit = 0x1;\r\n                    break;\r\n                case 'Z':\r\n                    digit = 0x2;\r\n                    break;\r\n                case 'L':\r\n                    digit = 0x3;\r\n                    break;\r\n                case 'G':\r\n                    digit = 0x4;\r\n                    break;\r\n                case 'I':\r\n                    digit = 0x5;\r\n                    break;\r\n                case 'T':\r\n                    digit = 0x6;\r\n                    break;\r\n                case 'Y':\r\n                    digit = 0x7;\r\n                    break;\r\n                case 'E':\r\n                    digit = 0x8;\r\n                    break;\r\n                case 'O':\r\n                    digit = 0x9;\r\n                    break;\r\n                case 'X':\r\n                    digit = 0xA;\r\n                    break;\r\n                case 'U':\r\n                    digit = 0xB;\r\n                    break;\r\n                case 'K':\r\n                    digit = 0xC;\r\n                    break;\r\n                case 'S':\r\n                    digit = 0xD;\r\n                    break;\r\n                case 'V':\r\n                    digit = 0xE;\r\n                    break;\r\n                case 'N':\r\n                    digit = 0xF;\r\n                    break;\r\n            }\r\n            hexCode[i++] = digit;\r\n        }\r\n        // magic spell that makes the genie appear!\r\n        // http://tuxnes.sourceforge.net/gamegenie.html\r\n        var address = 0x8000 +\r\n            ((hexCode[3] & 7) << 12)\r\n            | ((hexCode[5] & 7) << 8) | ((hexCode[4] & 8) << 8)\r\n            | ((hexCode[2] & 7) << 4) | ((hexCode[1] & 8) << 4)\r\n            | (hexCode[4] & 7) | (hexCode[3] & 8);\r\n        var data = 0;\r\n        var compare = 0;\r\n        if (hexCode.length == 6) {\r\n            data =\r\n                ((hexCode[1] & 7) << 4) | ((hexCode[0] & 8) << 4)\r\n                    | (hexCode[0] & 7) | (hexCode[5] & 8);\r\n            patch = new GeniePatch();\r\n            patch.address = address;\r\n            patch.data = data;\r\n        }\r\n        else if (hexCode.length == 8) {\r\n            data =\r\n                ((hexCode[1] & 7) << 4) | ((hexCode[0] & 8) << 4)\r\n                    | (hexCode[0] & 7) | (hexCode[7] & 8);\r\n            compare =\r\n                ((hexCode[7] & 7) << 4) | ((hexCode[6] & 8) << 4)\r\n                    | (hexCode[6] & 7) | (hexCode[5] & 8);\r\n            patch = new GeniePatch();\r\n            patch.address = address;\r\n            patch.data = data;\r\n            patch.compare = compare;\r\n        }\r\n        else {\r\n            // not a genie code!  \r\n            patch = null;\r\n        }\r\n        return patch;\r\n    };\r\n    return ChiChiCheats;\r\n}());\r\nexports.ChiChiCheats = ChiChiCheats;\r\nvar XmlHolder = /** @class */ (function () {\r\n    function XmlHolder() {\r\n    }\r\n    XmlHolder.ggXML = \"\";\r\n    return XmlHolder;\r\n}());\r\n\n\n/***/ })\n/******/ ]);\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/Projects/2017/chichines/chichilib/chichi.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}